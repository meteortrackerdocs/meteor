openapi: 3.0.0
info:
  description: |-
    Вы просматриваете текущую **стабильную** документацию METEOR APIv3.

    ## Введение

    Документация для APIv3 написана в соответствии со спецификацией [OpenAPI 3.0](https://swagger.io/specification/).
    Вы можете просмотреть статическую версию этой документации на [веб-сайте](https://meteor-docs.gitbook.io/docs/api/introduction/)
    или интерактивную версию, представленную с помощью [OpenAPI Explorer](https://github.com/Rhosys/openapi-explorer/blob/main/README.md),
    в вашей системе METEOR в разделе `/api/docs`.
    В последнем случае вы можете опробовать различные конечные точки API, напрямую взаимодействующие с нашими данными METEOR.
    Кроме того, вы можете получить доступ к самому источнику спецификации в разделах `/api/v3/spec.json` и `/api/v3/spec.yml`.
    .

    APIv3 - это REST API для гипермедиа, сокращение от "Гипермедиа как движок состояния приложения" (HATEOAS).
    Это означает, что каждая конечная точка этого API будет иметь ссылки на другие ресурсы или действия, определенные в результирующем тексте.

    Эти связанные ресурсы и действия для любого данного ресурса будут зависеть от контекста. Например, отображаются только те действия, которые
    может выполнить прошедший проверку подлинности пользователь. Это может использоваться для динамического определения действий, которые пользователь может предпринять для любого
    данного ответа.

    Например, если вы загружаете рабочий пакет через [конечную точку рабочего пакета](https://meteor-docs.gitbook.io/docs/api/endpoints/work-packages/), ссылка `update` будет доступна только
    в том случае, если пользователь, прошедший проверку подлинности, получил разрешение на обновление рабочего пакета в назначенном проекте.

    ## HAL+JSON

    HAL - это простой формат, который предоставляет согласованный и простой способ создания гиперссылок между ресурсами в вашем API.
    Подробнее читайте в следующей спецификации: [https://tools.ietf.org/html/draft-kelly-json-hal-08](https://tools.ietf.org/html/draft-kelly-json-hal-08)

    **Реализация API METEOR в формате HAL+JSON** обогащает JSON и вводит несколько мета-свойств:

    - `_type` - указывает тип ресурса (например, рабочий пакет, проект)
    - `_links` - содержит все ссылки на связанные ресурсы и действия, доступные для данного ресурса
    - `_embedded` - содержит все внедренные объекты.

    HAL не гарантирует, что встроенные ресурсы будут представлены в полном объеме, они также могут быть
    представлены частично (например, некоторые свойства могут быть опущены).
    Однако в этом API у вас есть гарантия того, что всякий раз, когда ресурс **внедряется **, он внедряется в своем **полном представлении**.

    ## Структура ответа API

    Все ответы API содержат один объект HAL+JSON, даже коллекции объектов технически представлены
    одним объектом HAL+JSON, который сам содержит свои элементы. Более подробную информацию о коллекциях можно найти
    в разделе [Коллекции](https://meteor-docs.gitbook.io/docs/api/collections/).

    ## Аутентификация

    API поддерживает следующие схемы аутентификации: OAuth2, аутентификацию на основе сеанса и базовую аутентификацию.

    В зависимости от настроек экземпляра METEOR многие ресурсы могут быть доступны без проверки подлинности.
    В случае, если экземпляр требует проверки подлинности для всех запросов, клиент получит код состояния **HTTP 401**
    в ответ на любой запрос.

    В противном случае клиенты, не прошедшие проверку подлинности, имеют все разрешения анонимного пользователя.

    ### Проверка подлинности на основе сеанса

    Это означает, что вам необходимо войти в METEOR через веб-интерфейс, чтобы пройти аутентификацию в API.
    Этот метод хорошо подходит для клиентов, работающих в браузере, таких как React-клиент, встроенный в METEOR.

    В этом случае вам всегда нужно передавать HTTP-заголовок `X-Requested-With "XMLHttpRequest"` для аутентификации.

    ### Ключ API через Basic Auth

    Пользователи могут проходить аутентификацию в API версии 3, используя basic auth, используя имя пользователя `apikey` (не логин) и ключ API в качестве пароля.
    Пользователи могут найти свой ключ API на странице своей учетной записи.

    Пример:

    ```shell
    API_KEY=2519132cdf62dcf5a66fd96394672079f9e9cad1
    curl -u apikey:$API_KEY https://example.u-meteor.ru/op/api/v3/users/42
    ```

    ## Аутентификация # OAuth2.0

    METEOR поддерживает аутентификацию и авторизацию с помощью OAuth2 с помощью *Потока кода авторизации*, а также режимов работы *Учетных данных клиента*.

    Для начала вам сначала необходимо зарегистрировать приложение в разделе администрирования METEOR OAuth вашей установки.
    Это сохранит запись для вашего приложения с уникальным идентификатором клиента (`client_id`) и сопутствующим секретным ключом (`client_secret`).

    Затем вы можете использовать одно из следующих руководств для выполнения поддерживаемых процессов OAuth 2.0.:

    - [Передача кода авторизации](https://oauth.net/2/grant-types/authorization-code)

    - [Передача кода авторизации с помощью PKCE](https://doorkeeper.gitbook.io/guides/ruby-on-rails/pkce-flow), рекомендуется для клиентов, которые не могут сохранить конфиденциальность client_secret.

    - [Учетные данные клиента](https://oauth.net/2/grant-types/client-credentials/) - Требуется, чтобы приложение было привязано к пользователю, выдающему себя за пользователя, для закрытого доступа

    ### Почему не использовать имя пользователя и пароль?

    Самый простой способ выполнить базовую авторизацию - использовать имя пользователя и пароль естественным образом.
    Однако в прошлом METEOR уже поддерживал API-ключи для API версии 2, хотя и не через basic auth.

    Прямое использование ** имени пользователя и пароля ** будет иметь некоторые преимущества:

    * Это интуитивно понятно для пользователя, которому затем просто нужно будет указать их точно так же, как при входе в METEOR.

    * Никакой дополнительной логики для управления токенами не требуется.

    С другой стороны, использование ** ключей API ** также имеет некоторые преимущества, вот почему мы пошли на это:

    * В случае взлома при сохранении на небезопасном клиенте пользователю нужно только повторно создать ключ API, вместо того чтобы менять свой пароль.

    * Они, естественно, длинные и случайной формы, что делает их неуязвимыми для атак по словарю и, в целом, их сложнее взломать.

    Самое главное, что у пользователей может не быть пароля для начала. Особенно если они зарегистрировались
    через провайдера OpenID Connect.

    ## Совместное использование ресурсов разных источников (CORS)

    По умолчанию API METEOR не отвечает никакими заголовками CORS.
    Если вы хотите разрешить междоменные вызовы AJAX для вашего экземпляра METEOR, вам необходимо разрешить возвращаемые заголовки CORS.

    Пожалуйста, ознакомьтесь с [нашей документацией по настройкам API](https://meteor-docs.gitbook.io/docs/system-admin-guide/api-and-webhooks/) о
    том, как выборочно включить CORS.

    ## Разрешенные методы HTTP

    - `GET` - Получение отдельного ресурса или коллекции ресурсов

    - `POST` - Создание нового ресурса или выполнение

    - `PATCH` - Обновление ресурса

    - `DELETE` - Удаление ресурса

    ## Сжатие

    Ответы сжимаются по запросу клиента. В настоящее время поддерживаются [gzip](https://www.gzip.org/) и [deflate](https://tools.ietf.org/html/rfc1951)
    . Клиент сигнализирует о желаемом сжатии, устанавливая заголовок [`Accept-Encoding`](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3).
    Если заголовок `Accept-Encoding` не отправлен, предполагается `Accept-Encoding: identity`, что приведет к тому, что API ответит без сжатия.
  title: METEOR API V3 (Stable)
  version: '3'
servers:
  - url: https://example.u-meteor.ru/op
    description: Example server
paths:
  /api/v3:
    get:
      summary: Просмотреть корень
      operationId: view_root
      description: Возвращает корневой ресурс, содержащий основную информацию об экземпляре сервера и набор полезных ссылок.
      tags:
        - Корень
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RootModel'
  /api/v3/actions:
    get:
      parameters:
        - description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            + id: Возвращает только действие, имеющее идентификатор, или все действия, кроме тех, у которых есть идентификаторы.
          example: '[{ "id": { "operator": "=", "values": ["memberships/create"] }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + *Сортировка пока не поддерживается*
          example: '[["id", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/actions/work_packages/create
                              title: Add work package
                          _type: Action
                          description: Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission
                          id: work_packages/create
                          modules:
                            - work_packages
                          name: Add work package
                        - _links:
                            self:
                              href: /api/v3/actions/work_packages/assign_versions
                              title: Assigning version
                          _type: Action
                          description: Assigning a work package to a version when creating/updating a work package. Only principals having this permission can assign a value to the version property of the work package resource.
                          id: work_packages/assign_versions
                          modules:
                            - work_packages
                            - versions
                          name: Assign version
                    _links:
                      self:
                        href: /api/v3/actions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/List_actionsModel'
          description: OK
          headers: {}
      tags:
        - Действия и возможности
      description: |-
        Возвращает набор действий. Клиент может выбрать фильтрацию действий аналогично тому, как фильтруются рабочие пакеты.
        В дополнение к предоставленным фильтрам сервер сократит результирующий набор, чтобы он содержал только те действия, для которых запрашивающий клиент
        имеет достаточные разрешения.
      operationId: List_actions
      summary: Перечислите действия
  /api/v3/actions/{id}:
    get:
      parameters:
        - description: идентификатор действия, который является названием действия
          example: work_packages/create
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/actions/work_packages/create
                        title: Add work package
                    _type: Action
                    description: Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission
                    id: work_packages/create
                    modules:
                      - work_packages
                    name: Add work package
              schema:
                $ref: '#/components/schemas/View_actionModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the action does not exist.
          headers: {}
      tags:
        - Действия и возможности
      description: Возвращает отдельное действие.
      operationId: View_action
      summary: Просмотр действия
  /api/v3/activities/{id}:
    get:
      parameters:
        - description: Идентификатор активности
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/activity/1
                        title: Priority changed from High to Low
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard - admin
                      workPackage:
                        href: /api/v3/work_packages/1
                        title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                    _type: Activity::Comment
                    comment:
                      format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    createdAt: '2014-05-21T08:51:20.396Z'
                    updatedAt: '2014-05-21T09:14:02.300Z'
                    details:
                      - format: markdown
                        html: <p>Lorem ipsum dolor sit amet.</p>
                        raw: Lorem ipsum dolor sit amet.
                    id: 1
                    version: 31
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: OK
          headers: {}
      tags:
        - Деятельность
      description: ''
      operationId: View_activity
      summary: Просмотр активности
    patch:
      parameters:
        - description: Идентификатор активности
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/activity/1
                        title: Priority changed from High to Low
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard - admin
                      workPackage:
                        href: /api/v3/work_packages/1
                        title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                    _type: Activity::Comment
                    comment:
                      format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    createdAt: '2014-05-21T08:51:20.396Z'
                    updatedAt: '2014-05-21T09:14:02.776Z'
                    details:
                      - format: markdown
                        html: <p>Lorem ipsum dolor sit amet.</p>
                        raw: Lorem ipsum dolor sit amet.
                    id: 1
                    version: 31
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the comment of this journal entry.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit journals
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyIsReadOnly
                    message: The ID of an activity can't be changed.
          description: Returned if the client tries to modify a read-only property.
          headers: {}
      tags:
        - Деятельность
      description: Обновляет комментарий к действию и, в случае успеха, возвращает обновленное действие.
      operationId: Update_activity
      requestBody:
        content:
          application/json:
            schema:
              example:
                comment:
                  raw: The updated comment
              properties:
                comment:
                  properties:
                    raw:
                      type: string
                  type: object
              type: object
      summary: Активность по обновлению
  /api/v3/attachments:
    post:
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                message: The request could not be parsed as JSON.
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** At least one permission in any project: edit work package, add work package, edit messages, edit wiki pages (plugins might extend this list)
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: File is too large (maximum size is 5242880 Bytes).
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      tags:
        - Вложения
      description: |-
        Клиенты могут сначала создавать вложения без контейнера, а затем прикреплять их.
        Это полезно, если контейнер не существует на момент загрузки вложения.
        После загрузки клиент может запросить такие бесконтейнерные вложения для любого подходящего ресурса (например, WorkPackage) при последующих запросах.
        Загрузка и запрос *должны выполняться для одной и той же учетной записи пользователя. Вложения, загруженные другим пользователем, не могут быть востребованы, а
        после того, как они были востребованы для ресурса, они не могут быть востребованы другим пользователем.

        Запрос на загрузку должен быть типа `multipart/form-data`, состоящий ровно из двух частей.

        Первая часть должна называться `metadata`. Ожидается, что его типом содержимого будет `application/json`,
        тело должно быть одним объектом JSON, содержащим, по крайней мере, `fileName` и, необязательно, `description` вложений.

        Вторая часть *должна* называться `file`, ее тип содержимого *должен* соответствовать типу mime файла.
        Тело *должно* быть исходным содержимым файла.
        Обратите внимание, что в `Content-Disposition` этой части должно быть указано `filename`, хотя оно будет проигнорировано.
        Вместо этого будет использоваться `fileName` в формате JSON части метаданных.
      operationId: create_attachment
      summary: Создать вложение
  /api/v3/attachments/{id}:
    delete:
      parameters:
        - description: Идентификатор вложения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: |-
            Returned if the attachment was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned along with an appropriate HTTP status.
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit permission for the container of the attachment or being the author for attachments without container

            *Note that you will only receive this error, if you are at least allowed to see the attachment.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified attachment does not exist.
          description: |-
            Returned if the attachment does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view permission for the container of the attachment or being the author for attachments without container

            *Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Вложения
      description: Безвозвратно удаляет указанное вложение.
      operationId: delete_attachment
      summary: Удалить вложение
    get:
      parameters:
        - description: Идентификатор вложения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified attachment does not exist.
          description: |-
            Returned if the attachment does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view permission for the container of the attachment or being the author for attachments without container

            *Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      tags:
        - Вложения
      description: ''
      operationId: view_attachment
      summary: Просмотр вложения
  /api/v3/budgets/{id}:
    get:
      parameters:
        - description: Идентификатор бюджета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/budgets/1
                        title: Q3 2015
                    _type: Budget
                    id: 1
                    subject: Q3 2015
              schema:
                $ref: '#/components/schemas/BudgetModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this budget.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages **or** view budgets (on the budgets project)
          headers: {}
      tags:
        - Бюджеты
      description: ''
      operationId: view_Budget
      summary: просмотр бюджета
  /api/v3/capabilities:
    get:
      parameters:
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).

            + действие: Получение всех возможностей определенного действия

            + участник: Получение всех возможностей участника

            + контекст: Получение всех возможностей в контексте. Обратите внимание, что для контекста проекта клиенту необходимо указать `p{id}`, например `p5`, а для глобального контекста - `g`
          example: '[{ "principal": { "operator": "=", "values": ["1"] }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: |-
            JSON, определяющий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по идентификатору возможностей
          example: '[["id", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            action:
                              href: /api/v3/actions/work_packages/create
                              title: Add work package
                            context:
                              href: /api/v3/projects/123
                              title: A project
                            principal:
                              href: /api/v3/users/567
                              title: Some user
                            self:
                              href: /api/v3/capabilities/work_packages/create/p123-567
                          _type: Capability
                          id: work_packages/create/p123-567
                        - _links:
                            action:
                              href: /api/v3/actions/work_packages/assignee
                            context:
                              href: /api/v3/projects/123
                              title: A project
                            principal:
                              href: /api/v3/users/567
                              title: Some user
                            self:
                              href: /api/v3/capabilities/work_packages/assignee/p123-567
                          _type: Capability
                          id: work_packages/assignee/p123-567
                        - _links:
                            action:
                              href: /api/v3/actions/memberships/create
                            context:
                              href: /api/v3/projects/345
                              title: A project
                            principal:
                              href: /api/v3/users/821
                              title: Some user
                            self:
                              href: /api/v3/capabilities/memberships/create/p345-821
                              title: Create members
                          _type: Capability
                          id: memberships/create/p345-821
                        - _links:
                            context:
                              href: /api/v3/capabilities/context/global
                              title: Global
                            principal:
                              href: /api/v3/users/567
                              title: Some user
                            self:
                              href: /api/v3/capabilities/users/delete/g-567
                              title: Delete user
                          _type: Capability
                          id: users/delete/g-567
                    _links:
                      changeSize:
                        href: /api/v3/capabilities?pageSize={size}
                        templated: true
                      jumpTo:
                        href: /api/v3/capabilities?offset={offset}
                        templated: true
                      self:
                        href: /api/v3/capabilities
                    _type: Collection
                    count: 4
                    total: 4
              schema:
                $ref: '#/components/schemas/List_capabilitiesModel'
          description: OK
          headers: {}
      tags:
        - Действия и возможности
      description: Возвращает набор действий, назначенных участнику в контексте. Клиент может выбрать фильтрацию действий аналогично тому, как фильтруются рабочие пакеты. В дополнение к предоставленным фильтрам сервер сократит результирующий набор, чтобы он содержал только те действия, для которых запрашивающий клиент имеет достаточные разрешения
      operationId: List_capabilities
      summary: Перечислите возможности
  /api/v3/capabilities/context/global:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/capabilities/context/global
                    _type: CapabilityContext::Global
                    id: global
              schema:
                $ref: '#/components/schemas/View_global_contextModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the action does not exist.
          headers: {}
      tags:
        - Действия и возможности
      description: Возвращает глобальный контекст возможностей. Этот контекст необходим для последовательной привязки к контексту, даже если контекст не является проектом.
      operationId: View_global_context
      summary: Просмотр глобального контекста
  /api/v3/capabilities/{id}:
    get:
      parameters:
        - description: идентификатор возможности
          example: work_packages/create/p123-567
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      action:
                        href: /api/v3/actions/work_packages/create
                        title: Add work package
                      context:
                        href: /api/v3/projects/123
                        title: A project
                      principal:
                        href: /api/v3/users/567
                        title: Some user
                      self:
                        href: /api/v3/capabilities/work_packages/create/p123-567
                    _type: Capability
                    id: work_packages/create/p123-567
              schema:
                $ref: '#/components/schemas/View_capabilitiesModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the capability does not exist.
          headers: {}
      tags:
        - Действия и возможности
      description: ''
      operationId: View_capabilities
      summary: Возможности просмотра
  /api/v3/categories/{id}:
    get:
      parameters:
        - description: Идентификатор категории
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      defaultAssignee:
                        href: /api/v3/users/42
                        title: John Sheppard
                      project:
                        href: /api/v3/projects/11
                        title: Example project
                      self:
                        href: /api/v3/categories/10
                        title: Category with assignee
                    _type: Category
                    id: 10
                    name: Foo
              schema:
                $ref: '#/components/schemas/CategoryModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified category does not exist.
          description: |-
            Returned if the category does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project (defining the category)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a category. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Категории
      description: ''
      operationId: View_Category
      summary: Просмотр категории
  /api/v3/configuration:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Configuration
                    _links:
                      self:
                        href: /api/v3/configuration
                      userPreferences:
                        href: /api/v3/my_preferences
                    maximumAttachmentFileSize: 5242880
                    hostName: example.com:8080
                    perPageOptions:
                      - 1
                      - 10
                      - 100
                    activeFeatureFlags:
                      - aFeatureFlag
                      - anotherFeatureFlag
              schema:
                $ref: '#/components/schemas/ConfigurationModel'
          description: OK
          headers: {}
      tags:
        - Конфигурация
      description: ''
      operationId: View_configuration
      summary: Просмотр конфигурации
  /api/v3/custom_actions/{id}:
    get:
      summary: Получите пользовательское действие
      tags:
        - Пользовательские действия
      description: Извлекает пользовательское действие по идентификатору.
      operationId: get_custom_action
      parameters:
        - name: id
          description: Идентификатор пользовательского действия для извлечения
          in: path
          required: true
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages in any project
        '404':
          description: Returned if the custom action does not exist.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
  /api/v3/custom_actions/{id}/execute:
    post:
      parameters:
        - description: Идентификатор выполняемого пользовательского действия
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages - Additional permissions might be required based on the custom action.
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the custom action does not exist.
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '409':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:UpdateConflict
                    message: Couldn't update the resource because of conflicting modifications.
          description: Returned if the client provided an outdated lockVersion or no lockVersion at all.
          headers: {}
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
          description: Returned if the custom action was not executed successfully e.g. when a constraint on a work package property was violated.
          headers: {}
      tags:
        - Пользовательские действия
      description: |-
        ОТПРАВКА в эту конечную точку выполняет пользовательское действие с рабочим пакетом, указанным в полезной нагрузке. Измененный рабочий пакет будет возвращен. Чтобы избежать выполнения
        пользовательского действия без ведома уже произошедшего изменения, клиент должен предоставить текущую версию блокировки рабочего пакета.
      operationId: Execute_custom_action
      requestBody:
        content:
          application/json:
            schema:
              example:
                _links:
                  workPackage:
                    href: /api/v3/work_packages/42
                lockVersion: '3'
              properties:
                _links:
                  properties:
                    workPackage:
                      properties:
                        href:
                          type: string
                      type: object
                  type: object
                lockVersion:
                  type: string
              type: object
      summary: Выполнить пользовательское действие
  /api/v3/custom_options/{id}:
    get:
      parameters:
        - description: Идентификатор пользовательского параметра
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/custom_options/1
                    _type: CustomOption
                    value: Foo
              schema:
                $ref: '#/components/schemas/CustomOptionModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the custom option does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project the custom option's custom field is active in.
          headers: {}
      tags:
        - Значения доп. полей
      description: ''
      operationId: View_Custom_Option
      summary: Просмотр пользовательской опции
  /api/v3/days/non_working:
    get:
      summary: Содержит список всех нерабочих дней
      operationId: list_non_working_days
      tags:
        - График работы
      description: |-
        Содержит список всех разовых нерабочих дней, таких как праздничные дни.
        В нем не указаны нерабочие дни недели, такие как каждая суббота, воскресенье.
        Для перечисления выходных дней следует использовать конечную точку `/api/v3/days`.

        По умолчанию возвращаются все дни, начиная с текущего года.
      parameters:
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.

            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + дата: включающий интервал дат для охвата дней поиска. Если
            не указано иное, то дефолт осуществляется с начала до конца текущего года.

              Пример: `{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }`
              вернут дни с 5 по 26 мая 2022 года включительно.
          example: '[{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }]'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayCollectionModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    post:
      summary: Создает нерабочий день (НЕ РЕАЛИЗОВАНО)
      operationId: create_non_working_day
      tags:
        - График работы
      description: |-
        **(НЕ РЕАЛИЗОВАНО)**
        День помечается как нерабочий.

        Примечание: создание нерабочего дня не повлияет на даты начала и окончания
        выполнения рабочих заданий, но повлияет на их продолжительность.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonWorkingDayModel'
            example:
              _type: NonWorkingDay
              date: '2022-12-25'
              name: Christmas
      responses:
        '201':
          description: Non-working day created.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: Returned if the client does not have sufficient permissions.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: You are not authorized to access this resource.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/days/non_working/{date}:
    get:
      summary: Просмотр нерабочего дня
      operationId: view_non_working_day
      tags:
        - График работы
      description: Возвращает информацию о нерабочем дне для заданной даты.
      parameters:
        - name: date
          in: path
          required: true
          description: Дату нерабочего дня можно просмотреть в формате ISO 8601.
          schema:
            type: string
            format: date
          example: '2022-05-06'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          description: Returned if the given date is not a non-working day.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
    patch:
      summary: Обновление атрибутов нерабочего дня (НЕ РЕАЛИЗОВАНО)
      operationId: update_non_working_day
      tags:
        - График работы
      description: |-
        **(НЕ РЕАЛИЗОВАНО)**
        Обновите информацию о нерабочем дне для заданной даты.
      parameters:
        - name: date
          in: path
          required: true
          description: Дату нерабочего дня можно просмотреть в формате ISO 8601.
          schema:
            type: string
            format: date
          example: '2022-05-06'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonWorkingDayModel'
            example:
              _type: NonWorkingDay
              date: '2022-05-01'
              name: Labour day
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          description: Returned if the given date is not a non-working day.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    delete:
      summary: Отменяет нерабочий день (НЕ РЕАЛИЗОВАНО)
      operationId: delete_non_working_day
      tags:
        - График работы
      description: |-
        **(НЕ РЕАЛИЗОВАНО)**
        Удаляет нерабочий день на указанную дату.

        Примечание: удаление нерабочего дня не повлияет на даты начала и окончания
        рабочих пакетов, но повлияет на их продолжительность.
      parameters:
        - name: date
          in: path
          required: true
          description: Дату нерабочего дня можно просмотреть в формате ISO 8601.
          schema:
            type: string
            format: date
          example: '2022-05-06'
      responses:
        '204':
          description: |-
            No Content.

            The operation succeeded.
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          description: Returned if the given date is not a non-working day.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/days/week:
    get:
      summary: Перечисляет дни недели
      operationId: list_week_days
      tags:
        - График работы
      description: Содержит список дней недели с информацией о расписании работы.
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayCollectionModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
    patch:
      summary: Обновление дней недели (НЕ РЕАЛИЗОВАНО)
      operationId: update_week_days
      tags:
        - График работы
      description: |-
        ** (НЕ РЕАЛИЗОВАНО)**
        Обновите информацию о расписании работы на несколько дней недели.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeekDayCollectionWriteModel'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayCollectionModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          description: Returned if a week day resource can not be found.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/days/week/{day}:
    get:
      summary: Просмотр дня недели
      operationId: view_week_day
      tags:
        - График работы
      description: Просмотр дня недели и его атрибутов.
      parameters:
        - name: day
          in: path
          required: true
          description: Рабочий день с 1 по 7. 1 - понедельник. 7 - воскресенье.
          schema:
            type: integer
            minimum: 1
            maximum: 7
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          description: Returned if the day is out of the 1-7 range.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
    patch:
      summary: Обновление атрибутов дня недели (НЕ РЕАЛИЗОВАНО)
      operationId: update_week_day
      description: |-
        **(НЕ РЕАЛИЗОВАНО)**
        День недели становится рабочим или нерабочим днем.

        Примечание: изменение атрибута рабочего дня недели не повлияет на даты начала и
        окончания рабочих пакетов, но повлияет на их атрибут продолжительности.
      tags:
        - График работы
      parameters:
        - name: day
          in: path
          required: true
          description: Рабочий день с 1 по 7. 1 - понедельник. 7 - воскресенье.
          schema:
            type: integer
            minimum: 1
            maximum: 7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeekDayWriteModel'
            example:
              _type: WeekDay
              working: false
      responses:
        '200':
          description: |-
            Update succeeded.

            Response will include the week day with updated attributes.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: Returned if the client does not have sufficient permissions.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: You are not authorized to access this resource.
        '404':
          description: Returned if the day is out of the 1-7 range.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/days:
    get:
      summary: Перечисляет дни
      operationId: list_days
      tags:
        - График работы
      description: |-
        Выводит информацию о днях для заданного интервала дат.

        По умолчанию возвращаются все дни с начала текущего месяца до конца следующего
        .
      parameters:
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.

            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + дата: включающий интервал дат для охвата дней поиска. Если
            не указано иное, по умолчанию используется период с начала текущего месяца до конца
            следующего.

              Пример: `{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }`
              возвращает дни с 5 по 26 мая 2022 года включительно.

            + рабочие: при значении "true" возвращает только рабочие дни. При значении "false"
            возвращает только нерабочие дни (выходные дни и нерабочие выходные дни).
              Если не указано иное, возвращается как в рабочие, так и в нерабочие дни.

              Пример: `{ "working": { "operator": "=", "values": ["t"] } }`
              исключил бы из ответа нерабочие дни.
          example: '[{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }, { "working": { "operator": "=", "values": ["f"] } }]'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayCollectionModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/days/{date}:
    get:
      summary: День просмотра
      operationId: view_day
      tags:
        - График работы
      description: Просмотрите информацию о дне для заданной даты.
      parameters:
        - name: date
          in: path
          required: true
          description: Дату нерабочего дня можно просмотреть в формате ISO 8601.
          schema:
            type: string
            format: date
          example: '2022-05-06'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
  /api/v3/documents:
    get:
      parameters:
        - description: Номер страницы в запрашиваемой коллекции.
          example: '25'
          in: query
          name: offset
          required: false
          schema:
            default: 1
            type: integer
        - description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу

            + created_at: Сортировка по дате и времени создания документа
          example: '[["created_at", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            addAttachment:
                              href: /api/v3/documents/1/attachments
                              method: post
                            attachments:
                              href: /api/v3/documents/1/attachments
                            project:
                              href: /api/v3/projects/19
                              title: Some project
                            self:
                              href: /api/v3/documents/1
                              title: Some document
                          _type: Document
                          createdAt: '2018-12-10T20:53:39.184Z'
                          description:
                            format: markdown
                            html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                            raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                          id: 1
                          title: Some other document
                        - _links:
                            addAttachment:
                              href: /api/v3/documents/2/attachments
                              method: post
                            attachments:
                              href: /api/v3/documents/2/attachments
                            project:
                              href: /api/v3/projects/29
                              title: Some other project
                            self:
                              href: /api/v3/documents/2
                              title: Some other document
                          _type: Document
                          createdAt: '2018-12-10T20:55:54.049Z'
                          description:
                            format: markdown
                            html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                            raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                          id: 2
                          title: Some other document
                    _links:
                      changeSize:
                        href: /api/v3/documents?offset=1&pageSize=%7Bsize%7D
                        templated: true
                      jumpTo:
                        href: /api/v3/documents?offset=%7Boffset%7D&pageSize=30
                        templated: true
                      self:
                        href: /api/v3/documents?offset=1&pageSize=30
                    _type: Collection
                    count: 2
                    offset: 1
                    pageSize: 30
                    total: 2
              schema:
                $ref: '#/components/schemas/DocumentsModel'
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                    message:
                      - Фильтры Invalid filter does not exist.
          description: Returned if the client sends invalid request parameters e.g. filters
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
          description: Returned if the client is not logged in and login is required.
          headers: {}
      tags:
        - Документы
      description: Возвращаемые документы зависят от предоставленных параметров, а также от разрешений запрашивающего пользователя.
      operationId: List_Documents
      summary: Список документов
  /api/v3/documents/{id}:
    get:
      parameters:
        - description: Идентификатор документа
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      attachments:
                        _embedded...:
                          elements: []
                        _links:
                          self:
                            href: /api/v3/documents/1/attachments
                        _type: Collection
                        count: 2
                        total: 2
                      project:
                        _type: Project...
                    _links:
                      addAttachment:
                        href: /api/v3/documents/1/attachments
                        method: post
                      attachments:
                        href: /api/v3/documents/1/attachments
                      project:
                        href: /api/v3/projects/19
                        title: Some project
                      self:
                        href: /api/v3/documents/1
                        title: Some document
                    _type: Document
                    createdAt: '2018-12-10T20:53:39.698Z'
                    description:
                      format: markdown
                      html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                      raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                    id: 1
                    title: Some other document
              schema:
                $ref: '#/components/schemas/DocumentModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the document does not exist or if the user does not have permission to view it.

            **Required permission** `view documents` in the project the document belongs to
          headers: {}
      tags:
        - Документы
      description: ''
      operationId: View_document
      summary: Просмотр документа
  /api/v3/example/form:
    post:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          status:
                            href: /api/v3/statuses/1
                        _type: Example
                        lockVersion: 5
                        subject: An example title
                      schema:
                        _links:
                          self:
                            href: /api/v3/example/schema
                        _type: Schema
                        lockVersion:
                          type: Integer
                          writable: false
                        status:
                          _embedded:
                            allowedValues:
                              - _links:
                                  self:
                                    href: /api/v3/statuses/1
                                _type: Status
                                createdAt: '2014-05-21T08:51:20.396Z'
                                defaultDoneRatio: 0
                                id: 1
                                isClosed: false
                                isDefault: true
                                name: New
                                position: 1
                                updatedAt: '2014-05-21T09:12:00.647Z'
                              - _links:
                                  self:
                                    href: /api/v3/statuses/2
                                _type: Status
                                createdAt: '2014-05-21T08:51:20.396Z'
                                defaultDoneRatio: 100
                                id: 2
                                isClosed: true
                                isDefault: false
                                name: Closed
                                position: 2
                                updatedAt: '2014-05-21T09:12:00.647Z'
                          _links:
                            allowedValues:
                              - href: /api/v3/statuses/1
                                title: New
                              - href: /api/v3/statuses/2
                                title: Closed
                          type: Status
                        subject:
                          maxLength: 255
                          minLength: 1
                          type: String
                      validationErrors:
                        subject:
                          _type: Error
                          errorIdentifier: urn:meteor-org:api:v3:errors:BadExampleError
                          message: For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.
                    _links:
                      commit:
                        href: /api/v3/example
                        method: PATCH
                      previewMarkup:
                        href: /api/v3/render/markdown
                        method: POST
                      self:
                        href: /api/v3/example/form
                      validate:
                        href: /api/v3/example/form
                        method: POST
                    _type: Form
              schema:
                $ref: '#/components/schemas/Example_FormModel'
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                    message: The request body was neither empty, nor did it contain a single JSON object.
          description: |-
            Occurs when the client did not send a valid JSON object in the request body and the request body
            was not empty.

            Note that this error only occurs when the content is not at all a single JSON object.
            It **does not occur** for requests containing undefined properties or invalid property values.
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit example resources.
          description: Returned if the client does not have sufficient permissions to modify the associated resource.
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '409':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:UpdateConflict
                    message: The resource you are about to edit was changed in the meantime.
          description: Returned if underlying resource was changed since the client requested the form. This is determined using the `lockVersion` property.
          headers: {}
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Формы
      description: Это пример того, как может выглядеть форма. Обратите внимание, что эта конечная точка не существует в реальной реализации.
      operationId: show_or_validate_form
      requestBody:
        content:
          application/json:
            schema:
              example:
                _type: Example
                lockVersion: 5
                subject: An example title
              properties:
                _type:
                  type: string
                lockVersion:
                  type: number
                subject:
                  type: string
              type: object
      summary: показать или подтвердить форму
  /api/v3/example/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/example/schema
                    _type: Schema
                    lockVersion:
                      name: Resource Version
                      type: Integer
                      writable: false
                    status:
                      _embedded:
                        allowedValues:
                          - _links:
                              self:
                                href: /api/v3/statuses/1
                            _type: Status
                            createdAt: '2014-05-21T08:51:20.396Z'
                            defaultDoneRatio: 0
                            id: 1
                            isClosed: false
                            isDefault: true
                            name: New
                            position: 1
                            updatedAt: '2014-05-21T09:12:00.441Z'
                          - _links:
                              self:
                                href: /api/v3/statuses/2
                            _type: Status
                            createdAt: '2014-05-21T08:51:20.396Z'
                            defaultDoneRatio: 100
                            id: 2
                            isClosed: true
                            isDefault: false
                            name: Closed
                            position: 2
                            updatedAt: '2014-05-21T09:12:00.441Z'
                      _links:
                        allowedValues:
                          - href: /api/v3/statuses/1
                            title: New
                          - href: /api/v3/statuses/2
                            title: Closed
                      location: _links
                      name: Status
                      type: Status
                    subject:
                      maxLength: 255
                      minLength: 1
                      name: Subject
                      type: String
              schema:
                $ref: '#/components/schemas/Example_SchemaModel'
          description: OK
          headers: {}
      tags:
        - Схемы
      description: Это пример того, как может выглядеть схема. Обратите внимание, что эта конечная точка не существует в реальной реализации.
      operationId: view_the_schema
      summary: просмотр схемы
  /api/v3/examples:
    get:
      parameters:
        - description: |-
            Столбец, по которому нужно сгруппировать.
            Примечание: На данный момент агрегирование поддерживается только коллекцией рабочих пакетов.
            Вы можете передать любое имя столбца, возвращаемое конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
          example: status
          in: query
          name: groupBy
          required: false
          schema:
            type: string
        - description: ''
          example: true
          in: query
          name: showSums
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: OK
          headers: {}
      tags:
        - Коллекции
      description: ''
      operationId: view_aggregated_result
      summary: просмотр агрегированного результата
  /api/v3/file_links/{id}:
    get:
      summary: Получает ссылку на файл.
      operationId: view_file_link
      tags:
        - Ссылки на файлы
      description: Получает ссылку на один файловый ресурс рабочего пакета.
      parameters:
        - name: id
          description: Идентификатор ссылки на файл
          in: path
          required: true
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkReadModel'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
    delete:
      summary: Удаляет ссылку на файл.
      operationId: delete_file_link
      tags:
        - Ссылки на файлы
      description: |-
        Удаляет ссылку на файл в рабочем пакете.

        Запрос содержит только идентификатор ссылки на файл в качестве параметра пути. Текст запроса не требуется.
      parameters:
        - name: id
          description: Идентификатор ссылки на файл
          in: path
          required: true
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: OK
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package or the file link does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package, view file links
  /api/v3/file_links/{id}/open:
    get:
      summary: Создает uri для открытия связанного файла.
      operationId: open_file_link
      tags:
        - Ссылки на файлы
      description: |-
        Создает uri для открытия исходного файла, на который ссылается данный файл. Этот uri зависит от типа хранилища и
        всегда находится в самом исходном хранилище.
      parameters:
        - name: id
          description: Идентификатор ссылки на файл
          in: path
          required: true
          schema:
            type: integer
          example: 42
        - name: location
          description: Логический флаг, указывающий, следует ли открывать файл напрямую или, скорее, местоположение каталога.
          in: query
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '303':
          headers:
            Location:
              schema:
                type: string
                format: uri
          description: |-
            Returned if the request was successful. In the `Location` header is the uri where the client can open the origin
            file on the storage.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
  /api/v3/file_links/{id}/download:
    get:
      summary: Создает uri для загрузки связанного файла.
      operationId: download_file_link
      tags:
        - Ссылки на файлы
      description: |-
        Создает uri для загрузки исходного файла, связанного с данным файлом по ссылке. Этот uri зависит от типа хранилища и
        всегда находится в самом исходном хранилище.
      parameters:
        - name: id
          description: Идентификатор ссылки на файл
          in: path
          required: true
          schema:
            type: integer
          example: 42
      responses:
        '303':
          headers:
            Location:
              schema:
                type: string
                format: uri
          description: |-
            Returned if the request was successful. In the `Location` header is the uri where the client can download the
            origin file from the storage.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
  /api/v3/grids:
    get:
      summary: Сетки списков
      tags:
        - Сетки
      description: |-
        Выводит список всех таблиц, соответствующих предоставленным фильтрам и являющихся частью выбранной страницы запроса. Возвращаемые таблицы
        также будут зависеть от разрешений запрашивающего пользователя.
      operationId: list_grids
      parameters:
        - name: offset
          schema:
            type: integer
            default: 1
          description: Номер страницы в запрашиваемой коллекции.
          in: query
          required: false
          example: '25'
        - name: pageSize
          schema:
            type: integer
            default: 30
          description: Количество элементов, отображаемых на странице.
          in: query
          required: false
          example: '25'
        - name: filters
          schema:
            type: string
          description: |-
            JSON, определяющий условия фильтрации. Принимает тот же формат, который возвращается
            конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). Поддерживаемые в настоящее время фильтры
            являются:

            - страница: Сетка фильтров по рабочим пакетам
          in: query
          required: false
          example: '[{ "page": { "operator": "=", "values": ["/my/page"] } }]'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GridCollectionModel'
              examples:
                Simple grid collection:
                  $ref: '#/components/examples/GridSimpleCollectionResponse'
        '400':
          $ref: '#/components/responses/InvalidQuery'
        '403':
          description: Returned if the client is not logged in and login is required.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
    post:
      summary: Создайте сетку
      operationId: create_grid
      tags:
        - Сетки
      description: |-
        Создает новую сетку, применяя атрибуты, указанные в тексте. Ограничения, применяемые к сетке, зависят от
        страницы, на которой размещена сетка, поэтому при создании сетки следует руководствоваться конечной точкой создания формы
        .
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridWriteModel'
            examples:
              Simple grid creation:
                $ref: '#/components/examples/GridSimplePatchModel'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GridReadModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Depends on the page the grid is defined for.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/grids/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
      tags:
        - Сетки
      description: ''
      operationId: Grid_Create_Form
      summary: Форма для создания сетки
  /api/v3/grids/{id}:
    get:
      summary: Получаем сетку
      operationId: get_grid
      tags:
        - Сетки
      description: Извлекает единую сетку, идентифицируемую по ее идентификатору.
      parameters:
        - name: id
          in: path
          description: Идентификатор сетки
          required: true
          schema:
            type: integer
          example: '42'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GridReadModel'
              examples:
                Simple grid:
                  $ref: '#/components/examples/GridSimpleResponse'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the Grid does not exist or if the user does not have permission to view it.

            **Required permission** depends on the page the grid is defined for
    patch:
      summary: Обновить сетку
      operationId: update_grid
      tags:
        - Сетки
      description: |-
        Обновляет заданную сетку, применяя атрибуты, указанные в тексте. Ограничения, применяемые к сетке, зависят
        от страницы, на которой размещена сетка, поэтому при обновлении сетки следует руководствоваться конечной точкой создания формы
        .
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridWriteModel'
            examples:
              Simple grid patch:
                $ref: '#/components/examples/GridSimplePatchModel'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GridReadModel'
              examples:
                Simple grid:
                  $ref: '#/components/examples/GridSimpleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** The permission depends on the page the grid is placed in.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/grids/{id}/form:
    post:
      parameters:
        - description: Идентификатор изменяемой сетки
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                type: object
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        columnCount: 5
                        rowCount: 6
                        widgets:
                          - _type: GridWidget
                            endColumn: 3
                            endRow: 8
                            identifier: time_entries_current_user
                            startColumn: 1
                            startRow: 1
                          - _type: GridWidget
                            endColumn: 5
                            endRow: 8
                            identifier: news
                            startColumn: 4
                            startRow: 3
                          - _type: GridWidget
                            endColumn: 6
                            endRow: 3
                            identifier: documents
                            startColumn: 3
                            startRow: 1
                      schema:
                        _links: {}
                        _type: Schema
                        columnCount:
                          hasDefault: false
                          name: Number of columns
                          required: true
                          type: Integer
                          writable: true
                        createdAt:
                          hasDefault: false
                          name: Created on
                          required: true
                          type: DateTime
                          writable: false
                        id:
                          hasDefault: false
                          name: ID
                          required: true
                          type: Integer
                          writable: false
                        rowCount:
                          hasDefault: false
                          name: Number of rows
                          required: true
                          type: Integer
                          writable: true
                        scope:
                          _links: {}
                          hasDefault: false
                          name: Page
                          required: true
                          type: Href
                          writable: false
                        updatedAt:
                          hasDefault: false
                          name: Updated on
                          required: true
                          type: DateTime
                          writable: false
                        widgets:
                          _links: {}
                          hasDefault: false
                          name: Widgets
                          required: true
                          type: '[]GridWidget'
                          writable: true
                      validationErrors:
                        widgets:
                          _embedded:
                            errors:
                              - _embedded:
                                  details:
                                    attribute: widgets
                                _type: Error
                                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                                message: Widgets is outside of the grid.
                              - _embedded:
                                  details:
                                    attribute: widgets
                                _type: Error
                                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                                message: Widgets is outside of the grid.
                          _type: Error
                          errorIdentifier: urn:meteor-org:api:v3:errors:MultipleErrors
                          message: Multiple field constraints have been violated.
                    _links:
                      self:
                        href: /api/v3/grids/2/form
                        method: post
                      validate:
                        href: /api/v3/grids/2/form
                        method: post
                    _type: Form
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** depends on the page the grid is defined for.

            *Note that you will only receive this error, if you are at least allowed to see the corresponding grid.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the grid does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Сетки
      description: ''
      operationId: Grid_Update_Form
      summary: Форма обновления сетки
  /api/v3/groups:
    get:
      summary: Список групп
      operationId: list_groups
      tags:
        - Группы пользователей
      description: |-
        Возвращает набор групп. Клиент может выбрать фильтрацию
        групп аналогично тому, как фильтруются рабочие пакеты. В дополнение к предоставленным
        фильтрам сервер сократит результирующий набор, чтобы он содержал только те группы, для которых
        запрашивающий клиент имеет достаточные разрешения (*view_members*, *manage_members*).
      parameters:
        - name: sortBy
          description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу

            + created_at: Сортировка по дате и времени создания группы

            + updated_at: Сортировка по времени последнего обновления группы
          in: query
          required: false
          example: '[["id", "asc"]]'
          schema:
            default: '[["id", "asc"]]'
            type: string
        - name: select
          description: Список свойств, которые нужно включить, разделенный запятыми.
          in: query
          required: false
          example: total,elements/name,elements/self,self
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupCollectionModel'
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** View members or manage members in any project
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
    post:
      summary: Создать группу
      operationId: create_group
      tags:
        - Группы пользователей
      description: Создает новую группу, применяя атрибуты, указанные в тексте.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupWriteModel'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Name can't be blank.
  /api/v3/groups/{id}:
    delete:
      summary: Удалить группу
      operationId: delete_group
      tags:
        - Группы пользователей
      description: Удаляет группу.
      parameters:
        - name: id
          description: Идентификатор группы
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: |-
            Returned if the group was marked for deletion.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned, indicating the progress of deletion.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
        '404':
          description: |-
            Returned if the group does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** Administrator

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    get:
      summary: Получить группу
      operationId: get_group
      tags:
        - Группы пользователей
      description: Извлекает групповой ресурс.
      parameters:
        - name: id
          description: Идентификатор группы
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupModel'
              examples:
                group response:
                  $ref: '#/components/examples/GroupResponse'
        '404':
          description: |-
            Returned if the group does not exist or if the API user does not have permission to view them.

            **Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user
            will be able to query all groups which are members in projects, he has the *view members* permission in.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
    patch:
      summary: Группа обновлений
      operationId: update_group
      tags:
        - Группы пользователей
      description: |-
        Обновляет данную группу, применяя атрибуты, указанные в тексте.

        Пожалуйста, обратите внимание, что предоставленный массив `members` переопределит существующий набор элементов (аналогично PUT). Таким
        образом, клиент должен предоставить полный список участников, которые будут в группе после обновления, даже если будет добавлен только один
        участник.
      parameters:
        - name: id
          description: Идентификатор группы
          example: 1
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupWriteModel'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
        '404':
          description: |-
            Returned if the group does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user
            will be able to query all groups which are members in projects, he has the *view members* permission in.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: members
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Member is already taken.
  /api/v3/help_texts:
    get:
      summary: Список справочных текстов
      operationId: list_help_texts
      tags:
        - Справка по полям
      description: Перечислите полную коллекцию справочных текстов.
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HelpTextCollectionModel'
  /api/v3/help_texts/{id}:
    get:
      summary: Получить текст справки
      operationId: get_help_text
      tags:
        - Справка по полям
      description: Извлекает текст справки из заданного идентификатора.
      parameters:
        - name: id
          description: Идентификатор текста справки
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HelpTextModel'
        '404':
          description: Returned if the help text does not exist.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
  /api/v3/meetings/{id}:
    get:
      parameters:
        - description: Идентификатор собрания
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                        id: 12
                      author:
                        _type: User...
                        id: 2
                    _links:
                      addAttachment:
                        href: /api/v3/meetings/72/attachments
                        method: post
                      attachments:
                        href: /api/v3/meetings/72/attachments
                      project:
                        href: /api/v3/projects/12
                        title: some project
                      author:
                        href: /api/v3/users/2
                        title: Peggie Feeney
                      self:
                        href: /api/v3/meetings/72
                    _type: Meeting
                    id: 72
                    lockVersion: 5
                    title: A meeting
                    startTime: '2014-05-21T08:00:00.000Z'
                    duration: 120
                    createdAt: '2014-05-21T08:51:20.396Z'
                    updatedAt: '2014-05-21T09:14:02.776Z'
              schema:
                $ref: '#/components/schemas/MeetingModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view meetings in the page's project
          headers: {}
      tags:
        - Meetings
      description: Извлеките отдельную встречу, указанную в параметре id
      operationId: View_Meeting
      summary: Просмотр страницы собрания
  /api/v3/meetings/{id}/attachments:
    get:
      parameters:
        - description: Идентификатор собрания, приложения к которому будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            author:
                              href: /api/v3/users/1
                              title: METEOR Admin
                            container:
                              href: /api/v3/meetings/72
                              title: meeting
                            delete:
                              href: /api/v3/attachments/376
                              method: delete
                            downloadLocation:
                              href: /api/v3/attachments/376/content
                            self:
                              href: /api/v3/attachments/376
                              title: 200.gif
                          _type: Attachment
                          contentType: image/gif
                          createdAt: '2018-06-01T07:24:19.896Z'
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          digest:
                            algorithm: md5
                            hash: 7ac9c97ef73d47127f590788b84c0c1c
                          fileName: some.gif
                          fileSize: 3521772
                          id: 376
                    _links:
                      self:
                        href: /api/v3/meetings/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view meetings

            *Note: A client without sufficient permissions shall not be able to test for the existence of a meeting.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Вложения
      description: ''
      operationId: List_attachments_by_meeting
      summary: Список вложений по собраниям
    post:
      parameters:
        - description: Идентификатор собрания для получения приложения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: METEOR Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ''
                        createdAt: '2015-03-20T12:56:52.343Z'
                        email: null
                        firstName: METEOR
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: METEOR Admin
                        status: active
                        updatedAt: '2018-05-29T13:57:44.662Z'
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/meetings/72/attachments
                            method: post
                          attachments:
                            href: /api/v3/meetings/72/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/meetings/72
                        _type: Meeting
                        id: 72
                        title: meeting
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: METEOR Admin
                      container:
                        href: /api/v3/meetings/72
                        title: meeting
                      delete:
                        href: /api/v3/attachments/376
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/376/content
                      self:
                        href: /api/v3/attachments/376
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: '2018-06-01T07:24:19.896Z'
                    description:
                      format: plain
                      html: ''
                      raw: ''
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 376
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit meetings

            *Note that you will only receive this error, if you are at least allowed to see the meeting*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view meetings

            *Note: A client without sufficient permissions shall not be able to test for the existence of a meeting
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
          headers: {}
      tags:
        - Вложения
      description: Добавляет вложение с собранием в качестве контейнера.
      operationId: Add_attachment_to_meeting
      summary: Добавить приложение к собранию
  /api/v3/memberships:
    get:
      summary: Список участников
      operationId: list_memberships
      tags:
        - Участники проекта
      description: |-
        Возвращает набор подписок. Клиент может выбрать фильтрацию
        подписок аналогично тому, как фильтруются рабочие пакеты. В дополнение к
        предоставленным фильтрам сервер сократит результирующий набор, чтобы он содержал только те членства,
        для которых запрашивающий клиент имеет достаточные разрешения (*view_members*, *manage_members*).
      parameters:
        - name: filters
          in: query
          required: false
          schema:
            type: string
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + any_name_attribute: фильтрует членство на основе имени участника. Все возможные варианты имен
              (а также адрес электронной почты и логин) выполняется поиск.
            + заблокировано: в результирующем наборе отображаются все временно заблокированные или
            не временно не заблокированные участники.
            + группа: фильтрация участников на основе названия группы. Однако группа не является участником, используемым для
            фильтрации. В качестве значений фильтра используются данные о членстве в группе.
            + имя: фильтрует членство на основе имени участника. Обратите внимание, что используется только имя, которое зависит от
              в зависимости от настройки в экземпляре METEOR.
            + участник: фильтрует членство на основе идентификатора участника.
            + проект: фильтрует членство на основе идентификатора проекта.
            + роль: фильтрует членство на основе идентификатора любой роли, назначенной членству.
            + статус: фильтрует членство на основе статуса участника.
            + created_at: фильтрует членство на основе времени создания членства.
            + updated_at: фильтрует членство на основе времени последнего обновления членства.
          examples:
            name-filter:
              summary: Filtering on the name of the principal
              value: '[{ "name": { "operator": "=", "values": ["A User"] }" }]'
            global-memberships:
              summary: Get memberships for global roles
              value: '[{ "project": { "operator": "!*", "values": null }" }]'
        - name: sortBy
          in: query
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
          description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу
            + name: Сортировка по имени участника. Обратите внимание, что это зависит от настройки отображения имени
            , по крайней мере, для пользователей.
            + электронная почта: Сортировка по адресу электронной почты участника. Группы и основные пользователи, у которых нет электронной почты,
            сортируются в последнюю очередь.
            + статус: Сортировка по статусу участника. Группы и основные пользователи, у которых нет статуса,
            сортируются вместе с активными пользователями.
            + created_at: Сортировка по дате и времени создания членства
            + updated_at: Сортировка по времени последнего обновления членства
          example: '[["id", "asc"]]'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipCollectionModel'
              examples:
                simple membership collection:
                  $ref: '#/components/examples/MembershipSimpleCollectionResponse'
        '400':
          $ref: '#/components/responses/InvalidQuery'
        '403':
          description: Returned if the client is not logged in and login is required.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
    post:
      summary: Создайте членство
      operationId: create_membership
      tags:
        - Участники проекта
      description: |-
        Создает новое членство, применяя атрибуты, указанные в основной части.

        Вы можете использовать форму и схему для получения допустимых значений атрибутов и, таким образом, руководствоваться при успешном
        создании.

        Предоставляя `notificationMessage` в блоке `_meta` полезной нагрузки, клиент может включить настраиваемое
        сообщение для пользователя с вновь созданным членством. В случае группы сообщение будет отправлено каждому пользователю
        , принадлежащему к группе.

        При включении `{ "sendNotifications": false }` в блок полезной нагрузки `_meta` уведомления
        вообще не отправляются.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
            examples:
              global role:
                $ref: '#/components/examples/MembershipCreateRequestGlobalRole'
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage members
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: project
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Project can't be blank.
          description: |-
            Returned if:

            - a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/memberships/available_projects:
    get:
      summary: Доступные проекты для участия в программе
      operationId: get_memberships_available_projects
      tags:
        - Участники проекта
      description: |-
        Получает список проектов, в которых может быть создано членство. Список содержит все проекты, в которых пользователь
        , отправляющий запрос, имеет разрешения на управление участниками.
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectCollectionModel'
              examples:
                simple project collection:
                  $ref: '#/components/examples/ProjectCollection'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage members
  /api/v3/memberships/form:
    post:
      summary: Форма создания членства
      operationId: form_create_membership
      tags:
        - Участники проекта
      description: |-
        Запрашивает и проверяет форму создания для членства. Полезная нагрузка запроса, если она отправлена, проверяется. Конечная точка формы
        сама по себе не создает членство.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
            examples:
              global role:
                $ref: '#/components/examples/MembershipCreateRequestGlobalRole'
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipFormModel'
              examples:
                form:
                  $ref: '#/components/examples/MembershipFormResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage memberships in any project
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/memberships/schema:
    get:
      summary: Членство в схеме
      operationId: get_membership_schema
      tags:
        - Участники проекта
      description: Извлекает схему для объекта ресурса членства.
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipSchemaModel'
              examples:
                schema:
                  $ref: '#/components/examples/MembershipSchemaResponse'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** manage members or view memberships on any project
  /api/v3/memberships/{id}:
    delete:
      summary: Удалить членство
      operationId: delete_membership
      tags:
        - Участники проекта
      description: Удаляет членство.
      parameters:
        - name: id
          description: Идентификатор участника
          in: path
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '204':
          description: Returned if the membership was successfully deleted
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage members
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view members

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    get:
      summary: Получить членство
      operationId: get_membership
      description: Извлекает ресурс членства, идентифицированный по заданному идентификатору.
      tags:
        - Участники проекта
      parameters:
        - name: id
          description: Идентификатор участника
          in: path
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view members **or** manage members

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*
    patch:
      summary: Обновить членство
      operationId: update_membership
      description: |-
        Обновляет данное членство, применяя атрибуты, указанные в тексте.

        Предоставляя `notificationMessage` в блоке `_meta` полезной нагрузки, клиент может включить настроенное сообщение для пользователя
        об обновленном членстве. В случае группы сообщение будет отправлено каждому пользователю, входящему в группу.

        При включении `{ "sendNotifications": false }` в блок `_meta` полезной нагрузки уведомления не будут отправляться вообще.
      tags:
        - Участники проекта
      parameters:
        - name: id
          description: Идентификатор участника
          in: path
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
            examples:
              add roles:
                $ref: '#/components/examples/MembershipUpdateAdditionalRoles'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage members in the membership's project.
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view member

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: roles
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Roles has an unassignable role.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/memberships/{id}/form:
    post:
      summary: Форма обновления членства
      operationId: form_update_membership
      tags:
        - Участники проекта
      description: |-
        Запрашивает и проверяет форму обновления для членства, идентифицированного по данному идентификатору. Полезная нагрузка запроса, если она отправлена,
        проверяется. Конечная точка формы сама по себе не изменяет членство.
      parameters:
        - name: id
          description: Идентификатор участника
          in: path
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
            examples:
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in the version's project
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/my_preferences:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/my_preferences
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard
                      updateImmediately:
                        href: /api/v3/users/3/preferences
                        method: patch
                    _type: UserPreferences
                    commentSortDescending: true
                    hideMail: false
                    timeZone: Europe/Berlin
                    warnOnLeavingUnsaved: true
                    notifications:
                      watched: false
                      involved: true
                      mentioned: false
                      shared: true
                      newsAdded: false,
                      newsCommented: false
                      documentAdded: false
                      forumMessages: false
                      wikiPageAdded: false
                      wikiPageUpdated: false
                      membershipAdded: false
                      membershipUpdated: false
                      workPackageCommented: false
                      workPackageProcessed: false
                      workPackagePrioritized: false
                      workPackageScheduled: false
                      _links:
                        project:
                          href: null
              schema:
                $ref: '#/components/schemas/UserPreferencesModel'
          description: OK
          headers: {}
        '401':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You need to be authenticated to access this resource.
          description: Returned if no user is currently authenticated
          headers: {}
      tags:
        - Пользовательские настройки
      description: ''
      operationId: Show_my_preferences
      summary: Показать мои предпочтения
    patch:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/my_preferences
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard
                      updateImmediately:
                        href: /api/v3/users/3/preferences
                        method: patch
                    _type: UserPreferences
                    commentSortDescending: true
                    hideMail: false
                    timeZone: Europe/Berlin
                    warnOnLeavingUnsaved: true
                    notifications:
                      watched: false
                      involved: true
                      mentioned: false
                      shared: true
                      newsAdded: false,
                      newsCommented: false
                      documentAdded: false
                      forumMessages: false
                      wikiPageAdded: false
                      wikiPageUpdated: false
                      membershipAdded: false
                      membershipUpdated: false
                      workPackageCommented: false
                      workPackageProcessed: false
                      workPackagePrioritized: false
                      workPackageScheduled: false
                      _links:
                        project:
                          href: null
              schema:
                $ref: '#/components/schemas/UserPreferencesModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '401':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You need to be authenticated to access this resource.
          description: Returned if no user is currently authenticated
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Time zone is not set to one of the allowed values.
          description: |-
            Returned if the update contains invalid properties.
            Reasons are:

            * Specifying an invalid type

            * Using an unknown time zone
          headers: {}
      tags:
        - Пользовательские настройки
      description: При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий свойства, которые он хочет изменить.
      operationId: Update_UserPreferences
      requestBody:
        content:
          application/json:
            schema:
              example:
                autoHidePopups: true
                timeZone: Europe/Paris
              properties:
                autoHidePopups:
                  type: boolean
                timeZone:
                  type: string
              type: object
      summary: Обновите мои настройки
  /api/v3/news:
    get:
      parameters:
        - description: Номер страницы в запрашиваемой коллекции.
          example: '25'
          in: query
          name: offset
          required: false
          schema:
            default: 1
            type: integer
        - description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу

            + created_at: Сортировка по дате и времени создания новости
          example: '[["created_at", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие фильтры:

            + project_id: Фильтрация новостей по проекту
          example: '[{ "project_id": { "operator": "=", "values": ["1", "2"] } }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            author:
                              href: /api/v3/users/2
                              title: Peggie Feeney
                            project:
                              href: /api/v3/projects/1
                              title: Seeded Project
                            self:
                              href: /api/v3/news/1
                              title: asperiores possimus nam doloribus ab
                          _type: News
                          createdAt: '2015-03-20T12:57:01.209Z'
                          description:
                            format: markdown
                            html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                            raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                          id: 1
                          summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.
                          title: asperiores possimus nam doloribus ab
                        - _links:
                            author:
                              href: /api/v3/users/2
                              title: Peggie Feeney
                            project:
                              href: /api/v3/projects/1
                              title: Seeded Project
                            self:
                              href: /api/v3/news/2
                              title: terminatio tutamen. Officia adeptio sp
                          _type: News
                          createdAt: '2015-03-20T12:57:01.262Z'
                          description:
                            format: markdown
                            html: <p>Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.</p>
                            raw: Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.
                          id: 2
                          summary: Consequatur sequi surculus creo tui aequitas.
                          title: terminatio tutamen. Officia adeptio sp
                    _links:
                      changeSize:
                        href: /api/v3/news?offset=1&pageSize=%7Bsize%7D
                        templated: true
                      jumpTo:
                        href: /api/v3/news?offset=%7Boffset%7D&pageSize=2
                        templated: true
                      nextByOffset:
                        href: /api/v3/news?offset=2&pageSize=2
                      self:
                        href: /api/v3/news?offset=1&pageSize=2
                    _type: Collection
                    count: 2
                    offset: 1
                    pageSize: 2
                    total: 78
              schema:
                $ref: '#/components/schemas/List_of_NewsModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
          description: Returned if the client is not logged in and login is required.
          headers: {}
      tags:
        - Новости
      description: Выводит список новостей. Возвращаемые новости зависят от заданных параметров, а также от разрешений запрашивающего пользователя.
      operationId: List_News
      summary: Список новостей
  /api/v3/news/{id}:
    get:
      parameters:
        - description: идентификатор новости
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _type: User...
                      project:
                        _type: Project...
                    _links:
                      author:
                        href: /api/v3/users/2
                        title: Peggie Feeney
                      project:
                        href: /api/v3/projects/1
                        title: A project
                      self:
                        href: /api/v3/news/1
                        title: asperiores possimus nam doloribus ab
                    _type: News
                    createdAt: '2015-03-20T12:57:01.601Z'
                    description:
                      format: markdown
                      html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                      raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                    id: 1
                    summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.
                    title: asperiores possimus nam doloribus ab
              schema:
                $ref: '#/components/schemas/NewsModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the news does not exist or if the user does not have permission to view it.

            **Required permission** being member of the project the news belongs to
          headers: {}
      tags:
        - Новости
      description: ''
      operationId: View_news
      summary: Просмотр новостей
  /api/v3/notifications:
    get:
      summary: Получать сбор уведомлений
      operationId: list_notifications
      tags:
        - Уведомления
      description: |-
        Возвращает коллекцию доступных уведомлений в приложении. Возвращаемые уведомления зависят от предоставленных
        параметров, а также от разрешений запрашивающего пользователя.

        В отличие от большинства коллекций, эта коллекция также содержит ссылки и встроенные схемы для свойств `details` возвращаемых уведомлений.
        Это оптимизация. Клиенты получат информацию, необходимую для отображения различных типов сведений, которые
        могут содержаться в уведомлении.
      parameters:
        - name: offset
          description: Номер страницы в запрашиваемой коллекции.
          in: query
          example: 25
          required: false
          schema:
            default: 1
            type: integer
        - name: pageSize
          description: Количество элементов, отображаемых на странице.
          in: query
          example: 25
          required: false
          schema:
            default: 20
            type: integer
        - name: sortBy
          in: query
          description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, что и конечная точка [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу

            + причина: Сортировка по причине уведомления

            + readIAN: Сортировка по статусу чтения
          example: '[["reason", "asc"]]'
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          description: |-
            строка, указывающая критерии group_by.

            + причина: Группировать по причине уведомления

            + проект: Сортировать по связанному проекту
          example: reason
          required: false
          schema:
            type: string
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и конечная точка [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие фильтры:

            + id: Фильтрация по первичному ключу

            + project: Фильтрация по проекту, в котором было создано уведомление

            + readIAN: Фильтрация по статусу чтения

            + причина: Фильтруйте по причине, например, "упомянуто" или "назначено", по которой было создано уведомление

            + resourceId: Фильтруйте по идентификатору ресурса, для которого было создано уведомление. В идеале используется вместе с фильтром `resourceType`.

            + ResourceType: фильтр по типу ресурса, для которого было создано уведомление. В идеале используется вместе с фильтром `resourceId`.
          example: '[{ "readIAN": { "operator": "=", "values": ["t"] } }]'
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NotificationCollectionModel'
              examples:
                Collection of notifications:
                  $ref: '#/components/examples/NotificationCollection'
          description: OK
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
          description: Returned if the client is not logged in and login is required.
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
          description: Returned if the client sends invalid request parameters e.g. filters
  /api/v3/notifications/read_ian:
    post:
      summary: Читать все уведомления
      operationId: read_notifications
      tags:
        - Уведомления
      description: |-
        Помечает всю коллекцию уведомлений как прочитанную. Коллекция содержит только те элементы, которые может
        видеть аутентифицированный пользователь, и может быть дополнительно сокращена с помощью фильтров.
      parameters:
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + id: Фильтровать по первичному ключу

            + project: фильтровать по проекту, в котором было создано уведомление

            + reason: Фильтруйте по причине, например, "mentioned" или "assigned", по которой было создано уведомление

            + resourceId: Фильтруйте по идентификатору ресурса, для которого было создано уведомление. В идеале используется вместе с
            фильтром  `resourceType`.

            + resourceType: фильтр по типу ресурса, для которого было создано уведомление. В идеале используется вместе с
            фильтром `resourceId`.
          example: '[{ "reason": { "operator": "=", "values": ["mentioned"] } }]'
          required: false
          schema:
            type: string
      responses:
        '204':
          description: OK
        '400':
          description: Returned if the request is not properly formatted.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message:
                  - Фильтры Invalid filter does not exist.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/notifications/unread_ian:
    post:
      summary: Непрочитанные все уведомления
      operationId: unread_notifications
      tags:
        - Уведомления
      description: |-
        Помечает всю коллекцию уведомлений как непрочитанную. Коллекция содержит только те элементы, которые могут
        быть видны авторизованному пользователю, и может быть дополнительно сокращена с помощью фильтров.
      parameters:
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + id: Фильтровать по первичному ключу

            + project: фильтровать по проекту, в котором было создано уведомление

            + reason: Фильтруйте по причине, например, 'mentioned' или 'assigned', по которой было создано уведомление

            + resourceId: Фильтруйте по идентификатору ресурса, для которого было создано уведомление. В идеале используется вместе с
            фильтром `resourceType`.

            + resourceType: фильтр по типу ресурса, для которого было создано уведомление. В идеале используется вместе с
            фильтром `resourceId`.
          example: '[{ "reason": { "operator": "=", "values": ["mentioned"] } }]'
          required: false
          schema:
            type: string
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/notifications/{id}:
    get:
      summary: Получите уведомление
      operationId: view_notification
      tags:
        - Уведомления
      description: Возвращает уведомление, идентифицированное по идентификатору уведомления.
      parameters:
        - name: id
          in: path
          description: идентификатор уведомления
          example: '1'
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NotificationModel'
              examples:
                Date alert notification:
                  $ref: '#/components/examples/DateAlertNotification'
                Mentioned notification:
                  $ref: '#/components/examples/MentionedNotification'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
  /api/v3/notifications/{notification_id}/details/{id}:
    get:
      summary: Получите подробное уведомление
      operationId: view_notification_detail
      tags:
        - Уведомления
        - Values::Property
      description: Возвращает отдельные сведения об уведомлении, идентифицируемые по идентификатору уведомления и идентификатору сведений.
      parameters:
        - name: notification_id
          in: path
          description: идентификатор уведомления
          example: '1'
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: идентификатор детали
          example: '0'
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ValuesPropertyModel'
              examples:
                Start date notification detail:
                  $ref: '#/components/examples/ValuesPropertyStartDate'
                Due date notification detail:
                  $ref: '#/components/examples/ValuesPropertyDueDate'
                Date notification detail for milestone work package:
                  $ref: '#/components/examples/ValuesPropertyDate'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the notification or the detail of it does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
  /api/v3/notifications/{id}/read_ian:
    post:
      summary: Прочитать уведомление
      operationId: read_notification
      tags:
        - Уведомления
      description: Помечает данное уведомление как прочитанное.
      parameters:
        - name: id
          in: path
          description: идентификатор уведомления
          example: '1'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
  /api/v3/notifications/{id}/unread_ian:
    post:
      summary: Непрочитанное уведомление
      operationId: unread_notification
      tags:
        - Уведомления
      description: Помечает данное уведомление как непрочитанное.
      parameters:
        - name: id
          in: path
          description: идентификатор уведомления
          example: '1'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
  /api/v3/oauth_applications/{id}:
    get:
      summary: Получите приложение oauth.
      operationId: get_oauth_application
      tags:
        - Oauth 2
      description: |-
        Извлекает приложение-провайдер OAuth 2 для данного идентификатора. Секрет не будет частью ответа,
        вместо этого будет установлен флаг `confidential`, указывающий, есть ли секрет или нет.
      parameters:
        - name: id
          description: Идентификатор приложения OAuth
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OAuthApplicationReadModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: Returned if the application does not exist.
  /api/v3/oauth_client_credentials/{id}:
    get:
      summary: Получите объект учетных данных клиента oauth.
      operationId: get_oauth_client_credentials
      tags:
        - Oauth 2
      description: |-
        Извлекает учетные данные клиента OAuth 2 для данного идентификатора. Секрет не будет частью ответа,
        вместо этого будет установлен флаг `confidential`, указывающий, есть ли секрет или нет.
      parameters:
        - name: id
          description: Идентификатор учетных данных клиента OAuth
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OAuthClientCredentialsReadModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: Returned if the object does not exist.
  /api/v3/placeholder_users:
    get:
      summary: Список пользователей-заполнителей
      operationId: list_placeholder_users
      tags:
        - Принципалы
      description: |-
        Список всех пользователей-заполнителей. Доступ к нему возможен только в том случае, если запрашивающий пользователь имеет глобальное разрешение
        `manage_placeholder_user` или `manage_members` в любом проекте.
      parameters:
        - name: filters
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            - name: фильтрует пользователей-заполнителей по имени.
            - group: фильтрует заполнитель по группе, в которой он содержится.
            - status: фильтрует заполнитель по статусу, который он имеет.
          in: query
          required: false
          schema:
            type: string
          example: '[{ "name": { "operator": "~", "values": ["Darth"] } }]'
        - name: select
          description: Список свойств, которые нужно включить, разделенный запятыми.
          in: query
          required: false
          schema:
            type: string
          example: total,elements/name,elements/self,self
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PrincipalCollectionModel'
        '400':
          description: Returned if the client sends invalid request parameters e.g. filters
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
    post:
      summary: Создать пользователя-заполнителя
      operationId: create_placeholder_user
      tags:
        - Принципалы
      description: |-
        Создает нового пользователя-заполнителя. Это разрешено только администраторам и пользователям с глобальным разрешением `manage_placeholder_user`
        . При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий, по крайней мере
        , необходимые свойства и ссылки.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceholderUserCreateModel'
      responses:
        '201':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceholderUserModel'
          description: Created
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to create new placeholder users.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Name has already been taken.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/placeholder_users/{id}:
    delete:
      summary: Удалить пользователя-заполнителя
      operationId: delete_placeholder_user
      description: Установите для указанного пользователя-заполнителя статус удаленного.
      tags:
        - Принципалы
      parameters:
        - description: Идентификатор пользователя-заполнителя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: |-
            Returned if the group was marked for deletion.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned, indicating the progress of deletion.
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** `manage_placeholder_users`
        '404':
          description: Returned if the placeholder user does not exist.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified placeholder user does not exist.
    get:
      summary: Просмотр пользователя-заполнителя
      operationId: view_placeholder_user
      description: Верните пользовательский ресурс-заполнитель.
      tags:
        - Принципалы
      parameters:
        - description: Идентификатор пользователя-заполнителя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceholderUserModel'
              examples:
                placeholder user response:
                  $ref: '#/components/examples/PlaceholderUserResponse'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified placeholder user does not exist or you do not have permission to view them.
          description: |-
            Returned if the user does not exist or if the API user does not have permission to view them.

            **Required permission**: `manage_placeholder_users`
    patch:
      summary: Обновить пользователя-заполнителя
      operationId: update_placeholder_user
      tags:
        - Принципалы
      description: |-
        Обновляет доступные для записи атрибуты пользователя-заполнителя.
        При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий, по крайней мере
        , необходимые свойства и ссылки.
      parameters:
        - description: Идентификатор пользователя-заполнителя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceholderUserCreateModel'
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceholderUserModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to update the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission**: `manage_placeholder_users`
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified placeholder user does not exist.
          description: Returned if the placeholder user does not exist.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Name has already been taken.
          description: |-
            Returned if:

            - the client tries to modify a read-only property (`PropertyIsReadOnly`)
            - a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/posts/{id}:
    get:
      parameters:
        - description: Идентификатор сообщения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                    _links:
                      addAttachment:
                        href: /api/v3/posts/1/attachments
                        method: post
                      attachments:
                        href: /api/v3/posts/1/attachments
                      project:
                        href: /api/v3/projects/1
                        title: A project with a title
                      self:
                        href: /api/v3/posts/1
                    _type: Post
                    id: 1
                    subject: A post with a subject
              schema:
                $ref: '#/components/schemas/PostModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view messages in the post's project
          headers: {}
      tags:
        - Публикации
      description: Извлеките отдельную запись, указанную в параметре id
      operationId: View_Post
      summary: Просмотреть сообщение
  /api/v3/posts/{id}/attachments:
    get:
      parameters:
        - description: Идентификатор записи, вложения к которой будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            author:
                              href: /api/v3/users/1
                              title: METEOR Admin
                            container:
                              href: /api/v3/posts/72
                              title: wiki
                            delete:
                              href: /api/v3/attachments/376
                              method: delete
                            downloadLocation:
                              href: /api/v3/attachments/376/content
                            self:
                              href: /api/v3/attachments/376
                              title: 200.gif
                          _type: Attachment
                          contentType: image/gif
                          createdAt: '2018-06-01T07:24:19.706Z'
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          digest:
                            algorithm: md5
                            hash: 7ac9c97ef73d47127f590788b84c0c1c
                          fileName: some.gif
                          fileSize: 3521772
                          id: 376
                    _links:
                      self:
                        href: /api/v3/posts/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view messages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a post.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Вложения
      description: ''
      operationId: List_attachments_by_post
      summary: Список вложений по почте
    post:
      parameters:
        - description: Идентификатор сообщения, на которое будет отправлено вложение
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: METEOR Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ''
                        createdAt: '2015-03-20T12:56:52.850Z'
                        email: null
                        firstName: METEOR
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: METEOR Admin
                        status: active
                        updatedAt: '2018-05-29T13:57:44.604Z'
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/posts/150/attachments
                            method: post
                          attachments:
                            href: /api/v3/posts/150/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/posts/150
                        _type: Post
                        id: 150
                        subject: sfsdfsdfsdfsdf
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: METEOR Admin
                      container:
                        href: /api/v3/posts/150
                        title: sfsdfsdfsdfsdf
                      delete:
                        href: /api/v3/attachments/377
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/377/content
                      self:
                        href: /api/v3/attachments/377
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: '2018-06-01T07:53:36.831Z'
                    description:
                      format: plain
                      html: ''
                      raw: ''
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 377
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit messages

            *Note that you will only receive this error, if you are at least allowed to see the wiki page*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view messages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a post.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
          headers: {}
      tags:
        - Вложения
      description: Добавляет вложение с записью в качестве контейнера.
      operationId: Add_attachment_to_post
      summary: Добавить вложение к сообщению
  /api/v3/principals:
    get:
      summary: Перечислите принципалов
      operationId: list_principals
      tags:
        - Принципалы
      description: |-
        Перечислите всех участников. Клиент может выбрать фильтрацию участников аналогично тому, как фильтруются рабочие пакеты. В
        дополнение к предоставленным фильтрам сервер сократит результирующий набор, чтобы он содержал только участников, которые являются участниками
        проектов, доступных клиенту.
      parameters:
        - name: filters
          description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            - type: фильтрует участников по их типу (*User*, *Group*, *PlaceholderUser*).
            - участник: фильтрует участников по проектам, в которых они участвуют.
            - имя: фильтрует участников по имени пользователя или группы.
            - атрибут any_name_attribute: фильтрует участников по имени и фамилии пользователя или группы, электронной почте или логину.
            - статус: фильтрует участников по их статусному номеру (активен = *1*, зарегистрирован = *2*, заблокирован = *3*, приглашен = *4*).
          in: query
          required: false
          schema:
            type: string
          example: '[{ "type": { "operator": "=", "values": ["User"] } }]'
        - name: select
          description: Список свойств, которые нужно включить, разделенный запятыми.
          in: query
          required: false
          schema:
            type: string
          example: total,elements/name,elements/self,self
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PrincipalCollectionModel'
        '400':
          description: Returned if the client sends invalid request parameters e.g. filters
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
  /api/v3/priorities:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/priorities/1
                              title: Low
                          _type: Priority
                          id: 1
                          isActive: true
                          isDefault: false
                          name: Low
                          position: 1
                        - _links:
                            self:
                              href: /api/v3/priorities/2
                              title: Normal
                          _type: Priority
                          id: 2
                          isActive: true
                          isDefault: true
                          name: Normal
                          position: 2
                        - _links:
                            self:
                              href: /api/v3/priorities/3
                              title: High
                          _type: Priority
                          id: 3
                          isActive: true
                          isDefault: false
                          name: High
                          position: 3
                        - _links:
                            self:
                              href: /api/v3/priorities/4
                              title: Immediate
                          _type: Priority
                          id: 4
                          isActive: true
                          isDefault: false
                          name: Immediate
                          position: 5
                    _links:
                      self:
                        href: /api/v3/priorities
                    _type: Collection
                    count: 4
                    total: 4
              schema:
                $ref: '#/components/schemas/PrioritiesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the priorities.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
      tags:
        - Приоритеты
      description: ''
      operationId: List_all_Priorities
      summary: Перечислите все приоритеты
  /api/v3/priorities/{id}:
    get:
      parameters:
        - description: Идентификатор приоритета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/priorities/1
                        title: Low
                    _type: Priority
                    id: 1
                    isActive: true
                    isDefault: false
                    name: Low
                    position: 1
              schema:
                $ref: '#/components/schemas/PriorityModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this priority.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
      tags:
        - Приоритеты
      description: ''
      operationId: View_Priority
      summary: Просмотр приоритета
  /api/v3/project_storages:
    get:
      summary: Получает список хранилищ проектов
      operationId: list_project_storages
      tags:
        - Ссылки на файлы
      description: Получает коллекцию всех хранилищ проектов, которые соответствуют предоставленным фильтрам, и у пользователя есть разрешение на их просмотр.
      parameters:
        - name: filters
          in: query
          required: false
          schema:
            default: '[]'
            type: string
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            - project_id
            - storage_id
            - storage_url
          example: '[{ "project_id": { "operator": "=", "values": ["42"] }}, { "storage_id": { "operator": "=", "values": ["1337"] }}]'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectStorageCollectionModel'
        '400':
          description: Returned if any given filter is invalid.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The query parameter 'filters' is missing or malformed.
  /api/v3/project_storages/{id}:
    get:
      summary: Получает хранилище проекта
      operationId: get_project_storage
      tags:
        - Ссылки на файлы
      description: |-
        Получает ресурс хранилища проекта. Этот ресурс содержит все данные, которые применимы к связи между
        хранилищем и проектом.
      parameters:
        - name: id
          description: Идентификатор хранилища проекта
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectStorageModel'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the project storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
  /api/v3/project_storages/{id}/open:
    get:
      summary: Откройте хранилище проектов
      operationId: open_project_storage
      tags:
        - Ссылки на файлы
      description: |-
        Получает перенаправление на местоположение удаленного источника хранилища проекта. Если в хранилище проекта
        есть папка проекта, она открывается в этом расположении. Если нет, открывается корневая папка хранилища.
      parameters:
        - name: id
          description: Идентификатор хранилища проекта
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '303':
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                format: uri
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                message: You are not authorized to access this resource.
          description: Returned if the authorization token of the current user grants no permission to access the remote storage.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the project storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
  /api/v3/projects:
    get:
      summary: Список проектов
      operationId: list_projects
      tags:
        - Проекты
      description: Возвращает коллекцию проектов. Коллекция может быть отфильтрована с помощью параметров запроса аналогично тому, как фильтруются рабочие пакеты. В дополнение к предоставленному фильтру результирующий набор всегда ограничен и содержит только те проекты, которые разрешено просматривать клиенту.
      parameters:
        - name: filters
          schema:
            type: string
          in: query
          required: false
          description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            + active: основан на свойстве active проекта
            + ancestor: фильтрует проекты по их предку. Проект не считается своим собственным предком.
            + created_at: основан на времени создания проекта
            + latest_activity_at: основан на времени регистрации последнего действия в проекте.
            + name_and_identifier: на основе как имени, так и идентификатора.
            + parent_id: фильтрует проекты по их родительскому элементу.
            + принципал: на основе участников проекта.
            + storage_id: фильтрует проекты по связанным хранилищам.
            + storage_url: фильтрует проекты по связанным хранилищам, идентифицируемым URL-адресом хоста
            + type_id: на основе типов, активных в проекте.
            + user_action: на основе действий текущего пользователя в проекте.
            + идентификатор: основан на идентификаторе проекта.
            + видимый: основан на видимости для пользователя (id), указанной в качестве значения фильтра. Этот фильтр полезен администраторам для определения проектов, видимых пользователю.

            Также могут существовать дополнительные фильтры, основанные на настроенных пользовательских полях.
          example: '[{ "ancestor": { "operator": "=", "values": ["1"] }" }]'
        - name: sortBy
          schema:
            type: string
          in: query
          required: false
          description: |-
            JSON с указанием критериев сортировки.
            В настоящее время поддерживаются следующие порядковые номера:

            + id
            + name
            + typeahead (сортировка по иерархии и имени)
            + created_at
            + public
            + latest_activity_at
            + required_disk_space

            Также могут быть дополнительные заказы, основанные на настроенных пользовательских полях.
          example: '[["id", "asc"]]'
        - name: select
          schema:
            type: string
          in: query
          required: false
          description: Список свойств, которые нужно включить, разделенный запятыми.
          example: total,elements/identifier,elements/name
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectCollectionModel'
              examples:
                simple project collection:
                  $ref: '#/components/examples/ProjectCollection'
        '400':
          description: Returned if the client sends invalid request parameters e.g. filters
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
    post:
      summary: Создать проект
      operationId: create_project
      tags:
        - Проекты
      description: |-
        Создает новый проект, применяя атрибуты, указанные в основной части.

        Вы можете использовать форму и схему, чтобы получить действительные значения атрибутов и тем самым обеспечить успешное создание.
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add project which is a global permission
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Name can't be blank.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/projects/form:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
              empty:
                description: Empty request to get the form initially in order to start the guided creation of a project
                value: {}
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                type: object
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          customField26:
                            href: null
                            title: null
                          customField31:
                            href: null
                            title: null
                          parent:
                            href: null
                          status:
                            href: null
                        active: true
                        customField30: null
                        customField34: null
                        customField35: Text custom field value
                        customField41:
                          format: markdown
                          html: ''
                          raw: ''
                        customField42: null
                        description:
                          format: markdown
                          html: ''
                          raw: null
                        identifier: new_project_identifier
                        name: New project name
                        public: false
                        statusExplanation:
                          format: markdown
                          html: <p></p>
                          raw: null
                      schema:
                        _dependencies: []
                        _links: {}
                        _type: Schema
                        active:
                          hasDefault: true
                          name: Active
                          required: true
                          type: Boolean
                          writable: true
                        createdAt:
                          hasDefault: false
                          name: Created on
                          required: true
                          type: DateTime
                          writable: false
                        customField26:
                          _links:
                            allowedValues:
                              href: /api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%220%22%2C%223%22%5D%7D%7D%2C%7B%22type%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22User%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22%22%5D%7D%7D%5D&pageSize=0
                          hasDefault: false
                          location: _links
                          name: Project user
                          required: false
                          type: User
                          visibility: default
                          writable: true
                        customField30:
                          hasDefault: false
                          name: some project cf
                          required: false
                          type: Integer
                          visibility: default
                          writable: true
                        customField31:
                          _embedded:
                            allowedValues:
                              - _links:
                                  self:
                                    href: /api/v3/custom_options/513
                                    title: abc
                                _type: CustomOption
                                id: 513
                                value: abc
                              - _links:
                                  self:
                                    href: /api/v3/custom_options/514
                                    title: def
                                _type: CustomOption
                                id: 514
                                value: def
                              - _links:
                                  self:
                                    href: /api/v3/custom_options/515
                                    title: ghi
                                _type: CustomOption
                                id: 515
                                value: ghi
                          _links:
                            allowedValues:
                              - href: /api/v3/custom_options/513
                                title: abc
                              - href: /api/v3/custom_options/514
                                title: def
                              - href: /api/v3/custom_options/515
                                title: ghi
                          hasDefault: false
                          location: _links
                          name: list project cf
                          required: false
                          type: CustomOption
                          visibility: default
                          writable: true
                        customField34:
                          hasDefault: false
                          name: Bool Project CF
                          required: false
                          type: Boolean
                          visibility: default
                          writable: true
                        customField35:
                          hasDefault: false
                          name: text project cf
                          required: true
                          type: String
                          visibility: default
                          writable: true
                        customField41:
                          hasDefault: false
                          name: Long text project cf
                          required: false
                          type: Formattable
                          visibility: default
                          writable: true
                        customField42:
                          hasDefault: false
                          name: Date project cf
                          required: false
                          type: Date
                          visibility: default
                          writable: true
                        description:
                          hasDefault: false
                          name: Description
                          required: false
                          type: Formattable
                          writable: true
                        id:
                          hasDefault: false
                          name: ID
                          required: true
                          type: Integer
                          writable: false
                        identifier:
                          hasDefault: false
                          maxLength: 100
                          minLength: 1
                          name: Identifier
                          required: true
                          type: String
                          writable: true
                        name:
                          hasDefault: false
                          maxLength: 255
                          minLength: 1
                          name: Name
                          required: true
                          type: String
                          writable: true
                        parent:
                          _links:
                            allowedValues:
                              href: /api/v3/projects/available_parent_projects
                          hasDefault: false
                          location: _links
                          name: Subproject of
                          required: false
                          type: Project
                          visibility: default
                          writable: true
                        public:
                          hasDefault: false
                          name: Public
                          required: true
                          type: Boolean
                          writable: true
                        status:
                          _links:
                            allowedValues:
                              - href: /api/v3/project_statuses/on_track
                                title: On track
                              - href: /api/v3/project_statuses/at_risk
                                title: At risk
                              - href: /api/v3/project_statuses/off_track
                                title: Off track
                          hasDefault: true
                          name: Status
                          required: false
                          type: ProjectStatus
                          writable: true
                        statusExplanation:
                          hasDefault: false
                          name: Status explanation
                          required: false
                          type: Formattable
                          writable: true
                        updatedAt:
                          hasDefault: false
                          name: Updated on
                          required: true
                          type: DateTime
                          writable: false
                      validationErrors:
                        identifier:
                          _embedded:
                            details:
                              attribute: identifier
                          _type: Error
                          errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                          message: Identifier has already been taken.
                    _links:
                      self:
                        href: /api/v3/projects/form
                        method: post
                      validate:
                        href: /api/v3/projects/form
                        method: post
                    _type: Form
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add project which is a global permission
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Проекты
      description: ''
      operationId: Project_create_form
      summary: Форма для создания проекта
  /api/v3/projects/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/projects/schema
                    _type: Schema
                    active:
                      hasDefault: true
                      name: Active
                      required: true
                      type: Boolean
                      writable: true
                    createdAt:
                      hasDefault: false
                      name: Created on
                      required: true
                      type: DateTime
                      writable: false
                    customField30:
                      hasDefault: false
                      name: Integer project custom field
                      required: false
                      type: Integer
                      visibility: default
                      writable: true
                    customField31:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: List project custom field
                      required: false
                      type: CustomOption
                      visibility: default
                      writable: true
                    customField32:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Version project custom field
                      required: false
                      type: Version
                      visibility: default
                      writable: true
                    customField34:
                      hasDefault: false
                      name: Boolean project custom field
                      required: false
                      type: Boolean
                      visibility: default
                      writable: true
                    customField35:
                      hasDefault: false
                      name: Text project custom field
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    description:
                      hasDefault: false
                      name: Description
                      required: false
                      type: Formattable
                      writable: true
                    id:
                      hasDefault: false
                      name: ID
                      required: true
                      type: Integer
                      writable: false
                    identifier:
                      hasDefault: false
                      maxLength: 100
                      minLength: 1
                      name: Identifier
                      required: true
                      type: String
                      writable: true
                    name:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Name
                      required: true
                      type: String
                      writable: true
                    parent:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Subproject of
                      required: false
                      type: Project
                      visibility: default
                      writable: true
                    public:
                      hasDefault: false
                      name: Public
                      required: true
                      type: Boolean
                      writable: true
                    status:
                      _links:
                        allowedValues:
                          - href: /api/v3/project_statuses/on_track
                            title: On track
                          - href: /api/v3/project_statuses/at_risk
                            title: At risk
                          - href: /api/v3/project_statuses/off_track
                            title: Off track
                      hasDefault: true
                      name: Status
                      required: false
                      type: ProjectStatus
                      writable: true
                    statusExplanation:
                      hasDefault: false
                      name: Status explanation
                      required: false
                      type: Formattable
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/Projects_schemaModel'
          description: OK
          headers: {}
      tags:
        - Проекты
      description: ''
      operationId: View_project_schema
      summary: Просмотр схемы проекта
  /api/v3/projects/{id}:
    delete:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: |-
            Returned if the project was successfully deleted. There is currently no end point to query for the actual deletion status.
            Such an end point _might_ be added in the future.
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: base
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Work packages in non descendant projects reference versions of the project or its descendants.
          description: |-
            Returned if the project cannot be deleted. This can happen when there are still references to the project in other projects
            that need to be severed at first.
          headers: {}
      tags:
        - Проекты
      description: |-
        Удаляет проект безвозвратно. Поскольку это длительный процесс, фактическое удаление выполняется асинхронно.
        Таким образом, проект может существовать и после успешного возврата запроса. Для предотвращения нежелательных изменений в
        проекте, запланированном к удалению, он сразу же архивируется.
      operationId: Delete_Project
      summary: Удалить проект
    get:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Проекты
      description: ''
      operationId: View_project
      summary: Просмотр проекта
    patch:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit project for the project to be altered
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Name can't be blank.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          headers: {}
      tags:
        - Проекты
      description: Обновляет данный проект, применяя атрибуты, указанные в теле.
      operationId: Update_Project
      summary: Проект обновления
  /api/v3/projects/{id}/form:
    post:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
              empty:
                description: Empty request to get the form initially in order to start the guided update of a project
                value: {}
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit projects in the project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Проекты
      description: ''
      operationId: Project_update_form
      summary: Форма обновления проекта
  /api/v3/projects/{id}/copy:
    post:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '302':
          description: Returned if the request is successful. It will redirect to the job statuses API with the backend job that got created. You can query that endpoint to check the status of the copy, and eventually get the created project.
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** copy projects in the source project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Name can't be blank.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          headers: {}
      tags:
        - Проекты
      description: ''
      operationId: Create_project_copy
      summary: Создать копию проекта
  /api/v3/projects/{id}/copy/form:
    post:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** copy projects in the source project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Проекты
      description: ''
      operationId: Project_copy_form
      summary: Форма для копирования проекта
  /api/v3/project_statuses/{id}:
    get:
      parameters:
        - description: Идентификатор статуса проекта
          example: on_track
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/project_statuses/on_track
                    _type: ProjectStatus
                    id: on_track
                    name: On track
              schema:
                $ref: '#/components/schemas/View_project_statusModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the project status does not exist.
          headers: {}
      tags:
        - Проекты
      description: ''
      operationId: View_project_status
      summary: Просмотр статуса проекта
  /api/v3/projects/available_parent_projects:
    get:
      parameters:
        - description: JSON, задающий условия фильтрации.
          example: '[{ "ancestor": { "operator": "=", "values": [''1''] }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: Идентификатор проекта, для которого определен родительский кандидат
          example: '123'
          in: query
          name: of
          required: false
          schema:
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/), и разрешает все фильтры и сортировку, поддерживаемые конечной точкой списка проектов.
          example: '[["id", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            categories:
                              href: /api/v3/projects/6/categories
                            createWorkPackage:
                              href: /api/v3/projects/6/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/6/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/6
                              title: A project
                            status:
                              href: /api/v3/project_statuses/on_track
                              title: On track
                            versions:
                              href: /api/v3/projects/6/versions
                          _type: Project
                          active: true
                          createdAt: '2015-07-06T13:28:14+00:00'
                          description:
                            format: markdown
                            html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
                            raw: Lorem **ipsum** dolor sit amet
                          id: 6
                          identifier: a_project
                          name: A project
                          public: false
                          statusExplanation:
                            format: markdown
                            html: <p>Everything <strong>fine</strong></p>
                            raw: Everything **fine**
                          type: Customer Project
                          updatedAt: '2015-10-01T09:55:02+00:00'
                        - _links:
                            categories:
                              href: /api/v3/projects/14/categories
                            createWorkPackage:
                              href: /api/v3/projects/14/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/14/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/14
                              title: Another project
                            status:
                              href: /api/v3/project_statuses/on_track
                              title: On track
                            versions:
                              href: /api/v3/projects/14/versions
                          _type: Project
                          active: true
                          createdAt: '2016-02-29T12:50:20+00:00'
                          description:
                            format: markdown
                            html: ''
                            raw: ''
                          id: 14
                          identifier: another_project
                          name: Another project
                          public: true
                          statusExplanation:
                            format: markdown
                            html: <p>Everything super <strong>fine</strong></p>
                            raw: Everything super **fine**
                          type: null
                          updatedAt: '2016-02-29T12:50:20+00:00'
                    _links:
                      self:
                        href: /api/v3/projects/available_parent_projects?of=123
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/List_available_parent_project_candidatesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit project in a project or the global add project permission
          headers: {}
      tags:
        - Проекты
      description: |-
        Содержит список проектов, которые могут стать родительскими для другого проекта. Возвращаются только подходящие кандидаты.
        Например, проект не может стать родительским для самого себя или своих дочерних объектов.

        Чтобы указать проект, для которого запрашивается родительский объект, можно указать параметр `of`. Если параметр `of`
        не указан, предполагается, что это новый проект. Тогда проверка на иерархию не выполняется, поскольку новый проект еще не может быть
        частью иерархии.

        Кандидаты могут быть отфильтрованы. Чаще всего требуется выполнить фильтрацию по имени или идентификатору.
        Вы можете сделать это с помощью параметра `filters`, который работает так же, как индекс рабочего пакета.

        Например, чтобы найти всех кандидатов-родителей с "rollout" в названии.:

        ```
        ?filters=[{"name_and_identifier":{"operator":"~","values":["rollout"]}}]
        ```
      operationId: List_available_parent_project_candidates
      summary: Список доступных кандидатов на участие в родительском проекте
  /api/v3/projects/{id}/budgets:
    get:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/budgets/1
                              title: Q3 2015
                          _type: Budget
                          id: 1
                          subject: Q3 2015
                        - _links:
                            self:
                              href: /api/v3/budgets/2
                              title: Q4 2015
                          _type: Budget
                          id: 2
                          subject: Q4 2015
                    _links:
                      self:
                        href: /api/v3/projects/1/budgets
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Budgets_by_ProjectModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the budgets of this project.
          description: |-
            Returned if the client does not have sufficient permissions to see the budgets of the given
            project.

            **Required permission:** view work packages **or** view budgets

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
          description: |-
            Returned if either:

            * the project does not exist

            * the client does not have sufficient permissions to see the project

            * the costs module is not enabled on the given project

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Бюджеты
      description: ''
      operationId: view_Budgets_of_a_Project
      summary: просмотр бюджетов проекта
  /api/v3/projects/{id}/queries/default:
    get:
      summary: Просмотр запроса по умолчанию для проекта
      operationId: View_default_query_for_project
      tags:
        - Запросы
      description: Аналогично [просмотру существующего сохраненного запроса](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/#list-queries) в своем ответе этот ресурс возвращает неперсонифицированный запрос и, таким образом, позволяет получить конфигурацию запроса по умолчанию. Клиент также может предоставить дополнительные параметры, которые изменят запрос по умолчанию. Запрос уже будет ограничен областью действия для проекта.
      parameters:
        - description: Идентификатор проекта, для которого запрашивается запрос по умолчанию
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - name: filters
          description: |-
            JSON, указывающий условия фильтрации.
            Фильтры, предоставленные в качестве параметров, не применяются к запросу, а вместо этого используются для переопределения сохраняемых фильтров запроса.
            Принимаются все фильтры, которые также принимаются конечной точкой work packages. Если фильтр не должен применяться, клиент должен отправить пустой массив (`[]`).
          example: '[{ "assignee": { "operator": "=", "values": ["1", "5"] }" }]'
          in: query
          required: false
          schema:
            default: '[{ "status_id": { "operator": "o", "values": null }}]'
            type: string
        - name: offset
          description: Номер страницы в коллекции рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            default: 1
            type: integer
        - name: pageSize
          description: Количество элементов, отображаемых на странице для набора рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            type: integer
        - name: sortBy
          description: JSON, задающий критерии сортировки. Критерии сортировки применяются к результирующей коллекции рабочих пакетов запроса, переопределяя сохраняемые критерии сортировки запроса.
          example: '[["status", "asc"]]'
          in: query
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
        - name: groupBy
          description: Столбец, по которому нужно сгруппировать. Критерии группировки применяются к коллекции рабочих пакетов результатов запроса, переопределяя сохраняемые критерии группировки запроса.
          example: status
          in: query
          required: false
          schema:
            type: string
        - name: showSums
          description: Указывает, следует ли суммировать свойства, если они это поддерживают. Параметр showSums применяется к коллекции рабочих пакетов результатов запроса, переопределяя свойство сохраняемых сумм запроса.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: timestamps
          description: |
            Указывает временные метки, по которым следует выполнять фильтрацию при отображении измененных атрибутов в рабочих пакетах. Значениями могут быть даты ISO8601, продолжительность ISO8601 и следующие ключевые слова, относящиеся к дате: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". Первая часть "ЧЧ:ММ" обозначает часы и минуты с нулевым значением. Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем. Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.
          example: 2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00
          in: query
          required: false
          schema:
            default: PT0S
            type: string
        - name: timelineVisible
          description: Указывает, следует ли отображать временную шкалу.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: showHierarchies
          description: Указывает, следует ли включать режим иерархии.
          example: true
          in: query
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/42
                        title: Lorem ipsum project
                      results:
                        href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/projects/42/queries/default
                        title: Default
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: METEOR Admin
                    _type: Query
                    filters:
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                        _type: StatusQueryFilter
                        name: Status
                    name: default
                    public: false
                    showHierarchies: true
                    starred: false
                    sums: false
                    timelineVisible: false
                    timelineZoomLevel: days
              schema:
                $ref: '#/components/schemas/Default_Query_for_ProjectModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see the default query.

            **Required permission:** view work packages in the project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the client does not have sufficient permissions to see the project.

            **Required permission:** any permission in the project
          headers: {}
  /api/v3/projects/{id}/queries/filter_instance_schemas:
    get:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _dependencies:
                            - _type: SchemaDependency
                              dependencies:
                                /api/v3/queries/operators/!:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                                /api/v3/queries/operators/!*: {}
                                /api/v3/queries/operators/*: {}
                                /api/v3/queries/operators/=:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                              'on': operator
                          _links:
                            filter:
                              href: /api/v3/queries/filters/assignee
                              title: Assignee
                            self:
                              href: /api/v3/queries/filter_instance_schemas/assignee
                          _type: QueryFilterInstanceSchema
                          filter:
                            _links: {}
                            hasDefault: false
                            name: Filter
                            required: true
                            type: QueryFilter
                            writable: true
                          name:
                            hasDefault: true
                            name: Name
                            required: true
                            type: String
                            writable: false
                        - _dependencies:
                            - _type: SchemaDependency
                              dependencies:
                                /api/v3/queries/operators/!:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                                /api/v3/queries/operators/=:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                              'on': operator
                          _links:
                            filter:
                              href: /api/v3/queries/filters/author
                              title: Author
                            self:
                              href: /api/v3/queries/filter_instance_schemas/author
                          _type: QueryFilterInstanceSchema
                          filter:
                            _links: {}
                            hasDefault: false
                            name: Filter
                            required: true
                            type: QueryFilter
                            writable: true
                          name:
                            hasDefault: true
                            name: Name
                            required: true
                            type: String
                            writable: false
                    _links:
                      self:
                        href: /api/v3/projects/42/queries/filter_instance_schemas
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_Schemas_For_ProjectModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
      tags:
        - Схема фильтров
      description: Возвращает список схем Queryfilterinstances, определенных для запроса указанного проекта.
      operationId: List_Query_Filter_Instance_Schemas_for_Project
      summary: Список схем экземпляров фильтра запросов для проекта
  /api/v3/projects/{id}/queries/schema:
    get:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                QuerySchema:
                  $ref: '#/components/examples/QuerySchemaModel'
              schema:
                $ref: '#/components/schemas/Schema_For_Project_QueriesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: '**Required permission:** view work package in the project'
          headers: {}
      tags:
        - Запросы
      description: Извлеките схему для запросов проекта.
      operationId: View_schema_for_project_queries
      summary: Просмотр схемы для запросов проекта
  /api/v3/projects/{id}/work_packages:
    get:
      summary: Получите рабочие пакеты проекта
      operationId: Get_Project_Work_Package_Collection
      tags:
        - Рабочие пакеты/Задачи
      description: Возвращает коллекцию рабочих пакетов, относящихся к данному проекту.
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Номер страницы в запрашиваемой коллекции.
          example: '25'
          in: query
          name: offset
          required: false
          schema:
            default: 1
            type: integer
        - description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). Если фильтр не должен применяться, клиент должен отправить пустой массив (`[]`).
          example: '[{ "type_id": { "operator": "=", "values": [''1'', ''2''] }}]'
          in: query
          name: filters
          required: false
          schema:
            default: '[{ "status_id": { "operator": "o", "values": null }}]'
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
          example: '[["status", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
        - description: Столбец, по которому нужно сгруппировать данные.
          example: status
          in: query
          name: groupBy
          required: false
          schema:
            type: string
        - description: Указывает, следует ли суммировать свойства, если они это поддерживают.
          example: true
          in: query
          name: showSums
          required: false
          schema:
            default: false
            type: boolean
        - description: Список свойств, которые нужно включить, разделенный запятыми.
          example: total,elements/subject,elements/id,self
          in: query
          name: select
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackagesModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to see the work packages of this project.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view project
    post:
      summary: Создать рабочий пакет в проекте
      operationId: Create_Project_Work_Package
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий, по крайней мере, необходимые свойства и ссылки
        в теле. Обязательные поля WorkPackage можно найти в его схеме, которая встроена в
        соответствующую форму. Обратите внимание, что разрешается предоставлять только свойства или ссылки, поддерживающие операцию записи.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: |-
            Указывает, следует ли отправлять уведомления об изменениях (например, по электронной почте).
            Обратите внимание, что это позволяет отправлять уведомления всем пользователям, заинтересованным в изменениях в рабочем пакете (например, наблюдателям, автору и правопреемнику),
            а не только текущему пользователю.
          example: false
          in: query
          name: notify
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to add work packages to this project.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permissions:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: Subject
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
  /api/v3/projects/{id}/work_packages/form:
    post:
      parameters:
        - description: Идентификатор проекта, в рамках которого будет создан рабочий пакет
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      operationId: Work_Package_Create_Form_For_Project
      summary: Рабочий пакет Создает Форму для Проекта
  /api/v3/projects/{id}/available_assignees:
    get:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            delete:
                              href: /api/v3/users/1
                              method: DELETE
                              title: Delete j.sheppard
                            lock:
                              href: /api/v3/users/1/lock
                              method: POST
                              title: Set lock on j.sheppard
                            self:
                              href: /api/v3/users/1
                              title: John Sheppard - j.sheppard
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.com
                          firstName: John
                          id: 1
                          lastName: Sheppard
                          login: j.sheppard
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                        - _links:
                            delete:
                              href: /api/v3/users/2
                              method: DELETE
                              title: Delete j.sheppard2
                            lock:
                              href: /api/v3/users/2/lock
                              method: POST
                              title: Set lock on j.sheppard2
                            self:
                              href: /api/v3/users/2
                              title: Jim Sheppard - j.sheppard2
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.net
                          firstName: Jim
                          id: 2
                          lastName: Sheppard
                          login: j.sheppard2
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/projects/42/available_assignees
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_AssigneesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the assignable users for this project.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view project
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: Получает список пользователей, которым могут быть назначены рабочие пакеты в данном проекте.
      operationId: Project_Available_assignees
      summary: Доступные правопреемники проекта
  /api/v3/projects/{id}/categories:
    get:
      parameters:
        - description: Идентификатор проекта, категории которого будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            defaultAssignee:
                              href: /api/v3/users/42
                              title: John Sheppard
                            project:
                              href: /api/v3/projects/11
                              title: Example project
                            self:
                              href: /api/v3/categories/10
                              title: Category with assignee
                          _type: Category
                          id: 10
                          name: Foo
                        - _links:
                            project:
                              href: /api/v3/projects/11
                            self:
                              href: /api/v3/categories/11
                          _type: Category
                          id: 11
                          name: Bar
                    _links:
                      self:
                        href: /api/v3/projects/11/categories
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Categories_by_ProjectModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Категории
      description: ''
      operationId: List_categories_of_a_project
      summary: Список категорий проекта
  /api/v3/projects/{id}/types:
    get:
      parameters:
        - description: Идентификатор проекта, типы которого будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/types/1
                          _type: Type
                          color: '#ff0000'
                          createdAt: '2014-05-21T08:51:20.396Z'
                          id: 1
                          isDefault: true
                          isMilestone: false
                          name: Bug
                          position: 1
                          updatedAt: '2014-05-21T08:51:20.396Z'
                        - _links:
                            self:
                              href: /api/v3/types/2
                          _type: Type
                          color: '#888'
                          createdAt: '2014-05-21T08:51:20.396Z'
                          id: 2
                          isDefault: false
                          isMilestone: false
                          name: Feature
                          position: 2
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/projects/11/types
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Types_by_ProjectModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage types (on given project)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Типы
      description: В этой конечной точке перечислены типы, которые *доступны* в данном проекте.
      operationId: List_types_available_in_a_project
      summary: Перечислите типы, доступные в проекте
  /api/v3/projects/{id}/versions:
    get:
      parameters:
        - description: Идентификатор проекта, версии которого будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/11/projects
                            definingProject:
                              href: /api/v3/projects/11
                            self:
                              href: /api/v3/versions/11
                          _type: Version
                          description:
                            format: plain
                            html: This version has a description
                            raw: This version has a description
                          endDate: null
                          id: 11
                          name: v3.0 Alpha
                          startDate: '2014-11-20'
                          status: Open
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/12/projects
                            definingProject:
                              href: /api/v3/projects/11
                            self:
                              href: /api/v3/versions/12
                          _type: Version
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          endDate: null
                          id: 12
                          name: v2.0
                          startDate: null
                          status: Closed
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/10/projects
                            definingProject:
                              href: /api/v3/projects/11
                            self:
                              href: /api/v3/versions/10
                          _type: Version
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          endDate: null
                          id: 10
                          name: v1.0
                          startDate: null
                          status: Open
                    _links:
                      self:
                        href: /api/v3/projects/11/versions
                    _type: Collection
                    count: 3
                    total: 3
              schema:
                $ref: '#/components/schemas/Versions_by_ProjectModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (on given project)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Версии/Спринты
      description: |-
        В этой конечной точке перечислены версии, которые *доступны* в данном проекте.
        Обратите внимание, что из-за совместного использования это может быть больше, чем версий, *определенных* в этом проекте.
      operationId: List_versions_available_in_a_project
      summary: Список версий, доступных в проекте
  /api/v3/queries:
    get:
      summary: Запросы к списку
      operationId: List_queries
      tags:
        - Запросы
      description: Возвращает набор запросов. Коллекция может быть отфильтрована с помощью параметров запроса аналогично тому, как фильтруются рабочие пакеты. Однако обратите внимание, что фильтры применяются к запросам, а не к рабочим пакетам, которые, в свою очередь, могут быть возвращены запросами.
      parameters:
        - description: |-
            JSON, указывающий условия фильтрации.
            В настоящее время поддерживаются следующие фильтры:

            + project: фильтрует запросы по проекту, которому они назначены. Если фильтр проекта передается с помощью оператора `!*` (не любого), возвращаются глобальные запросы.

            + id: фильтрует запросы на основе их идентификатора

            + updated_at: фильтрует запросы на основе последнего обновления
          example: '[{ "project_id": { "operator": "!*", "values": null }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                Queries:
                  $ref: '#/components/examples/QueriesModel'
              schema:
                $ref: '#/components/schemas/QueriesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the queries.
          description: |-
            Returned if the client does not have sufficient permissions to see queries.

            **Required permission:** view work packages or manage public queries in any project
          headers: {}
    post:
      summary: Создать запрос
      operationId: Create_query
      tags:
        - Запросы
      description: |-
        При вызове этой конечной точки клиент предоставляет в теле запроса один объект, содержащий, по крайней мере, необходимые свойства и ссылки.
        Необходимые поля запроса можно найти в его схеме, которая встроена в соответствующую форму.
        Обратите внимание, что разрешается предоставлять только свойства или ссылки, поддерживающие операцию записи.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Create_Form'
      responses:
        '201':
          content:
            application/hal+json:
              examples:
                Query:
                  $ref: '#/components/examples/QueryModel'
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: Created
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: project
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Project not found
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`),
              e.g. a user, project or operator not found
          headers: {}
  /api/v3/queries/available_projects:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            categories:
                              href: /api/v3/projects/6/categories
                            createWorkPackage:
                              href: /api/v3/projects/6/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/6/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/6
                              title: A project
                            versions:
                              href: /api/v3/projects/6/versions
                          _type: Project
                          createdAt: '2015-07-06T13:28:14+00:00'
                          description: Eveniet molestias omnis quis aut qui eum adipisci.
                          id: 6
                          identifier: a_project
                          name: A project
                          type: Customer Project
                          updatedAt: '2015-10-01T09:55:02+00:00'
                        - _links:
                            categories:
                              href: /api/v3/projects/14/categories
                            createWorkPackage:
                              href: /api/v3/projects/14/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/14/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/14
                              title: Another project
                            versions:
                              href: /api/v3/projects/14/versions
                          _type: Project
                          createdAt: '2016-02-29T12:50:20+00:00'
                          description: ''
                          id: 14
                          identifier: another_project
                          name: Another project
                          type: null
                          updatedAt: '2016-02-29T12:50:20+00:00'
                    _links:
                      self:
                        href: /api/v3/queries/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_queryModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages
          headers: {}
      tags:
        - Запросы
      description: Возвращает список проектов, доступных в качестве проектов, которым может быть назначен запрос.
      operationId: Available_projects_for_query
      summary: Доступные проекты для запроса
  /api/v3/queries/columns/{id}:
    get:
      parameters:
        - description: Идентификатор столбца запроса
          example: priority
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/columns/priority
                        title: Priority
                    _type: QueryColumn::Property
                    id: priority
                    name: Priority
              schema:
                $ref: '#/components/schemas/Query_ColumnModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: Returned if the QueryColumn does not exist.
          headers: {}
      tags:
        - Столбцы запросов
      description: Извлеките отдельный столбец запроса, указанный в параметре `id`.
      operationId: View_Query_Column
      summary: Просмотр столбца запроса
  /api/v3/queries/default:
    get:
      summary: Просмотр запроса по умолчанию
      operationId: View_default_query
      tags:
        - Запросы
      description: Аналогично [просмотру существующего сохраненного запроса](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/#list-queries) в своем ответе этот ресурс возвращает неперсонифицированный запрос и, таким образом, позволяет получить конфигурацию запроса по умолчанию. Клиент также может предоставить дополнительные параметры, которые изменят запрос по умолчанию.
      parameters:
        - name: filters
          description: |-
            JSON, указывающий условия фильтрации.
            Фильтры, предоставленные в качестве параметров, не применяются к запросу, а вместо этого используются для переопределения сохраняемых фильтров запроса.
            Принимаются все фильтры, которые также принимаются конечной точкой work packages. Если фильтр не должен применяться, клиент должен отправить пустой массив (`[]`).
          example: '[{ "assignee": { "operator": "=", "values": ["1", "5"] }" }]'
          in: query
          required: false
          schema:
            default: '[{ "status_id": { "operator": "o", "values": null }}]'
            type: string
        - name: offset
          description: Номер страницы в коллекции рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            default: 1
            type: integer
        - name: pageSize
          description: Количество элементов, отображаемых на странице для набора рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            type: integer
        - name: sortBy
          description: JSON, задающий критерии сортировки. Критерии сортировки применяются к результирующей коллекции рабочих пакетов запроса, переопределяя сохраняемые критерии сортировки запроса.
          example: '[["status", "asc"]]'
          in: query
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
        - name: groupBy
          description: Столбец, по которому нужно сгруппировать. Критерии группировки применяются к коллекции рабочих пакетов результатов запроса, переопределяя сохраняемые критерии группировки запроса.
          example: status
          in: query
          required: false
          schema:
            type: string
        - name: showSums
          description: Указывает, следует ли суммировать свойства, если они это поддерживают. Параметр showSums применяется к коллекции рабочих пакетов результатов запроса, переопределяя свойство сохраняемых сумм запроса.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: timestamps
          description: |
            Указывает временные метки, по которым следует выполнять фильтрацию при отображении измененных атрибутов в рабочих пакетах. Значениями могут быть даты ISO8601, продолжительность ISO8601 и следующие ключевые слова, относящиеся к дате: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". Первая часть "ЧЧ:ММ" обозначает часы и минуты с нулевым значением. Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем, смещение может быть положительным или отрицательным, например "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00". Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.
          example: 2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00
          in: query
          required: false
          schema:
            default: PT0S
            type: string
        - name: timelineVisible
          description: Указывает, следует ли отображать временную шкалу.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: timelineZoomLevel
          description: Указывает, на каком уровне масштабирования должна отображаться временная шкала. Допустимыми значениями являются `days`, `weeks`, `months`, `quarters`, и `years`.
          example: days
          in: query
          required: false
          schema:
            default: days
            type: string
        - name: showHierarchies
          description: Указывает, следует ли включать режим иерархии.
          example: true
          in: query
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      highlightedAttributes: []
                      project:
                        href: null
                      results:
                        href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/default
                        title: Default
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: METEOR Admin
                    _type: Query
                    filters:
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                        _type: StatusQueryFilter
                        name: Status
                    highlightingMode: inline
                    name: default
                    public: false
                    showHierarchies: true
                    starred: false
                    sums: false
                    timelineLabels: {}
                    timelineVisible: false
                    timelineZoomLevel: days
              schema:
                $ref: '#/components/schemas/Default_QueryModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see the default query.

            **Required permission:** view work packages in any project
          headers: {}
  /api/v3/queries/filter_instance_schemas:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _dependencies:
                            - _type: SchemaDependency
                              dependencies:
                                /api/v3/queries/operators/!:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                                /api/v3/queries/operators/!*: {}
                                /api/v3/queries/operators/*: {}
                                /api/v3/queries/operators/=:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                              'on': operator
                          _links:
                            filter:
                              href: /api/v3/queries/filters/assignee
                              title: Assignee
                            self:
                              href: /api/v3/queries/filter_instance_schemas/assignee
                          _type: QueryFilterInstanceSchema
                          filter:
                            _links: {}
                            hasDefault: false
                            name: Filter
                            required: true
                            type: QueryFilter
                            writable: true
                          name:
                            hasDefault: true
                            name: Name
                            required: true
                            type: String
                            writable: false
                        - _dependencies:
                            - _type: SchemaDependency
                              dependencies:
                                /api/v3/queries/operators/!:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                                /api/v3/queries/operators/=:
                                  values:
                                    _links: {}
                                    hasDefault: false
                                    name: Values
                                    required: true
                                    type: '[]User'
                                    writable: true
                              'on': operator
                          _links:
                            filter:
                              href: /api/v3/queries/filters/author
                              title: Author
                            self:
                              href: /api/v3/queries/filter_instance_schemas/author
                          _type: QueryFilterInstanceSchema
                          filter:
                            _links: {}
                            hasDefault: false
                            name: Filter
                            required: true
                            type: QueryFilter
                            writable: true
                          name:
                            hasDefault: true
                            name: Name
                            required: true
                            type: String
                            writable: false
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_SchemasModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
      tags:
        - Схема фильтров
      description: Возвращает список схем Queryfilterinstances, определенных для глобального запроса. Это запрос, не назначенный проекту.
      operationId: List_Query_Filter_Instance_Schemas
      summary: Схемы экземпляров фильтра запросов списка
  /api/v3/queries/filter_instance_schemas/{id}:
    get:
      parameters:
        - description: QueryFilterInstanceSchema identifier. Этот идентификатор является идентификатором фильтра.
          example: author
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies:
                      - _type: SchemaDependency
                        dependencies:
                          /api/v3/queries/operators/!:
                            values:
                              _links: {}
                              hasDefault: false
                              name: Values
                              required: true
                              type: '[]User'
                              writable: true
                          /api/v3/queries/operators/=:
                            values:
                              _links: {}
                              hasDefault: false
                              name: Values
                              required: true
                              type: '[]User'
                              writable: true
                        'on': operator
                    _links:
                      filter:
                        href: /api/v3/queries/filters/author
                        title: Author
                      self:
                        href: /api/v3/queries/filter_instance_schemas/author
                    _type: QueryFilterInstanceSchema
                    filter:
                      _links: {}
                      hasDefault: false
                      name: Filter
                      required: true
                      type: QueryFilter
                      writable: true
                    name:
                      hasDefault: true
                      name: Name
                      required: true
                      type: String
                      writable: false
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: Returned if the QueryFilterInstanceSchema does not exist.
          headers: {}
      tags:
        - Схема фильтров
      description: Извлеките отдельную схему QueryFilterInstanceSchema, указанную в параметре id.
      operationId: View_Query_Filter_Instance_Schema
      summary: Просмотр схемы экземпляра фильтра запросов
  /api/v3/queries/filters/{id}:
    get:
      parameters:
        - description: Идентификатор фильтра запросов
          example: status
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/filters/status
                        title: Status
                    _type: QueryFilter
                    id: status
              schema:
                $ref: '#/components/schemas/Query_FilterModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: Returned if the QueryFilter does not exist.
          headers: {}
      tags:
        - Фильтры запросов
      description: Извлеките отдельный QueryFilter, указанный в параметре id.
      operationId: View_Query_Filter
      summary: Просмотр фильтра запросов
  /api/v3/queries/form:
    post:
      summary: Форма создания запроса
      operationId: Query_Create_Form
      tags:
        - Запросы
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Create_Form'
      responses:
        '200':
          description: OK
          headers: {}
  /api/v3/queries/operators/{id}:
    get:
      parameters:
        - description: Идентификатор оператора запроса
          example: '!'
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/operators/!
                        title: is not
                    _type: QueryOperator
                    id: '!'
                    name: is not
              schema:
                $ref: '#/components/schemas/Query_OperatorModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: Returned if the QueryOperator does not exist.
          headers: {}
      tags:
        - Операторы запросов
      description: Извлеките отдельного оператора запроса, идентифицированного параметром `id`.
      operationId: View_Query_Operator
      summary: Оператор запроса просмотра
  /api/v3/queries/schema:
    get:
      summary: Просмотр схемы для глобальных запросов
      operationId: View_schema_for_global_queries
      tags:
        - Запросы
      description: Извлеките схему для глобальных запросов, тех, которые не назначены проекту.
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                QuerySchema:
                  $ref: '#/components/examples/QuerySchemaModel'
              schema:
                $ref: '#/components/schemas/Schema_For_Global_QueriesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: '**Required permission:** view work package in any project'
          headers: {}
  /api/v3/queries/sort_bys/{id}:
    get:
      parameters:
        - description: Запросить сортировку по идентификатору. Идентификатор представляет собой комбинацию идентификатора столбца и направления.
          example: status-asc
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      column:
                        href: /api/v3/queries/columns/status
                        title: Status
                      direction:
                        href: urn:meteor-org:api:v3:queries:directions:asc
                        title: Ascending
                      self:
                        href: /api/v3/queries/sort_bys/status-asc
                        title: Status (Ascending)
                    _type: QuerySortBy
                    id: status-asc
                    name: Status (Ascending)
              schema:
                $ref: '#/components/schemas/Query_Sort_ByModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: Returned if the QuerySortBy does not exist.
          headers: {}
      tags:
        - Сортировка запроса
      description: Извлеките отдельный запросsortby, указанный в параметре id.
      operationId: View_Query_Sort_By
      summary: Просмотр Запроса, Отсортированного по
  /api/v3/queries/{id}:
    delete:
      summary: Удалить запрос
      operationId: Delete_query
      tags:
        - Запросы
      description: Удалите запрос, идентифицированный параметром id
      parameters:
        - description: Идентификатор запроса
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
          headers: {}
    get:
      summary: Просмотр запроса
      operationId: View_query
      tags:
        - Запросы
      description: Извлекает отдельный запрос, идентифицируемый параметром id. Затем конечная точка принимает ряд параметров, которые могут использоваться для переопределения сохраняемых параметров ресурсов.
      parameters:
        - name: id
          description: Идентификатор запроса
          example: '1'
          in: path
          required: true
          schema:
            type: integer
        - name: filters
          description: |-
            JSON, определяющий условия фильтрации.
            Фильтры, предоставленные в качестве параметров, не применяются к запросу, а вместо этого используются для переопределения сохраняемых фильтров запроса.
            Принимаются все фильтры, которые также принимаются конечной точкой work packages. Если фильтр не должен применяться, клиент должен отправить пустой массив (`[]`).
          example: '[{ "assignee": { "operator": "=", "values": ["1", "5"] }" }]'
          in: query
          required: false
          schema:
            default: '[{ "status_id": { "operator": "o", "values": null }}]'
            type: string
        - name: offset
          description: Номер страницы в коллекции рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            default: 1
            type: integer
        - name: pageSize
          description: Количество элементов, отображаемых на странице для набора рабочих пакетов результатов запросов.
          example: '25'
          in: query
          required: false
          schema:
            type: integer
        - name: columns
          description: Выбранные столбцы для табличного представления.
          example: '[]'
          in: query
          required: false
          schema:
            default: '[''type'', ''priority'']'
            type: string
        - name: sortBy
          description: JSON, задающий критерии сортировки. Критерии сортировки применяются к результирующей коллекции рабочих пакетов запроса, переопределяя сохраняемые критерии сортировки запроса.
          example: '[["status", "asc"]]'
          in: query
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
        - name: groupBy
          description: Столбец, по которому нужно сгруппировать. Критерии группировки применяются к коллекции рабочих пакетов результатов запроса, переопределяя сохраняемые критерии группировки запроса.
          example: status
          in: query
          required: false
          schema:
            type: string
        - name: showSums
          description: Указывает, следует ли суммировать свойства, если они это поддерживают. Параметр showSums применяется к коллекции рабочих пакетов результатов запроса, переопределяя свойство сохраняемых сумм запроса.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: timestamps
          description: |
            Указывает временные метки, по которым следует выполнять фильтрацию при отображении измененных атрибутов в рабочих пакетах. Значениями могут быть даты ISO8601, продолжительность ISO8601 и следующие ключевые слова, относящиеся к дате: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". Первая часть "ЧЧ:ММ" обозначает часы и минуты с нулевым значением. Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем, смещение может быть положительным или отрицательным, например "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00". Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.
          example: 2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00
          in: query
          required: false
          schema:
            default: PT0S
            type: string
        - name: timelineVisible
          description: Указывает, следует ли отображать временную шкалу.
          example: true
          in: query
          required: false
          schema:
            default: false
            type: boolean
        - name: timelineLabels
          description: Переопределенные метки в представлении временной шкалы
          example: '{}'
          in: query
          required: false
          schema:
            default: '{}'
            type: string
        - name: highlightingMode
          description: Режим выделения для табличного представления.
          example: inline
          in: query
          required: false
          schema:
            default: inline
            type: string
        - name: highlightedAttributes
          description: Режим выделенных атрибутов для табличного представления, когда `highlightingMode` является `встроенным`. При установке значения `[]` все выделяемые атрибуты будут возвращены как `highlightedAttributes`.
          example: '[]'
          in: query
          required: false
          schema:
            default: '[''type'', ''priority'']'
            type: string
        - name: showHierarchies
          description: Указывает, следует ли включать режим иерархии.
          example: true
          in: query
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                Query:
                  $ref: '#/components/examples/QueryModel'
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
          headers: {}
    patch:
      summary: Редактировать запрос
      operationId: Edit_Query
      tags:
        - Запросы
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий свойства и ссылки, которые он хочет изменить, в теле.
        Обратите внимание, что разрешено предоставлять свойства или ссылки, поддерживающие только операцию записи.
      parameters:
        - description: Идентификатор запроса
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Update_Form'
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      highlightedAttributes: []
                      results:
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      highlightedAttributes: []
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: METEOR Admin
                    _type: Query
                    createdAt: '2015-03-20T12:56:56.343Z'
                    filters:
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                        _type: StatusQueryFilter
                        name: Status
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/dueDate
                            title: Finish date
                          operator:
                            href: /api/v3/queries/operators/<t+
                            title: in less than
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/dueDate
                        _type: DueDateQueryFilter
                        name: Finish date
                        values:
                          - '1'
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: false
                    sums: false
                    updatedAt: '2015-05-20T18:16:53.884Z'
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the content of the work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages in the query's project (unless global)
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: The name might not be blank.
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`)
          headers: {}
  /api/v3/queries/{id}/form:
    post:
      summary: Форма обновления запроса
      operationId: Query_Update_Form
      tags:
        - Запросы
      description: ''
      parameters:
        - description: Идентификатор запроса
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Update_Form'
      responses:
        '200':
          description: OK
          headers: {}
  /api/v3/queries/{id}/star:
    patch:
      parameters:
        - description: Идентификатор запроса
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: METEOR Admin
                    _type: Query
                    createdAt: '2015-03-20T12:56:56.856Z'
                    filters:
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                        _type: StatusQueryFilter
                        name: Status
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/dueDate
                            title: Finish date
                          operator:
                            href: /api/v3/queries/operators/<t+
                            title: in less than
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/dueDate
                        _type: DueDateQueryFilter
                        name: Finish date
                        values:
                          - '1'
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: true
                    sums: false
                    updatedAt: '2015-05-20T18:16:53.089Z'
              schema:
                $ref: '#/components/schemas/Star_QueryModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to star this query.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
          headers: {}
      tags:
        - Запросы
      description: ''
      operationId: Star_query
      summary: Звездный запрос
  /api/v3/queries/{id}/unstar:
    patch:
      parameters:
        - description: Идентификатор запроса
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: METEOR Admin
                    _type: Query
                    createdAt: '2015-03-20T12:56:56.468Z'
                    filters:
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                        _type: StatusQueryFilter
                        name: Status
                      - _links:
                          filter:
                            href: /api/v3/queries/filters/dueDate
                            title: Finish date
                          operator:
                            href: /api/v3/queries/operators/<t+
                            title: in less than
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/dueDate
                        _type: DueDateQueryFilter
                        name: Finish date
                        values:
                          - '1'
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: false
                    sums: false
                    updatedAt: '2015-05-20T18:16:53.386Z'
              schema:
                $ref: '#/components/schemas/Unstar_QueryModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to unstar this query.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Запросы
      description: ''
      operationId: Unstar_query
      summary: Незарегистрированный запрос
  /api/v3/relations:
    get:
      parameters:
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). Допустимыми полями для фильтрации являются:

            + id - идентификатор отношения

            + from - идентификатор рабочего пакета, из которого исходят отфильтрованные отношения.

            + to - идентификатор рабочего пакета, на который указывает эта связь.

            + involved - идентификатор рабочего пакета `from` или `to`.

            + type - тип отношения, по которому выполняется фильтрация, например `follows`.
          example: '[{ "from": { "operator": "=", "values": 42 }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
          example: '[["type", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            delete:
                              href: /api/v3/relations/1
                              method: DELETE
                            from:
                              href: /api/v3/work_packages/42
                              title: Steel Delivery
                            self:
                              href: /api/v3/relations/1
                            to:
                              href: /api/v3/work_packages/84
                              title: Bending the steel
                            update:
                              href: /api/v3/relations/1/form
                              method: POST
                            updateImmediately:
                              href: /api/v3/relations/1
                              method: PATCH
                          _type: Relation
                          lag: 0
                          description: We can't bend the steel before it's been delivered!
                          id: 1
                          name: precedes
                          reverseType: follows
                          type: precedes
                    _links:
                      self:
                        href: /api/v3/relations
                    _type: Collection
                    count: 1
                    total: 3
              schema:
                $ref: '#/components/schemas/RelationsModel'
          description: OK
          headers: {}
      tags:
        - Отношения
      description: |-
        Выводит список всех связей в соответствии с заданными (необязательными, логически связанными) фильтрами и упорядочивает их по идентификатору.
        Ответ включает только те связи между рабочими пакетами, которые пользователю разрешено видеть.
      operationId: List_Relations
      summary: Перечислите отношения
  /api/v3/relations/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/relations/schema
                    _type: Schema
                    lag:
                      name: Lag
                      type: Integer
                      writable: true
                    description:
                      name: Description
                      type: String
                      writable: true
                    from:
                      name: From work package
                      type: WorkPackage
                      writable: false
                    id:
                      name: ID
                      type: Integer
                      writable: false
                    reverseType:
                      name: Reverse Type
                      type: String
                      writable: false
                    to:
                      name: To work package
                      type: WorkPackage
                      writable: false
                    type:
                      name: Type
                      type: String
                      writable: true
              schema:
                $ref: '#/components/schemas/Relation_schemaModel'
          description: OK
          headers: {}
      tags:
        - Отношения
      description: ''
      operationId: View_relation_schema
      summary: Просмотр схемы отношений
  /api/v3/relations/schema/{type}:
    get:
      parameters:
        - description: Тип схемы
          example: follows
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/relations/schema
                    _type: Schema
                    lag:
                      name: Lag
                      type: Integer
                      writable: true
                    description:
                      name: Description
                      type: String
                      writable: true
                    from:
                      name: From work package
                      type: WorkPackage
                      writable: false
                    id:
                      name: ID
                      type: Integer
                      writable: false
                    reverseType:
                      name: Reverse Type
                      type: String
                      writable: false
                    to:
                      name: To work package
                      type: WorkPackage
                      writable: false
                    type:
                      name: Type
                      type: String
                      writable: true
              schema:
                $ref: '#/components/schemas/Relation_schemaModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified relation type does not exist.
          description: |-
            Returned if the relation type does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
          headers: {}
      tags:
        - Отношения
      description: ''
      operationId: View_relation_schema_for_type
      summary: Просмотр схемы связи для типа
  /api/v3/relations/{id}:
    delete:
      parameters:
        - description: Идентификатор отношения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: |-
            Returned if the relation was deleted successfully.
            The response body is empty.
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this relation.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Отношения
      description: Удаляет связь.
      operationId: Delete_Relation
      summary: Удалить связь
    get:
      parameters:
        - description: Идентификатор отношения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      delete:
                        href: /api/v3/relations/1
                        method: DELETE
                      from:
                        href: /api/v3/work_packages/42
                        title: Steel Delivery
                      self:
                        href: /api/v3/relations/1
                      to:
                        href: /api/v3/work_packages/84
                        title: Bending the steel
                      update:
                        href: /api/v3/relations/1/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/relations/1
                        method: PATCH
                    _type: Relation
                    lag: 0
                    description: We can't bend the steel before it's been delivered!
                    id: 1
                    name: precedes
                    reverseType: follows
                    type: precedes
              schema:
                $ref: '#/components/schemas/RelationModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages for the involved work packages
          headers: {}
      tags:
        - Отношения
      description: ''
      operationId: View_Relation
      summary: Отношение просмотра
    patch:
      parameters:
        - description: Идентификатор отношения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      delete:
                        href: /api/v3/relations/1
                        method: DELETE
                      from:
                        href: /api/v3/work_packages/42
                        title: Steel Delivery
                      self:
                        href: /api/v3/relations/1
                      to:
                        href: /api/v3/work_packages/84
                        title: Bending the steel
                      update:
                        href: /api/v3/relations/1/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/relations/1
                        method: PATCH
                    _type: Relation
                    lag: 0
                    description: We can't bend the steel before it's been delivered!
                    id: 1
                    name: precedes
                    reverseType: follows
                    type: precedes
              schema:
                $ref: '#/components/schemas/RelationModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`) or a
              work package that does not exist or for which the client does not have sufficient permissions
              to see it (**required permissions**: `view work packages` for the involved work packages).
          headers: {}
      tags:
        - Отношения
      description: |-
        При вызове этой конечной точки клиент предоставляет в теле сообщения единственный объект, содержащий свойства и ссылки, которые он хочет изменить.
        Разрешено предоставлять свойства или ссылки, поддерживающие только операцию записи.

        Обратите внимание, что изменение `type` отношения неизменно приводит к изменению соответствующего `reverseType`, а также его "имени".
        Возвращаемый объект Relation будет отражать это изменение. Например, если вы измените значение отношения
        `type` на `follows`, тогда `reverseType` будет изменен на `precedes`.
      operationId: Edit_Relation
      summary: Редактировать отношение
  /api/v3/relations/{id}/form:
    post:
      parameters:
        - description: Идентификатор изменяемого отношения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          from:
                            href: /api/v3/work_packages/4534
                          to:
                            href: /api/v3/work_packages/3857
                        _type: WorkPackage
                        lag: 3
                        description: let it rest for 3 days
                        type: follows
                      schema:
                        _links:
                          self:
                            href: /api/v3/relations/schema
                        _type: Schema
                        lag:
                          name: Lag
                          type: Integer
                          writable: true
                        description:
                          name: Description
                          type: String
                          writable: true
                        from:
                          name: From work package
                          type: WorkPackage
                          writable: false
                        id:
                          name: ID
                          type: Integer
                          writable: false
                        reverseType:
                          name: Reverse Type
                          type: String
                          writable: false
                        to:
                          name: To work package
                          type: WorkPackage
                          writable: false
                        type:
                          allowedValues:
                            - relates
                            - duplicates
                            - duplicated
                            - blocks
                            - blocked
                            - precedes
                            - follows
                            - includes
                            - partof
                            - requires
                            - required
                          name: Type
                          type: String
                          writable: true
                      validationErrors:
                        from:
                          _type: Error
                          errorIdentifier: urn:meteor-org:api:v3:errors:BadExampleError
                          message: For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.
                    _links:
                      commit:
                        href: /api/v3/relations
                        method: PATCH
                      self:
                        href: /api/v3/relations/form
                      validate:
                        href: /api/v3/relations/form
                        method: POST
                    _type: Form
              schema:
                $ref: '#/components/schemas/Relation_edit_formModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the specified relation.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations

            *Note that you will only receive this error, if you are at least allowed to see the involved work packages.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view (involved) work package(s), manage work package relations
          headers: {}
      tags:
        - Отношения
      description: ''
      operationId: Relation_edit_form
      summary: Форма редактирования отношения
  /api/v3/render/markdown:
    post:
      parameters:
        - description: |-
            API - ссылка на контекст, в котором выполняется рендеринг, например, на определенный рабочий пакет.

            Если это не указано, выполняется только независимый от контекста рендеринг.
            Пожалуйста, обратите внимание, что METEOR поддерживает markdown-расширения в дополнение к уже предоставляемым на GitHub расширениям Markdown (gfm)
            , которые могут работать только в определенном контексте (например, отображать прикрепленные изображения).

            **Поддерживаемые контексты:**

            * `/api/v3/work_packages/{id}` - существующий рабочий пакет
          example: /api/v3/work_packages/42
          in: query
          name: context
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            text/html:
              examples:
                response:
                  value: <p>Hello world! <a href="http://example.com">This</a> <strong>is</strong> markdown!</p>
              schema:
                $ref: '#/components/schemas/MarkdownModel'
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRenderContext
                    message: Could not render markdown string in the given context.
          description: |-
            Returned if the context passed by the client is not valid (e.g. unknown).

            Note that this response will also occur when the requesting user
            is not allowed to see the context resource (e.g. limited work package visibility).
          headers: {}
        '415':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:TypeNotSupported
                    message: Expected Content-Type to be 'text/plain' but got 'application/json'.
          description: Returned if the Content-Type indicated in the request is not `text/plain`.
          headers: {}
      tags:
        - Предварительное просмотр
      description: ''
      operationId: Preview_Markdown_document
      summary: Предварительный просмотр документа Markdown
  /api/v3/render/plain:
    post:
      responses:
        '200':
          content:
            text/html:
              examples:
                response:
                  value: |
                    <p>Hello world! This *is* plain text!</p>
              schema:
                $ref: '#/components/schemas/Plain_TextModel'
          description: OK
          headers: {}
        '415':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:TypeNotSupported
                    message: Expected Content-Type to be 'text/plain' but got 'application/json'.
          description: Returned if the Content-Type indicated in the request is not `text/plain`.
          headers: {}
      tags:
        - Предварительное просмотр
      description: ''
      operationId: Preview_plain_document
      summary: Предварительный просмотр обычного документа
  /api/v3/revisions/{id}:
    get:
      parameters:
        - description: Идентификатор версии
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      author:
                        href: /api/v3/users/1
                      project:
                        href: /api/v3/projects/1
                      self:
                        href: /api/v3/revisions/1
                      showRevision:
                        href: /projects/identifier/repository/revision/11f4b07
                    _type: Revision
                    authorName: Some Developer
                    createdAt: '2015-07-21T13:36:59.454Z'
                    formattedIdentifier: 11f4b07
                    id: 1
                    identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
                    message:
                      format: plain
                      html: <p>This revision provides new features<br/><br/>An elaborate description</p>
                      raw: |-
                        This revision provides new features

                        An elaborate description
              schema:
                $ref: '#/components/schemas/RevisionModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified revision does not exist.
          description: |-
            Returned if the revision does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view changesets for the project the repository is created in.

            *Note: A client without sufficient permissions shall not be able to test for the existence of a revision.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Ревизии
      description: ''
      operationId: View_revision
      summary: Просмотр изменений
  /api/v3/roles:
    get:
      parameters:
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            + возможность предоставления: фильтрует роли в зависимости от того, могут ли они быть выбраны для членства

            + подразделение: фильтрует роли в зависимости от подразделения ("проект" или "система"), для которого они доступны для участия
          example: '[{ "unit": { "operator": "=", "values": ["system"] }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/roles/3
                              title: Manager
                          _type: Role
                          id: 3
                          name: Manager
                        - _links:
                            self:
                              href: /api/v3/roles/2
                              title: Anonymous
                          _type: Role
                          id: 2
                          name: Anonymous
                        - _links:
                            self:
                              href: /api/v3/roles/5
                              title: Reader
                          _type: Role
                          id: 5
                          name: Reader
                        - _links:
                            self:
                              href: /api/v3/roles/4
                              title: Member
                          _type: Role
                          id: 4
                          name: Member
                        - _links:
                            self:
                              href: /api/v3/roles/1
                              title: Non member
                          _type: Role
                          id: 1
                          name: Non member
                    _links:
                      self:
                        href: /api/v3/roles
                    _type: Collection
                    count: 5
                    total: 5
              schema:
                $ref: '#/components/schemas/RolesModel'
          description: OK
          headers: {}
      tags:
        - Роли
      description: Перечислите все определенные роли. Это включает в себя встроенные роли, такие как "Анонимный" и "Не являющийся участником".
      operationId: List_roles
      summary: Список ролей
  /api/v3/roles/{id}:
    get:
      parameters:
        - description: Идентификатор роли
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/roles/3
                        title: Manager
                    _type: Role
                    id: 3
                    name: Manager
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see roles.

            **Required permission:** view members **or** manage members
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: Returned if the role does not exist.
          headers: {}
      tags:
        - Роли
      description: Выберите индивидуальную роль.
      operationId: View_role
      summary: Просмотр роли
  /api/v3/statuses:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                simple status collection:
                  $ref: '#/components/examples/StatusCollection'
              schema:
                $ref: '#/components/schemas/StatusCollectionModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the statuses.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
      tags:
        - Статусы
      description: ''
      operationId: List_all_Statuses
      summary: Перечислите все статусы
  /api/v3/statuses/{id}:
    get:
      parameters:
        - description: Идентификатор статуса
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/statuses/1
                    _type: Status
                    defaultDoneRatio: 0
                    id: 1
                    isClosed: false
                    isDefault: true
                    name: New
                    position: 1
              schema:
                $ref: '#/components/schemas/StatusModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this status.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
      tags:
        - Статусы
      description: ''
      operationId: View_Status
      summary: Просмотр статуса
  /api/v3/storages:
    get:
      summary: Получите хранилища
      operationId: list_storages
      tags:
        - Ссылки на файлы
      description: Возвращает коллекцию хранилищ.
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageCollectionModel'
              examples:
                Simple storage collection:
                  $ref: '#/components/examples/StoragesSimpleCollectionModel'
        '400':
          description: Returned if the client sends invalid request parameters e.g. filters
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
    post:
      summary: Создает хранилище.
      operationId: create_storage
      tags:
        - Ссылки на файлы
      description: |-
        Создает ресурс хранилища. При создании хранилища автоматически создается конфиденциальное приложение поставщика OAuth 2
        . В ответе возвращаются идентификатор клиента oauth и секрет созданного приложения OAuth.

        **ВАЖНО: ** Это единственный раз, когда пользователь видит секрет клиента oauth. После этого секрет будет
        скрыт.

        Чтобы обновить хранилище с помощью учетных данных клиента OAuth, которые позволяют ресурсу хранилища вести себя как
        клиент OAuth 2 в отношении внешнего приложения-провайдера OAuth 2, необходимо выполнить другой запрос для их создания, см.
        `POST /api/v3/storages/{id}/oauth_client_credentials`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageWriteModel'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Depends on the page the grid is defined for.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/storages/{id}:
    get:
      summary: Обзавестись хранилищем
      operationId: get_storage
      tags:
        - Ссылки на файлы
      description: |-
        Получает ресурс хранилища. В качестве побочного эффекта устанавливается оперативное соединение с источником хранилища для получения
        данных о состоянии соединения.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
    patch:
      summary: Обновить хранилище
      operationId: update_storage
      tags:
        - Ссылки на файлы
      description: |-
        Обновляет ресурс хранилища. Только те данные, которые не генерируются сервером, могут быть обновлены. Это исключает
        данные приложения OAuth 2.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageWriteModel'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
    delete:
      summary: Удаление хранилища
      operationId: delete_storage
      tags:
        - Ссылки на файлы
      description: |-
        Удаляет ресурс хранилища. При этом также удаляются все связанные записи, такие как созданное приложение oauth, клиент и
        любые ссылки на файлы, созданные в этом хранилище.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '204':
          description: No content
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
  /api/v3/storages/{id}/files:
    get:
      summary: Получает файлы из хранилища.
      operationId: get_storage_files
      tags:
        - Ссылки на файлы
      description: |-
        Возвращает коллекцию файлов из хранилища.

        Если не задан `parent` контекст, результатом будет содержимое корневого каталога документа. При заданном `parent` контексте
        результат содержит коллекции файлов/каталогов из заданного идентификатора родительского файла.

        Если заданный `parent` контекст не является каталогом, возвращается `400 Bad Request`.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
        - name: parent
          description: Идентификация родительского файла
          in: query
          required: false
          schema:
            type: string
          example: /my/data
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageFilesModel'
        '400':
          description: Returned if the given parent parameter value does not refer to a directory.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The given parent is not a directory.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned in either of those cases:
            - if the storage does not exist or the client does not have sufficient permissions to see it

              **Required permission:** view file links
            - if the document root file identification does not exist on the storage
  /api/v3/storages/{id}/files/prepare_upload:
    post:
      summary: Подготовка прямой загрузки файла в данное хранилище.
      operationId: prepare_storage_file_upload
      tags:
        - Ссылки на файлы
      description: |-
        Выполняет запрос, который подготавливает ссылку для прямой загрузки в хранилище.

        Суть здесь в том, что клиент должен сделать прямой запрос к экземпляру хранилища для загрузки файла,
        но не должен получать доступ к учетным данным, которые хранятся в серверной части. Ответ содержит объект link,
        который позволяет клиенту выполнить загрузку файла без реальных учетных данных.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageFileUploadPreparationModel'
      responses:
        '201':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageFileUploadLinkModel'
        '400':
          description: Returned if the given parent parameter value does not refer to a directory.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
                message: The given parent is not a directory.
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
        '500':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                outbound request failed:
                  description: |-
                    This error is returned, if the outbound request to the file storage failed with a 404, e.g. if the
                    upload location is not available.
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:OutboundRequest:NotFound
                    message: An outbound request to another resource has failed with status code 404.
                enterprise token missing:
                  description: |-
                    This error is returned, if there is no Enterprise token available. The file upload to that storage is
                    only available in an Enterprise edition.
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingEnterpriseToken
                    message: The request cannot be handled due to invalid or missing Enterprise token.
          description: Returned if the outbound request to the storage has failed with any reason.
  /api/v3/storages/{id}/oauth_client_credentials:
    post:
      summary: Создает объект учетных данных клиента oauth для хранилища.
      operationId: create_storage_oauth_credentials
      tags:
        - Ссылки на файлы
      description: |-
        Вставляет учетные данные OAuth 2 в хранилище, чтобы хранилище могло работать как клиент OAuth 2. Вызов этой
        конечной точки в хранилище, которое уже содержит учетные данные клиента OAuth 2, заменит их.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCredentialsWriteModel'
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
  /api/v3/storages/{id}/open:
    get:
      summary: Откройте хранилище
      operationId: open_storage
      tags:
        - Ссылки на файлы
      description: |-
        Возвращает перенаправление к местоположению удаленного источника хранилища. Корневым каталогом файлов хранилища должно быть целевое
        местоположение.
      parameters:
        - name: id
          description: Идентификатор хранилища
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      responses:
        '303':
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                format: uri
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
  /api/v3/time_entries:
    get:
      summary: Список записей о времени
      operationId: list_time_entries
      tags:
        - Запись времени
      description: |-
        Отображает записи о времени. Возвращаемые записи о времени зависят от
        установленных фильтров, а также от разрешения запрашивающего пользователя.
      parameters:
        - name: offset
          description: Номер страницы в запрашиваемой коллекции.
          example: 25
          in: query
          required: false
          schema:
            default: 1
            type: integer
        - name: pageSize
          description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          required: false
          schema:
            type: integer
        - name: sortBy
          description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие виды сортировки:

            + id: Сортировка по первичному ключу

            + часы: Сортировка по зарегистрированным часам

            + spent_on: Сортировка по потраченным на дату

            + created_at: Сортировка по дате создания записи-времени

            + updated_at: Сортировка по времени последнего обновления записи-времени
          example: '[["spent_on", "asc"]]'
          in: query
          required: false
          schema:
            default: '["spent_on", "asc"]'
            type: string
        - name: filters
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и конечная точка [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие фильтры:

            + work_package: Фильтрация временных записей по рабочему пакету

            + project: Фильтрация временных записей по проекту

            + user: фильтрация временных записей по пользователям

            + текущий: Отфильтруйте текущие таймеры

            + потраченный_он: Отфильтруйте записи по времени, потраченному на дату

            + созданный_ат: Отфильтруйте записи по дате создания и времени

            + обновленный_ат: Отфильтруйте записи по времени, когда они обновлялись в последний раз

            + активность: Фильтруйте записи о времени по активности ввода времени
          example: '[{ "work_package": { "operator": "=", "values": ["1", "2"] } }, { "project": { "operator": "=", "values": ["1"] } }]'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryCollectionModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: Returned if the client is not logged in and login is required.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
    post:
      summary: Создать запись о времени
      tags:
        - Запись времени
      description: |-
        Создает новую запись времени, применяя атрибуты, указанные в основной части.
        Пожалуйста, обратите внимание, что, хотя существует фиксированный набор атрибутов, пользовательские поля могут расширять
        атрибуты записи времени и принимаются конечной точкой.
      operationId: create_time_entry
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Log time
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: workPackage
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Work package is invalid.
  /api/v3/time_entries/{id}/form:
    post:
      parameters:
        - description: Идентификатор действия при вводе времени
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to edit the time entry.

            **Required permission:** *edit time entries* for every time entry of a project, or *edit own time entries* for time entries belonging to the user.
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the time entry does not exist or if the client does not have sufficient permissions to view it.

            **Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Запись времени
      description: ''
      operationId: Time_entry_update_form
      requestBody:
        content:
          application/json:
            schema:
              type: integer
        description: Time entries activity id
        required: true
      summary: Форма обновления записи о времени
  /api/v3/time_entries/activity/{id}:
    get:
      summary: Просмотр временных записей активности
      operationId: get_time_entries_activity
      tags:
        - Деятельность в записи времени
      description: Извлекает ресурс действия для ввода времени по заданному идентификатору.
      parameters:
        - name: id
          description: Идентификатор действия при вводе времени
          in: path
          example: 1
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryActivityModel'
        '404':
          description: |-
            Returned if the activity does not exist or if the user does not have permission to view them.

            **Required permission** `view time entries`, `log time`, `edit time entries`, `edit own time entries` or
            `manage project activities` in any project
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
  /api/v3/time_entries/available_projects:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _type: Project...
                        - _type: Project...
                    _links:
                      self:
                        href: /api/v3/time_entries/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_time_entriesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** *log time*, *edit time entries* or *edit own time entries* in any project
          headers: {}
      tags:
        - Запись времени
      description: Возвращает список проектов, в которых можно создать запись о времени или назначить ее при обновлении. Список содержит все проекты, в которых пользователь, отправивший запрос, имеет необходимые разрешения.
      operationId: Available_projects_for_time_entries
      summary: Доступные проекты для ввода времени
  /api/v3/time_entries/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** *log time* in any project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Запись времени
      description: ''
      operationId: Time_entry_create_form
      summary: Форма создания временной записи
  /api/v3/time_entries/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/time_entries/schema
                    _type: Schema
                    activity:
                      _links: {}
                      hasDefault: true
                      location: _links
                      name: Activity
                      required: true
                      type: TimeEntriesActivity
                      writable: true
                    createdAt:
                      hasDefault: false
                      name: Created on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    customField29:
                      hasDefault: false
                      name: sfsdfsdfsdfsdfdsf
                      options:
                        rtl: null
                      required: false
                      type: String
                      writable: true
                    hours:
                      hasDefault: false
                      name: Hours
                      options: {}
                      required: true
                      type: Duration
                      writable: true
                    id:
                      hasDefault: false
                      name: ID
                      options: {}
                      required: true
                      type: Integer
                      writable: false
                    project:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Project
                      required: false
                      type: Project
                      writable: true
                    ongoing:
                      hasDefault: false
                      name: Ongoing
                      options: {}
                      required: false
                      type: Boolean
                      writable: true
                    spentOn:
                      hasDefault: false
                      name: Date
                      options: {}
                      required: true
                      type: Date
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    user:
                      hasDefault: false
                      name: User
                      options: {}
                      required: true
                      type: User
                      writable: false
                    workPackage:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Work package
                      required: false
                      type: WorkPackage
                      writable: true
              schema:
                $ref: '#/components/schemas/View_time_entry_schemaModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** *log time* or *view time entries* or *edit time entries* or *edit own time entries* on any project
          headers: {}
      tags:
        - Запись времени
      description: ''
      operationId: View_time_entry_schema
      summary: Просмотр схемы ввода времени
  /api/v3/time_entries/{id}:
    delete:
      summary: Удалить запись о времени
      tags:
        - Запись времени
      description: Безвозвратно удаляет указанную запись времени.
      operationId: delete_time_entry
      parameters:
        - name: id
          description: Идентификатор ввода времени
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Returned if the time entry was deleted successfully.
        '403':
          description: Returned if the client does not have sufficient permissions
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
        '404':
          description: |-
            Returned if the time entry does not exist or if the user does not have sufficient permissions to see the time entry.

            **Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    get:
      summary: Получить ввод времени
      tags:
        - Запись времени
      description: Извлекает единичную запись времени, идентифицированную по заданному идентификатору.
      operationId: get_time_entry
      parameters:
        - name: id
          description: идентификатор ввода времени
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
        '404':
          description: |-
            Returned if the time entry does not exist or if the user does not have permission to view them.

            **Required permission**
            - `view time entries` in the project the time entry is assigned to or
            - `view own time entries` for time entries belonging to the user
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
    patch:
      summary: ввод времени обновления
      tags:
        - Запись времени
      description: |-
        Обновляет заданную временную запись, применяя атрибуты, указанные в
        тексте. Пожалуйста, обратите внимание, что, хотя существует фиксированный набор атрибутов, пользовательские поля
        могут расширять атрибуты временной записи и принимаются конечной точкой.
      operationId: update_time_entry
      parameters:
        - name: id
          description: Идентификатор ввода времени
          example: 1
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Edit (own) time entries, depending on what time entry is being modified.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: workPackage
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: Work package is invalid.
  /api/v3/types:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/types/1
                          _type: Type
                          color: '#ff0000'
                          createdAt: '2014-05-21T08:51:20.396Z'
                          id: 1
                          isDefault: true
                          isMilestone: false
                          name: Bug
                          position: 1
                          updatedAt: '2014-05-21T08:51:20.396Z'
                        - _links:
                            self:
                              href: /api/v3/types/2
                          _type: Type
                          color: '#888'
                          createdAt: '2014-05-21T08:51:20.396Z'
                          id: 2
                          isDefault: false
                          isMilestone: false
                          name: Feature
                          position: 2
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/types
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/TypesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the types.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package or manage types (on any project)
          headers: {}
      tags:
        - Типы
      description: ''
      operationId: List_all_Types
      summary: Перечислите все типы
  /api/v3/types/{id}:
    get:
      parameters:
        - description: Идентификатор типа
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/types/1
                    _type: Type
                    color: '#ff0000'
                    createdAt: '2014-05-21T08:51:20.396Z'
                    id: 1
                    isDefault: true
                    isMilestone: false
                    name: Bug
                    position: 1
                    updatedAt: '2014-05-21T08:51:20.396Z'
              schema:
                $ref: '#/components/schemas/TypeModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this type.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package or manage types (on any project)
          headers: {}
      tags:
        - Типы
      description: ''
      operationId: View_Type
      summary: Тип представления
  /api/v3/users:
    get:
      summary: Список пользователей
      operationId: list_Users
      description: |-
        Содержит список пользователей. Только администраторы или пользователи с любым из перечисленных ниже прав могут получить доступ к этому ресурсу:

        - `manage_members`
        - `manage_user`
        - `share_work_packages`
      tags:
        - Пользователи
        - Принципалы
      parameters:
        - description: Номер страницы в запрашиваемой коллекции.
          example: '25'
          in: query
          name: offset
          required: false
          schema:
            default: 1
            type: integer
        - description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. В настоящее время поддерживаются следующие фильтры:

            + статус: Статус, который имеет пользователь

            + группа: Название группы, членами которой являются пользователи, которые будут внесены в список.

            + имя: Отфильтруйте пользователей, в чьих именах, фамилиях или адресах электронной почты встречается данная строка.

            + логин: Логин пользователя
          example: '[{ "status": { "operator": "=", "values": ["invited"] } }, { "group": { "operator": "=", "values": ["1"] } }, { "name": { "operator": "=", "values": ["h.wurst@u-meteor.ru"] } }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
          example: '[["status", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: Список свойств, которые нужно включить, разделенный запятыми.
          example: total,elements/name,elements/self,self
          in: query
          name: select
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserCollectionModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to list users.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator or any of: 'manage_members', 'manage_user', 'share_work_packages'.
    post:
      summary: Создать пользователя
      operationId: create_user
      tags:
        - Пользователи
        - Принципалы
      description: |-
        Создает нового пользователя. Это разрешено только администраторам и пользователям с глобальными правами manage_user.
        При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий, по крайней мере, необходимые свойства и ссылки.

        Допустимые значения для параметра `status`:

        1) "активен" - В этом случае в дополнение к другим атрибутам необходимо указать пароль.

        2) "приглашен" - в этом случае не требуется ничего, кроме адреса электронной почты. Остальное необязательно. Пользователю будет отправлено приглашение.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateModel'
      responses:
        '201':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: Created
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to create new users.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: email
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The email address is already taken.
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/users/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/users/schema
                    _type: Schema
                    admin:
                      hasDefault: false
                      name: Administrator
                      options: {}
                      required: false
                      type: Boolean
                      writable: true
                    avatar:
                      hasDefault: false
                      name: Avatar
                      options: {}
                      required: false
                      type: String
                      writable: false
                    createdAt:
                      hasDefault: false
                      name: Created on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    customField1:
                      hasDefault: false
                      name: User String CF
                      required: false
                      type: String
                      writable: true
                    customField2:
                      hasDefault: false
                      location: _links
                      name: User List cf
                      required: false
                      type: CustomOption
                      writable: true
                    firstName:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: First name
                      options: {}
                      required: true
                      type: String
                      writable: false
                    id:
                      hasDefault: false
                      name: ID
                      options: {}
                      required: true
                      type: Integer
                      writable: false
                    identityUrl:
                      hasDefault: false
                      name: Identity url
                      options: {}
                      required: false
                      type: String
                      writable: true
                    language:
                      hasDefault: false
                      name: Language
                      options: {}
                      required: false
                      type: String
                      writable: true
                    lastName:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Last name
                      options: {}
                      required: true
                      type: String
                      writable: false
                    login:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Username
                      options: {}
                      required: true
                      type: String
                      writable: true
                    mail:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Email
                      options: {}
                      required: true
                      type: String
                      writable: true
                    password:
                      hasDefault: false
                      name: Password
                      options: {}
                      required: false
                      type: Password
                      writable: false
                    status:
                      hasDefault: false
                      name: Status
                      options: {}
                      required: false
                      type: String
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/View_user_schemaModel'
          description: OK
          headers: {}
      tags:
        - Пользователи
      description: В ответе схемы используются два примерных пользовательских поля, которые расширяют ответ схемы. В зависимости от вашего экземпляра и конфигурации пользовательского поля ответ будет выглядеть несколько иначе.
      operationId: View_user_schema
      summary: Просмотр пользовательской схемы
  /api/v3/users/{id}:
    delete:
      summary: Удалить пользователя
      operationId: delete_user
      description: Безвозвратно удаляет указанную учетную запись пользователя.
      tags:
        - Пользователи
        - Принципалы
      parameters:
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: |-
            Returned if the account was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned, indicating the progress of deletion.
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions or if deletion of users was disabled in the instance wide settings.

            **Required permission:** Administrators only (exception: users might be able to delete their own accounts)
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified user does not exist.
          description: Returned if the user does not exist.
    get:
      summary: Просмотр пользователя
      operationId: view_user
      description: ''
      tags:
        - Пользователи
        - Принципалы
      parameters:
        - description: Идентификатор пользователя. Используйте `me` для ссылки на текущего пользователя, если таковой имеется.
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
              examples:
                user response:
                  $ref: '#/components/examples/UserResponse'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified user does not exist or you do not have permission to view them.
          description: |-
            Returned if the user does not exist or if the API user does not have permission to view them.

            **Required permission** The user needs to be locked in if the installation is configured to prevent anonymous access
    patch:
      summary: Обновить пользователя
      operationId: update_user
      tags:
        - Пользователи
        - Принципалы
      description: |-
        Обновляет доступные для записи атрибуты пользователя.
        При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий, по крайней мере, необходимые свойства и ссылки.
      parameters:
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateModel'
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to update the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrators, manage_user global permission
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified user does not exist or you do not have permission to view them.
          description: |-
            Returned if the user does not exist or if the API user does not have the necessary permissions to update it.

            **Required permission:** Administrators only (exception: users may update their own accounts)
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: email
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The email address is already taken.
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)
  /api/v3/users/{id}/form:
    post:
      parameters:
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage_user global permission
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the request user can not be found.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Пользователи
      description: ''
      operationId: User_update_form
      summary: Форма обновления пользователя
  /api/v3/users/{id}/lock:
    delete:
      summary: Разблокировать пользователя
      operationId: unlock_user
      tags:
        - Пользователи
      parameters:
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidUserStatusTransition
                message: The current user account status does not allow this operation.
          description: |-
            Returned if the client tries to unlock a user account whose current status does not allow this transition.

            **Required permission:** Administrators only
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to unlock the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions for unlocking a user.

            **Required permission:** Administrators only
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified user does not exist.
          description: Returned if the user does not exist.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    post:
      summary: Заблокировать пользователя
      operationId: lock_user
      tags:
        - Пользователи
      parameters:
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidUserStatusTransition
                message: The current user account status does not allow this operation.
          description: |-
            Returned if the client tries to lock a user account whose current status does not allow this transition.

            **Required permission:** Administrators only
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to lock the account of this user.
          description: |-
            Returned if the client does not have sufficient permissions for locking a user.

            **Required permission:** Administrators only
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified user does not exist.
          description: Returned if the user does not exist.
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/values/schema/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: |-
            Идентификатор значения. Обычно это значение свойства `property`
            ресурса `Values`. Оно должно быть в нижнем регистровом формате.
          example: startDate
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SchemaModel'
              examples:
                Values::Property Start date schema:
                  $ref: '#/components/examples/ValuesPropertyStartDateSchema'
                Values::Property Due date schema:
                  $ref: '#/components/examples/ValuesPropertyDueDateSchema'
                Values::Property Date schema for Milestone work package:
                  $ref: '#/components/examples/ValuesPropertyDateSchema'
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:BadRequest
                message: 'Bad request: property is invalid'
          description: Returned if the requested property id is not in a lower camel case format.
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: Returned if the schema does not exist.
      tags:
        - Values::Property
      description: Схема ресурса `Values`.
      operationId: View_values_schema
      summary: Просмотр схемы значений
  /api/v3/versions:
    get:
      parameters:
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            В настоящее время поддерживаются следующие фильтры:

            + общий доступ: фильтрует версии по способу их совместного использования на сервере (*нет*, *потомки*, *иерархия*, *дерево*, *система*).
          example: '[{ "sharing": { "operator": "*", "values": ["system"] }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/11/projects
                            definingProject:
                              href: /api/v3/projects/12
                            self:
                              href: /api/v3/versions/11
                          _type: Version
                          description:
                            format: plain
                            html: This version has a description
                            raw: This version has a description
                          endDate: null
                          id: 11
                          name: v3.0 Alpha
                          startDate: '2014-11-20'
                          status: Open
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/12/projects
                            definingProject:
                              href: /api/v3/projects/11
                            self:
                              href: /api/v3/versions/12
                          _type: Version
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          endDate: null
                          id: 12
                          name: v2.0
                          startDate: null
                          status: Closed
                        - _links:
                            availableInProjects:
                              href: /api/v3/versions/13/projects
                            definingProject:
                              href: /api/v3/projects/13
                            self:
                              href: /api/v3/versions/10
                          _type: Version
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          endDate: null
                          id: 10
                          name: v1.0
                          startDate: null
                          status: Open
                    _links:
                      self:
                        href: /api/v3/versions
                    _type: Collection
                    count: 3
                    total: 3
              schema:
                $ref: '#/components/schemas/VersionsModel'
          description: OK
          headers: {}
      tags:
        - Версии/Спринты
      description: Возвращает набор версий. Клиент может выбрать фильтрацию версий аналогично тому, как фильтруются рабочие пакеты. В дополнение к предоставленным фильтрам сервер сократит результирующий набор, чтобы он содержал только версии, для которых запрашивающий клиент имеет достаточные разрешения (*view_work_packages*).
      operationId: List_versions
      summary: Список версий
    post:
      responses:
        '201':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: Created
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage versions
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          headers: {}
      tags:
        - Версии/Спринты
      description: |-
        Создает новую версию, применяя атрибуты, указанные в тексте. Пожалуйста, обратите внимание, что, хотя существует фиксированный набор атрибутов, пользовательские поля могут расширять атрибуты версии и принимаются конечной точкой.

        Вы можете использовать форму и схему для получения допустимых значений атрибутов и, таким образом, ориентироваться на успешное создание.
      operationId: Create_version
      summary: Создать версию
  /api/v3/versions/available_projects:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            categories:
                              href: /api/v3/projects/6/categories
                            createWorkPackage:
                              href: /api/v3/projects/6/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/6/work_packages
                              method: post
                            editWorkPackage:
                              href: /api/v3//work_packages/{id}/form
                              method: post
                              templated: true
                            self:
                              href: /api/v3/projects/6
                              title: A project
                            versions:
                              href: /api/v3/projects/6/versions
                          _type: Project
                          createdAt: '2015-07-06T13:28:14+00:00'
                          description: Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
                          id: 6
                          identifier: a_project
                          name: A project
                          type: Customer Project
                          updatedAt: '2015-10-01T09:55:02+00:00'
                        - _links:
                            categories:
                              href: /api/v3/projects/14/categories
                            createWorkPackage:
                              href: /api/v3/projects/14/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/14/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/14
                              title: Another project
                            versions:
                              href: /api/v3/projects/14/versions
                          _type: Project
                          createdAt: '2016-02-29T12:50:20+00:00'
                          description: ''
                          id: 14
                          identifier: another_project
                          name: Another project
                          type: null
                          updatedAt: '2016-02-29T12:50:20+00:00'
                    _links:
                      self:
                        href: /api/v3/versions/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_versionsModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions
          headers: {}
      tags:
        - Версии/Спринты
      description: Возвращает список проектов, в которых может быть создана версия. Список содержит все проекты, в которых пользователь, отправляющий запрос, имеет разрешения на управление версиями.
      operationId: Available_projects_for_versions
      summary: Доступные проекты для различных версий
  /api/v3/versions/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in any project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Версии/Спринты
      description: ''
      operationId: Version_create_form
      summary: Форма создания версии
  /api/v3/versions/schema:
    get:
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/versions/schema
                    _type: Schema
                    createdAt:
                      hasDefault: false
                      name: Created on
                      required: true
                      type: DateTime
                      writable: false
                    customField14:
                      hasDefault: false
                      name: text CF
                      required: false
                      type: String
                      visibility: default
                      writable: true
                    customField40:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: List CF
                      required: false
                      type: CustomOption
                      visibility: default
                      writable: true
                    definingProject:
                      _links: {}
                      hasDefault: false
                      name: Project
                      required: true
                      type: Project
                      writable: true
                    description:
                      hasDefault: false
                      name: Description
                      required: false
                      type: Formattable
                      writable: true
                    endDate:
                      hasDefault: false
                      name: Finish date
                      required: false
                      type: Date
                      writable: false
                    id:
                      hasDefault: false
                      name: ID
                      required: true
                      type: Integer
                      writable: false
                    name:
                      hasDefault: false
                      maxLength: 60
                      minLength: 1
                      name: Name
                      required: true
                      type: String
                      writable: true
                    sharing:
                      _links: {}
                      hasDefault: false
                      name: Sharing
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    startDate:
                      hasDefault: false
                      name: Start date
                      required: false
                      type: Date
                      writable: true
                    status:
                      _links: {}
                      hasDefault: false
                      name: Status
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/Version_schemaModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** view work packages or manage versions on any project
          headers: {}
      tags:
        - Версии/Спринты
      description: ''
      operationId: View_version_schema
      summary: Просмотр схемы версии
  /api/v3/versions/{id}:
    delete:
      parameters:
        - description: Идентификатор версии
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Returned if the version was successfully deleted
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Версии/Спринты
      description: Удаляет версию. Рабочие пакеты, связанные с версией, больше не будут ей назначены.
      operationId: Delete_Version
      summary: Удалить версию
    get:
      parameters:
        - description: Идентификатор версии
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      availableInProjects:
                        href: /api/v3/versions/11/projects
                      customField4:
                        href: /api/v3/custom_options/5
                        title: Custom field option
                      definingProject:
                        href: /api/v3/projects/11
                      self:
                        href: /api/v3/versions/11
                      update:
                        href: /api/v3/versions/11/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/versions/11
                        method: PATCH
                    _type: Version
                    customField14: '1234567890'
                    description:
                      format: plain
                      html: This version has a description
                      raw: This version has a description
                    endDate: null
                    id: 11
                    name: v3.0 Alpha
                    sharing: system
                    startDate: '2014-11-20'
                    status: open
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Версии/Спринты
      description: ''
      operationId: View_version
      summary: Просмотреть версию
    patch:
      parameters:
        - description: Идентификатор версии
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage versions in the version's project.
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
          headers: {}
      tags:
        - Версии/Спринты
      description: Обновляет данную версию, применяя атрибуты, указанные в тексте. Пожалуйста, обратите внимание, что, хотя существует фиксированный набор атрибутов, пользовательские поля могут расширять атрибуты версии и принимаются конечной точкой.
      operationId: Update_Version
      summary: Версия обновления
  /api/v3/versions/{id}/form:
    post:
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in the version's project
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Версии/Спринты
      description: ''
      operationId: Version_update_form
      summary: Форма обновления версии
  /api/v3/versions/{id}/projects:
    get:
      parameters:
        - description: Идентификатор версии
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            categories:
                              href: /api/v3/projects/1/categories
                            self:
                              href: /api/v3/projects/1
                              title: Lorem
                            status:
                              href: /api/v3/project_statuses/on_track
                              title: On track
                            versions:
                              href: /api/v3/projects/1/versions
                          _type: Project
                          active: true
                          createdAt: '2014-05-21T08:51:20.396Z'
                          description:
                            format: markdown
                            html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
                            raw: Lorem **ipsum** dolor sit amet
                          id: 1
                          identifier: project_identifier
                          name: Project example
                          statusExplanation:
                            format: markdown
                            html: <p>Everything <strong>fine</strong></p>
                            raw: Everything **fine**
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/versions/2/projects
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/List_projects_by_versionModel'
          description: OK
          headers: {}
        '404':
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the given version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a version.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Проекты
      description: |-
        В этой конечной точке перечислены проекты, для которых доступна данная версия.

        Возвращаемые проекты зависят от настроек общего доступа к данной версии,
        но также ограничены проектами, доступ к которым разрешен текущему пользователю.
      operationId: List_projects_with_version
      summary: Список проектов, имеющих версию
  /api/v3/views:
    get:
      parameters:
        - description: |-
            JSON с указанием условий фильтрации.
            В настоящее время поддерживаются следующие фильтры:

            + project: фильтрует представления по проекту, которому назначен соответствующий запрос. Если фильтр проекта задан с помощью оператора `!*` (не любого), возвращаются глобальные представления.

            + id: фильтрует представления на основе их идентификатора

            + тип: фильтрует просмотры в зависимости от их типа
          example: '[{ "project_id": { "operator": "!*", "values": null }" }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                Queries:
                  $ref: '#/components/examples/Views'
          description: OK
          headers: {}
      tags:
        - Представления
      description: Возвращает коллекцию представлений. Коллекция может быть отфильтрована с помощью параметров запроса аналогично тому, как фильтруются рабочие пакеты.
      operationId: List_views
      summary: Представления списка
  /api/v3/views/{id}:
    get:
      parameters:
        - description: Идентификатор просмотра
          example: 42
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                ViewWorkPackagesTable:
                  $ref: '#/components/examples/ViewWorkPackagesTable'
                ViewTeamPlanner:
                  $ref: '#/components/examples/ViewTeamPlanner'
          description: Returns the result of a single view, dependent of the view type.
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** The required permission depends on the type of the view.
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the resource can not be found.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a view. That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Представления
      description: ''
      operationId: View_view
      summary: Посмотреть посмотреть
    post:
      parameters:
        - description: Идентификатор представления
          name: id
          in: path
          required: true
          example: '1'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              Views::WorkPackagesTable:
                value:
                  _links:
                    query:
                      href: /api/v3/queries/5
              Views::TeamPlanner:
                value:
                  _links:
                    query:
                      href: /api/v3/queries/5
            schema:
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    query:
                      type: object
                      properties:
                        href:
                          type: string
                          format: uri
      responses:
        '201':
          content:
            application/hal+json:
              schema:
                type: object
              examples:
                Views::WorkPackagesTable:
                  $ref: '#/components/examples/ViewWorkPackagesTable'
                Views::TeamPlanner:
                  $ref: '#/components/examples/ViewTeamPlanner'
          description: Created
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: query
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Query does not exist.
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`),
              e.g. a query not found
          headers: {}
      tags:
        - Представления
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий, по крайней мере, необходимые свойства и ссылки в теле.
        Необходимые поля представления можно найти в его схеме, которая встроена в соответствующую форму.
        Обратите внимание, что разрешено предоставлять только свойства или ссылки, поддерживающие операцию записи.

        Существуют различные подтипы `Views` (например, `Views::WorkPackagesTable`), каждый из которых имеет свою собственную
        конечную точку для создания этого подтипа, например

        * `/api/v3/views/work_packages_table` для `Views::WorkPackagesTable`
        * `/api/v3/views/team_planner` для `Views::TeamPlanner`
        * `/api/v3/views/work_packages_calendar` для `Views::WorkPackagesCalendar`

        **Еще не реализовано** Чтобы получить список доступных подтипов и, следовательно, конечные точки для создания подтипа, используйте
        ```
          /api/v3/views/schemas
        ```
        конечная точка.
      operationId: Create_views
      summary: Создать представление
  /api/v3/wiki_pages/{id}:
    get:
      parameters:
        - description: Идентификатор вики-страницы
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                        id: 12
                    _links:
                      addAttachment:
                        href: /api/v3/wiki_pages/72/attachments
                        method: post
                      attachments:
                        href: /api/v3/wiki_pages/72/attachments
                      project:
                        href: /api/v3/projects/12
                        title: some project
                      self:
                        href: /api/v3/wiki_pages/72
                    _type: WikiPage
                    id: 72
                    title: A wiki page with a name
              schema:
                $ref: '#/components/schemas/Wiki_PageModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view wiki page in the page's project
          headers: {}
      tags:
        - Вики
      description: Извлеките отдельную вики-страницу, указанную в параметре id
      operationId: View_Wiki_Page
      summary: Просмотр Вики-страницы
  /api/v3/wiki_pages/{id}/attachments:
    get:
      parameters:
        - description: Идентификатор вики-страницы, вложения которой будут перечислены в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            author:
                              href: /api/v3/users/1
                              title: METEOR Admin
                            container:
                              href: /api/v3/wiki_pages/72
                              title: wiki
                            delete:
                              href: /api/v3/attachments/376
                              method: delete
                            downloadLocation:
                              href: /api/v3/attachments/376/content
                            self:
                              href: /api/v3/attachments/376
                              title: 200.gif
                          _type: Attachment
                          contentType: image/gif
                          createdAt: '2018-06-01T07:24:19.896Z'
                          description:
                            format: plain
                            html: ''
                            raw: ''
                          digest:
                            algorithm: md5
                            hash: 7ac9c97ef73d47127f590788b84c0c1c
                          fileName: some.gif
                          fileSize: 3521772
                          id: 376
                    _links:
                      self:
                        href: /api/v3/wiki_pages/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view wiki pages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Вложения
      description: ''
      operationId: List_attachments_by_wiki_page
      summary: Список вложений по вики-страницам
    post:
      parameters:
        - description: Идентификатор вики-страницы для получения вложения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: METEOR Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ''
                        createdAt: '2015-03-20T12:56:52.343Z'
                        email: null
                        firstName: METEOR
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: METEOR Admin
                        status: active
                        updatedAt: '2018-05-29T13:57:44.662Z'
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/wiki_pages/72/attachments
                            method: post
                          attachments:
                            href: /api/v3/wiki_pages/72/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/wiki_pages/72
                        _type: WikiPage
                        id: 72
                        title: wiki
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: METEOR Admin
                      container:
                        href: /api/v3/wiki_pages/72
                        title: wiki
                      delete:
                        href: /api/v3/attachments/376
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/376/content
                      self:
                        href: /api/v3/attachments/376
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: '2018-06-01T07:24:19.896Z'
                    description:
                      format: plain
                      html: ''
                      raw: ''
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 376
          description: OK
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit wiki pages

            *Note that you will only receive this error, if you are at least allowed to see the wiki page*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view wiki pages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a wiki page
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
          headers: {}
      tags:
        - Вложения
      description: Добавляет вложение с вики-страницей в качестве контейнера.
      operationId: Add_attachment_to_wiki_page
      summary: Добавить вложение на вики-страницу
  /api/v3/work_packages:
    get:
      summary: Перечислите рабочие пакеты
      operationId: list_work_packages
      tags:
        - Рабочие пакеты/Задачи
      description: Возвращает набор рабочих пакетов.
      parameters:
        - description: Номер страницы в запрашиваемой коллекции.
          example: '25'
          in: query
          name: offset
          required: false
          schema:
            default: 1
            type: integer
        - description: Количество элементов, отображаемых на странице.
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. Если фильтр не должен быть применен, клиент должен отправить пустой массив (`[]`), в противном
            случае применяется фильтр по умолчанию. В настоящее время поддерживаются следующие фильтры (есть дополнительные фильтры, добавляемые модулями):

            - назначенный_то
            - назначенный_и_группа
            - база прикрепления
            - содержание прикрепления
            - имя_файла прикрепления
            - автор
            - заблокирован
            - блоки
            - категория
            - комментарий
            - созданный_ат
            - пользовательское поле
            - дата_интервала
            - описание
            - сделано_расчетно
            - срок действия
            - дублировано
            - дублирует
            - продолжительность
            - расчетные часы
            - file_link_origin_id
            - следует за
            - group
            - id
            - включает
            - linkable_to_storage_id
            - linkable_to_storage_url
            - ручная сортировка
            - этап
            - only_subproject
            - родительский
            - часть
            - предшествует
            - основная база
            - приоритет
            - проект
            - относящийся
            - относится к делу
            - обязательный
            - требуется
            - ответственный
            - роль
            - поиск
            - дата начала
            - статус
            - storage_id
            - storage_url
            - тема
            - subject_or_id
            - подпроект
            - тип
            - заголовок текста
            - обновлен_ат
            - версия
            - наблюдатель
            - рабочий пакет
          example: '[{ "type_id": { "operator": "=", "values": ["1", "2"] }}]'
          in: query
          name: filters
          required: false
          schema:
            default: '[{ "status_id": { "operator": "o", "values": null }}]'
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
          example: '[["status", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
        - description: Столбец, по которому нужно сгруппировать данные.
          example: status
          in: query
          name: groupBy
          required: false
          schema:
            type: string
        - description: Указывает, следует ли суммировать свойства, если они это поддерживают.
          example: true
          in: query
          name: showSums
          required: false
          schema:
            default: false
            type: boolean
        - description: Список свойств, которые нужно включить, разделенный запятыми.
          example: total,elements/subject,elements/id,self
          in: query
          name: select
          required: false
          schema:
            type: string
        - description: |-
            Чтобы выполнить [базовое сравнение] (/docs/api/baseline-comparisons), вы можете указать одну или несколько временных меток
            в формате ISO-8601 в виде списка, разделенного запятыми. Временные метки могут быть абсолютными или относительными,
            например, даты ISO8601, длительности ISO8601 и следующие ключевые слова для относительных дат: "oneDayAgo@HH:MM+HH:MM",
            "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM".
            Первая часть "ЧЧ:ММ" обозначает часы и минуты с нулевым значением.
            Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем,
            смещение может быть положительным или отрицательным, например "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

            Обычно первой временной меткой является базовая дата, последней временной меткой является текущая дата.
            Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.
          example: 2022-01-01T00:00:00Z,PT0S
          in: query
          name: timestamps
          required: false
          schema:
            default: PT0S
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackagesModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to see work packages.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages (globally or in any project)
    post:
      summary: Создать рабочий пакет
      operationId: create_work_package
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий, по крайней мере, необходимые свойства и ссылки в теле.
        Обязательные поля WorkPackage можно найти в его схеме, которая встроена в соответствующую форму.
        Обратите внимание, что разрешено предоставлять только свойства или ссылки, поддерживающие операцию записи.

        При создании рабочих пакетов по этому пути необходимо установить ссылку на проект.

        При одновременном задании даты начала, даты окончания и продолжительности будет проверена их корректность, и будет возвращена ошибка 422, если одно значение не совпадает с двумя другими. Вы можете заставить сервер вычислить значение: задайте в запросе только два значения, и третье будет вычислено и возвращено в ответе. Например, при отправке `{ "startDate": "2022-08-23", duration: "P2D" }`, в ответ будет указано `{ "dueDate": "2022-08-24" }`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      parameters:
        - description: |-
            Указывает, следует ли отправлять уведомления об изменениях (например, по электронной почте).
            Обратите внимание, что это позволяет отправлять уведомления всем пользователям, заинтересованным в изменениях в рабочем пакете (например, наблюдателям, автору и правопреемнику),
            а не только текущему пользователю.
          example: false
          in: query
          name: notify
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to add work packages to this project.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified project does not exist.
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permissions:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
                _embedded:
                  details:
                    attribute: Subject
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
  /api/v3/work_packages/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      operationId: Work_Package_Create_Form
      summary: Форма для создания рабочего пакета
  /api/v3/work_packages/schemas:
    get:
      parameters:
        - description: |-
            JSON, определяющий условия фильтрации.
            Принимает тот же формат, который возвращается конечной точкой [queries](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/). В настоящее время поддерживаются следующие фильтры:

            + id: идентификатор схемы

            Идентификатор схемы имеет вид `project_id-work_package_type_id`.
          example: '[{ "id": { "operator": "=", "values": ["12-1", "14-2"] } }]'
          in: query
          name: filters
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/work_packages/schemas/13-1
                          _type: Schema...
                        - _links:
                            self:
                              href: /api/v3/work_packages/schemas/7-6
                          _type: Schema...
                    _links:
                      self:
                        href: /api/v3/work_packages/schemas
                    _type: Collection
                    count: 2
                    total: 5
              schema:
                $ref: '#/components/schemas/Work_Package_SchemasModel'
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to list schemas.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** View work packages in any project.
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: Перечислите схемы рабочих пакетов.
      operationId: List_Work_Package_Schemas
      summary: Перечислите схемы рабочих пакетов
  /api/v3/work_packages/schemas/{identifier}:
    get:
      parameters:
        - description: Идентификатор схемы
          example: 12-13
          in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified schema does not exist.
          description: |-
            Returned if the schema does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages (on the project where this schema is used)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      operationId: View_Work_Package_Schema
      summary: Просмотр схемы рабочего пакета
  /api/v3/work_packages/{id}:
    delete:
      summary: Удалить рабочий пакет
      operationId: delete_work_package
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        Удаляет рабочий пакет, а также:

        - все связанные с ним записи о времени
        - иерархию дочерних рабочих пакетов
      parameters:
        - description: Идентификатор рабочего пакета
          in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '204':
          description: |-
            Returned if the work package was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned along with an appropriate HTTP status.
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** delete work package
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
    get:
      summary: Просмотр пакета работ
      operationId: view_work_package
      tags:
        - Рабочие пакеты/Задачи
      description: Возвращает указанный рабочий пакет.
      parameters:
        - description: Идентификатор рабочего пакета
          in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
        - description: |-
            Чтобы выполнить [базовое сравнение] (/docs/api/baseline-comparisons) атрибутов рабочего пакета, вы можете
            указать одну или несколько временных меток в формате ISO-8601 в виде списка, разделенного запятыми. Временные метки могут быть абсолютными или относительными,
            например, даты ISO8601, длительности ISO8601 и следующие ключевые слова для относительных дат: "oneDayAgo@HH:MM+HH:MM",
            "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM".
            Первая часть "ЧЧ:ММ" обозначает часы и минуты с нулевым значением.
            Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем,
            смещение может быть положительным или отрицательным, например "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

            Обычно первой временной меткой является базовая дата, последней временной меткой является текущая дата.
            Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.
          in: query
          name: timestamps
          required: false
          schema:
            default: PT0S
            type: string
          example: 2022-01-01T00:00:00Z,PT0S
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
    patch:
      summary: Обновить рабочий пакет
      operationId: update_work_package
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        При вызове этой конечной точки клиент предоставляет в теле один объект, содержащий свойства и ссылки, которые он хочет
        изменить. Обратите внимание, что разрешено предоставлять свойства или ссылки, поддерживающие запись ****
        операция.

        В дополнение к полям, которые клиент хочет изменить, необходимо указать значение `lockVersion`, которое
        было получено в результате запроса `GET`, из которого исходит это изменение.

        Значение `lockVersion` используется для реализации
        [оптимистической блокировки](https://en.wikipedia.org/wiki/Optimistic_concurrency_control).
      parameters:
        - name: id
          description: Идентификатор рабочего пакета
          in: path
          required: true
          schema:
            type: integer
          example: 42
        - name: notify
          description: |-
            Указывает, следует ли отправлять уведомления об изменениях. Обратите внимание, что это позволяет отправлять уведомления всем пользователям
            , заинтересованным в изменениях в рабочем пакете (например, наблюдателям, автору и правопреемнику), а не только текущему пользователю.
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkPackagePatchModel'
          description: OK
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to edit the content of the work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package, assign version, change work package status, manage subtasks or move work package
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        '406':
          $ref: '#/components/responses/MissingContentType'
        '409':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:UpdateConflict
                message: Your changes could not be saved, because the work package was changed since you've seen it the last time.
          description: Returned if the resource was changed since the client requested it. This is determined using the `lockVersion` property.
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _embedded:
                  details:
                    attribute: Subject
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
          description: |-
            Returned if:

            - the client tries to modify a read-only property (`PropertyIsReadOnly`)
            - a constraint for a property was violated (`PropertyConstraintViolation`)
            - the client provides a link to an invalid resource (`ResourceTypeMismatch`)
  /api/v3/work_packages/{id}/activities:
    get:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/activity/1
                            user:
                              href: /api/v3/users/1
                            workPackage:
                              href: /api/v3/work_packages/1
                          _type: Activity
                          comment:
                            format: markdown
                            html: <p>Lorem ipsum dolor sit amet.</p>
                            raw: Lorem ipsum dolor sit amet.
                          createdAt: '2014-05-21T08:51:20.396Z'
                          updatedAt: '2014-05-21T09:14:02.726Z'
                          details: []
                          id: 1
                          version: 1
                        - _links:
                            self:
                              href: /api/v3/activity/2
                            user:
                              href: /api/v3/users/1
                            workPackage:
                              href: /api/v3/work_packages/1
                          _type: Activity
                          comment:
                            format: markdown
                            html: <p>Lorem ipsum dolor sit amet.</p>
                            raw: Lorem ipsum dolor sit amet.
                          createdAt: '2014-05-21T09:51:22.077Z'
                          updatedAt: '2014-05-21T10:14:02.957Z'
                          details: []
                          id: 2
                          version: 2
                    _links:
                      self:
                        href: /api/v3/work_packages/1/revisions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Work_Package_activitiesModel'
          description: OK
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      operationId: List_work_package_activities
      summary: Перечислите мероприятия пакета работ
    post:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: |-
            Указывает, следует ли отправлять уведомления об изменениях (например, по электронной почте).
            Обратите внимание, что это позволяет отправлять уведомления всем пользователям, заинтересованным в изменениях в рабочем пакете (например, наблюдателям, автору и правопреемнику),
            а не только текущему пользователю.
          example: false
          in: query
          name: notify
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '201':
          description: Created
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to create a comment here.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** create journals

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        Создает действие для выбранного пакета работ и в случае успешного выполнения возвращает
        обновленное действие.
      operationId: Comment_work_package
      requestBody:
        content:
          application/json:
            schema:
              example:
                comment:
                  raw: I think this is awesome!
              properties:
                comment:
                  properties:
                    raw:
                      type: string
                  type: object
              type: object
      summary: Рабочий пакет комментариев
  /api/v3/work_packages/{id}/attachments:
    get:
      parameters:
        - description: Идентификатор рабочего пакета, вложения которого будут указаны в списке
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      tags:
        - Вложения
      description: ''
      operationId: list_work_package_attachments
      summary: Список вложений по рабочим пакетам
    post:
      parameters:
        - description: Идентификатор рабочего пакета для получения вложения
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                message: The request could not be parsed as JSON.
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package or add work package

            *Note that you will only receive this error, if you are at least allowed to see the work package.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: File is too large (maximum size is 5242880 Bytes).
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      tags:
        - Вложения
      description: |-
        Чтобы добавить приложение к рабочему пакету, клиенту необходимо отправить запрос типа `multipart/form-data`
        , состоящий ровно из двух частей.

        Первая часть *должна* называться `metadata`. Ожидается, что его типом содержимого будет `application/json`,
        тело должно быть одним объектом JSON, содержащим, по крайней мере, `fileName` и, необязательно, `description` вложений.

        Вторая часть *должна* называться `file`, ее тип содержимого *должен* соответствовать типу mime файла.
        Тело *должно* быть исходным содержимым файла.
        Обратите внимание, что в `Content-Disposition` этой части должно быть указано `filename`, однако оно будет проигнорировано.
        Вместо этого будет использоваться `fileName` в формате JSON части метаданных.
      operationId: create_work_package_attachment
      summary: Создать вложение к рабочему пакету
  /api/v3/work_packages/{id}/available_assignees:
    get:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            delete:
                              href: /api/v3/users/1
                              method: DELETE
                              title: Delete j.sheppard
                            lock:
                              href: /api/v3/users/1/lock
                              method: POST
                              title: Set lock on j.sheppard
                            self:
                              href: /api/v3/users/1
                              title: John Sheppard - j.sheppard
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.com
                          firstName: John
                          id: 1
                          lastName: Sheppard
                          login: j.sheppard
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                        - _links:
                            delete:
                              href: /api/v3/users/2
                              method: DELETE
                              title: Delete j.sheppard2
                            lock:
                              href: /api/v3/users/2/lock
                              method: POST
                              title: Set lock on j.sheppard2
                            self:
                              href: /api/v3/users/2
                              title: Jim Sheppard - j.sheppard2
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.net
                          firstName: Jim
                          id: 2
                          lastName: Sheppard
                          login: j.sheppard2
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/work_packages/42/available_assignees
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_AssigneesModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the assignable users for this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The work package you are looking for cannot be found or has been deleted.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: Получает список пользователей, которые могут быть назначены для данного рабочего пакета.
      operationId: Work_Package_Available_assignees
      summary: Пакет работ, доступный правопреемникам
  /api/v3/work_packages/{id}/available_projects:
    get:
      parameters:
        - description: идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            categories:
                              href: /api/v3/projects/6/categories
                            createWorkPackage:
                              href: /api/v3/projects/6/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/6/work_packages
                              method: post
                            editWorkPackage:
                              href: /api/v3//work_packages/{id}/form
                              method: post
                              templated: true
                            self:
                              href: /api/v3/projects/6
                              title: A project
                            versions:
                              href: /api/v3/projects/6/versions
                          _type: Project
                          createdAt: '2015-07-06T13:28:14+00:00'
                          description: Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
                          id: 6
                          identifier: a_project
                          name: A project
                          type: Customer Project
                          updatedAt: '2015-10-01T09:55:02+00:00'
                        - _links:
                            categories:
                              href: /api/v3/projects/14/categories
                            createWorkPackage:
                              href: /api/v3/projects/14/work_packages/form
                              method: post
                            createWorkPackageImmediate:
                              href: /api/v3/projects/14/work_packages
                              method: post
                            self:
                              href: /api/v3/projects/14
                              title: Another project
                            versions:
                              href: /api/v3/projects/14/versions
                          _type: Project
                          createdAt: '2016-02-29T12:50:20+00:00'
                          description: ''
                          id: 14
                          identifier: another_project
                          name: Another project
                          type: null
                          updatedAt: '2016-02-29T12:50:20+00:00'
                    _links:
                      self:
                        href: /api/v3/work_packages/5/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_work_packageModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: Возвращает список проектов, доступных в качестве проектов, в которые можно переместить рабочий пакет.
      operationId: Available_projects_for_work_package
      summary: Доступные проекты для пакета работ
  /api/v3/work_packages/{id}/available_relation_candidates:
    get:
      summary: Доступные кандидаты на отношения
      operationId: list_available_relation_candidates
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      parameters:
        - description: Идентификатор проекта
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Максимальное количество кандидатов в списке (по умолчанию 10)
          example: '25'
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
        - description: |-
            JSON, задающий условия фильтрации.
            Принимает те же фильтры, что и конечная точка [рабочие пакеты](https://meteor-docs.gitbook.io/docs/api/endpoints/work-packages/).
          example: '[{ "status_id": { "operator": "o", "values": null } }]'
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: Ярлык для фильтрации по идентификатору или теме
          example: '"rollout"'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Тип отношений, для которых требуется найти кандидатов (по умолчанию "отношения")
          example: '"follows"'
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: |-
            JSON, указывающий критерии сортировки.
            Принимает те же критерии сортировки, что и конечная точка [рабочие пакеты](https://meteor-docs.gitbook.io/docs/api/endpoints/work-packages/).
          example: '[["status", "asc"]]'
          in: query
          name: sortBy
          required: false
          schema:
            default: '[["id", "asc"]]'
            type: string
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            self:
                              href: /api/v3/work_packages/1
                          _type: WorkPackage
                          id: 1
                          subject: Skipped other properties for brevity
                        - _links:
                            self:
                              href: /api/v3/work_packages/2
                          _type: WorkPackage
                          id: 2
                          subject: Skipped other properties for brevity
                    _links:
                      self:
                        href: /api/v3/projects/14/work_packages
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_relation_candidatesModel'
          description: OK
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
  /api/v3/work_packages/{id}/available_watchers:
    get:
      parameters:
        - description: идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            delete:
                              href: /api/v3/users/1
                              method: DELETE
                              title: Delete j.sheppard
                            lock:
                              href: /api/v3/users/1/lock
                              method: POST
                              title: Set lock on j.sheppard
                            self:
                              href: /api/v3/users/1
                              title: John Sheppard - j.sheppard
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.com
                          firstName: John
                          id: 1
                          lastName: Sheppard
                          login: j.sheppard
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                        - _links:
                            delete:
                              href: /api/v3/users/2
                              method: DELETE
                              title: Delete j.sheppard2
                            lock:
                              href: /api/v3/users/2/lock
                              method: POST
                              title: Set lock on j.sheppard2
                            self:
                              href: /api/v3/users/2
                              title: Jim Sheppard - j.sheppard2
                          _type: User
                          avatar: https://example.org/users/1/avatar
                          createdAt: '2014-05-21T08:51:20.396Z'
                          email: shep@mail.net
                          firstName: Jim
                          id: 2
                          lastName: Sheppard
                          login: j.sheppard2
                          status: active
                          updatedAt: '2014-05-21T08:51:20.396Z'
                    _links:
                      self:
                        href: /api/v3/work_packages/1/available_watchers
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_WatchersModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: Получает список пользователей, которые могут наблюдать за указанным рабочим пакетом.
      operationId: Available_watchers
      summary: Доступные наблюдатели
  /api/v3/work_packages/{id}/file_links:
    post:
      summary: Создает ссылки на файлы.
      operationId: create_work_package_file_link
      tags:
        - Рабочие пакеты/Задачи
        - Ссылки на файлы
      description: |-
        Создает ссылки на файлы в рабочем пакете.

        Запрос интерпретируется как массовая вставка, где каждый элемент коллекции проверяется отдельно. Каждый
        элемент содержит исходные метаданные и ссылку на хранилище, на которое будет указывать ссылка на файл. 
        Ссылка на хранилище может быть предоставлена как ссылка на ресурс с идентификатором или как URL-адрес хостинга.

        Идентификатор и название файла считаются обязательной информацией. Остальные исходные метаданные ДОЛЖНЫ быть предоставлены
        клиентом. Значение _mimeType_ ДОЛЖНО быть стандартным типом mime. Пустой тип mime будет обрабатываться как неизвестный. Чтобы связать
        папку, необходимо использовать пользовательский тип mime `application/x-op-directory`.

        Одновременно может быть отправлено до 20 ссылок на файлы.

        Если какие-либо данные элемента неверны, ссылки на файлы не будут созданы.

        Если ссылка на файл с соответствующим идентификатором источника, рабочим пакетом и хранилищем уже существует, то она не создаст
        дополнительную ссылку на файл или не обновит метаданные. Вместо этого будет возвращена информация из существующей ссылки на файл.
      parameters:
        - name: id
          description: Идентификатор рабочего пакета
          in: path
          required: true
          schema:
            type: integer
          example: 1337
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileLinkCollectionWriteModel'
            example:
              _type: Collection
              _embedded:
                elements:
                  - originData:
                      id: 5503
                      name: logo.png
                      mimeType: image/png
                      size: 433765
                      createdAt: '2021-12-19T09:42:10.170Z'
                      lastModifiedAt: '2021-12-20T14:00:13.987Z'
                      createdByName: Luke Skywalker
                      lastModifiedByName: Anakin Skywalker
                    _links:
                      storageUrl:
                        href: https://nextcloud.deathstar.rocks/
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkCollectionReadModel'
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                message: The request was invalid. File Link logo.png - Storage was invalid.
          description: |-
            Occurs if the request body was correctly formatted, but some properties lead to errors in the validation
            process. This happens e.g. if the provided storage url is not available on the server.
    get:
      summary: Получает ссылки на все файлы рабочего пакета
      operationId: list_work_package_file_links
      tags:
        - Рабочие пакеты/Задачи
        - Ссылки на файлы
      description: |-
        Получает все ссылки на файлы из рабочего пакета.

        В качестве побочного эффекта для каждой ссылки на файл в источник хранилища отправляется запрос на получение текущих данных и исправление
        данных ссылки на файл перед возвратом, а также на получение разрешений пользователя на этот исходный файл. 
      parameters:
        - name: id
          description: Идентификатор рабочего пакета
          in: path
          required: true
          schema:
            type: integer
          example: 1337
        - name: filters
          in: query
          description: |-
            JSON, задающий условия фильтрации.
            Принимает тот же формат, что и [запросы](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/).
            конечная точка. Поддерживаются следующие фильтры:

            - хранение
          required: false
          example: '[{"storage":{"operator":"=","values":["42"]}}]'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkCollectionReadModel'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
  /api/v3/work_packages/{id}/form:
    post:
      summary: Форма редактирования рабочего пакета
      operationId: Work_Package_Edit_Form
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий свойства и ссылки для редактирования, в теле.

        Обратите внимание, что разрешено предоставлять свойства или ссылки, поддерживающие только операцию записи.

        При одновременном задании даты начала, даты окончания и продолжительности будет проверена их корректность, и будет возвращена ошибка 422, если одно значение не совпадает с двумя другими. Вы можете заставить сервер вычислить значение: задайте в запросе только два значения, и третье будет вычислено и возвращено в ответе. Например, при отправке `{ "startDate": "2022-08-23", duration: "P2D" }`, в ответ будет указано `{ "dueDate": "2022-08-24" }`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      parameters:
        - description: Идентификатор изменяемого рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the specified work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package, assign version, change work package status, manage subtasks or move work package

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
  /api/v3/work_packages/{id}/revisions:
    get:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                        - _links:
                            author:
                              href: /api/v3/users/1
                              title: John Sheppard - j.sheppard
                            project:
                              href: /api/v3/projects/1
                              title: A Test Project
                            self:
                              href: /api/v3/revisions/13
                            showRevision:
                              href: /projects/identifier/repository/revision/11f4b07
                          _type: Revision
                          authorName: John Sheppard
                          createdAt: '2015-07-21T13:36:59.220Z'
                          formattedIdentifier: 11f4b07
                          id: 13
                          identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
                          message:
                            format: plain
                            html: <p>This revision provides new features<br/><br/>An elaborate description</p>
                            raw: |-
                              This revision provides new features

                              An elaborate description
                        - _links:
                            author:
                              href: /api/v3/users/2
                              title: Jim Sheppard - j.sheppard
                            project:
                              href: /api/v3/projects/1
                              title: A Test Project
                            self:
                              href: /api/v3/revisions/14
                            showRevision:
                              href: /projects/identifier/repository/revision/029ed72a
                          _type: Revision
                          authorName: j1msheppard
                          createdAt: '2015-06-30T08:47:00.818Z'
                          formattedIdentifier: 029ed72a
                          id: 13
                          identifier: 029ed72a3b7b7c4ab332b1f6eaa6576e7c946059
                          message:
                            format: plain
                            html: <p>This revision fixes some stuff<br/><br/>More information here</p>
                            raw: |-
                              This revision fixes some stuff

                              More information here
                    _links:
                      self:
                        href: /api/v3/work_packages/42/revisions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/RevisionsModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see linked revisions for this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages for the project the work package is contained in.

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work project does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        Получает список ревизий, которые связаны с этим рабочим пакетом, например, потому, что на него есть ссылка в сообщении о фиксации ревизии.
        Отображаются только связанные ревизии из репозиториев, если у пользователя есть разрешение на просмотр наборов изменений в определяющем проекте.
      operationId: Revisions
      summary: Изменения
  /api/v3/work_packages/{id}/relations:
    get:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '302':
          content:
            text/plain:
              schema:
                type: string
              examples:
                response:
                  value: You are being redirected to /api/v3/relations?involved={work_package_id}
          description: Found
          headers:
            Location:
              schema:
                type: string
      tags:
        - Рабочие пакеты/Задачи
      description: Содержит список всех отношений, в которых задействован этот рабочий пакет.
      operationId: List_relations
      summary: Перечислите отношения
    post:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Created
          headers: {}
        '400':
          $ref: '#/components/responses/InvalidRequestBody'
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to create a relation.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '409':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:UpdateConflict
                    message: Couldn't update the resource because of conflicting modifications.
          description: |-
            Returned if there already exists a relation between the given work packages of **any** type
            or if the relation is not allowed.
          headers: {}
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
          description: |-
            Returned if:

            * the client tries to write a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`)
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        При вызове этой конечной точки клиент предоставляет один объект, содержащий, по крайней мере, необходимые свойства и ссылки в теле.
        Обязательные поля отношения можно найти в его схеме, которая встроена в соответствующую форму.
        Обратите внимание, что разрешается предоставлять только свойства или ссылки, поддерживающие операцию записи.
      operationId: Create_Relation
      summary: Создать связь
  /api/v3/work_packages/{id}/watchers:
    get:
      parameters:
        - description: Идентификатор рабочего пакета
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/hal+json:
              example:
                _embedded:
                  elements:
                    - _links:
                        delete:
                          href: /api/v3/users/1
                          method: DELETE
                          title: Delete j.sheppard
                        lock:
                          href: /api/v3/users/1/lock
                          method: POST
                          title: Set lock on j.sheppard
                        self:
                          href: /api/v3/users/1
                          title: John Sheppard - j.sheppard
                        showUser:
                          href: /users/1
                          type: text/html
                      _type: User
                      avatar: https://example.org/users/1/avatar
                      createdAt: '2014-05-21T08:51:20.396Z'
                      firstName: John
                      id: 1
                      lastName: Sheppard
                      login: j.sheppard
                      mail: shep@mail.com
                      status: active
                      updatedAt: '2014-05-21T08:51:20.396Z'
                    - _links:
                        delete:
                          href: /api/v3/users/2
                          method: DELETE
                          title: Delete j.sheppard2
                        lock:
                          href: /api/v3/users/2/lock
                          method: POST
                          title: Set lock on j.sheppard2
                        self:
                          href: /api/v3/users/2
                          title: Jim Sheppard - j.sheppard2
                      _type: User
                      avatar: https://example.org/users/1/avatar
                      createdAt: '2014-05-21T08:51:20.396Z'
                      firstName: Jim
                      id: 2
                      lastName: Sheppard
                      login: j.sheppard2
                      mail: shep@mail.net
                      status: active
                      updatedAt: '2014-05-21T08:51:20.396Z'
                _links:
                  self:
                    href: /api/v3/work_packages/14/watchers
                _type: Collection
                count: 2
                total: 2
              schema:
                $ref: '#/components/schemas/WatchersModel'
          description: OK
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to see the watchers of this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            *Note that you will effectively not be able to see the watchers of a work package without being able to see the work package.*
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: ''
      operationId: List_watchers
      summary: Наблюдатели за списком
    post:
      parameters:
        - description: Идентификатор рабочего пакета
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers: {}
        '201':
          description: Created
          headers: {}
        '400':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
                message: The request body was not a single JSON object.
          description: |-
            Occurs when the client did not send a valid JSON object in the request body.

            For example:

            * The request did not contain a single JSON object

            * The JSON object did not contain the key `user`

            * The value of `users` was not a link object
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                message: You are not allowed to add watchers to this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permissions:**

            * view work package (for self)

            * add work package watchers (for other users)

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                _type: Error
                errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            *Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          description: |-
            Returned if:

            * the client tries to specify a link to a resource that is not a user (`ResourceTypeMismatch`)

            * the user specified is not allowed to watch that work package (`PropertyConstraintViolation`)

            * the user specified does not exist (`PropertyConstraintViolation`)
          headers: {}
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        Добавляет наблюдателя к указанному рабочему пакету.

        Ожидается, что запрос будет содержать один объект JSON, который содержит объект link под ключом `user`.

        Ответом будет пользователь, добавленный как наблюдатель.
        В случае, если пользователь уже просматривал рабочий пакет, возвращается `HTTP 200`
        , а в случае, если пользователь был добавлен в качестве нового наблюдателя, - `HTTP 201`.
      operationId: Add_watcher
      requestBody:
        content:
          application/json:
            schema:
              example:
                user:
                  href: /api/v3/users/1
              properties:
                user:
                  properties:
                    href:
                      type: string
                  type: object
              type: object
      summary: Добавить наблюдателя
  /api/v3/work_packages/{id}/watchers/{user_id}:
    delete:
      parameters:
        - description: Идентификатор рабочего пакета
          example: '1'
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Идентификатор пользователя
          example: '1'
          in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          headers: {}
        '403':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:MissingPermission
                    message: You are not allowed to remove watchers from this work package.
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** delete work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
          headers: {}
        '404':
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:meteor-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
          description: |-
            Returned in one of the following cases:

            Either the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            Or the specified user does not exist at all.

            *Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*
          headers: {}
        '406':
          $ref: '#/components/responses/MissingContentType'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - Рабочие пакеты/Задачи
      description: |-
        Удаляет указанного пользователя из списка пользователей, наблюдающих за данным рабочим пакетом.

        Если запрос выполнен успешно, указанный пользователь больше не просматривает рабочий пакет.

        *Примечание: Это также может иметь место, если указанный пользователь не просматривал рабочий пакет до запроса.*
      operationId: Remove_watcher
      summary: Удалить наблюдателя
components:
  examples:
    DateAlertNotification:
      value:
        _type: Notification
        id: 1
        readIAN: false
        reason: dateAlert
        createdAt: '2022-04-05T14:38:28.361Z'
        updatedAt: '2022-04-06T09:03:24.347Z'
        _embedded:
          project:
            _hint: Project resource shortened for brevity
            _type: Project
            id: 11
            name: Jedi Remnant Locator
          resource:
            _hint: WorkPackage resource shortened for brevity
            _type: WorkPackage
            id: 77
            subject: Educate Visas Marr
          details:
            - _type: Values::Property
              property: startDate
              value: '2021-01-01'
              _links:
                self:
                  href: api/v3/notifications/123/details/0
                schema:
                  href: api/v3/values/schemas/startDate
        _links:
          self:
            href: /api/v3/notifications/1
          readIAN:
            href: /api/v3/notifications/1/read_ian
            method: post
          actor:
            href: null
          project:
            href: /api/v3/projects/11
            title: Jedi Remnant Locator
          activity:
            href: null
          resource:
            href: /api/v3/work_packages/77
            title: Educate Visas Marr
    GridSimpleCollectionResponse:
      value:
        _type: Collection
        total: 1
        count: 1
        pageSize: 30
        offset: 1
        _embedded:
          elements:
            - _type: Grid
              id: 2
              rowCount: 8
              columnCount: 5
              widgets:
                - _type: GridWidget
                  identifier: time_entries_current_user
                  startRow: 1
                  endRow: 8
                  startColumn: 1
                  endColumn: 3
                - _type: GridWidget
                  identifier: news
                  startRow: 3
                  endRow: 8
                  startColumn: 4
                  endColumn: 5
                - _type: GridWidget
                  identifier: documents
                  startRow: 1
                  endRow: 3
                  startColumn: 3
                  endColumn: 6
              createdAt: '2018-12-03T16:58:30.297Z'
              updatedAt: '2018-12-13T19:36:40.352Z'
              _links:
                scope:
                  href: /my/page
                  type: text/html
                updateImmediately:
                  href: /api/v3/grids/2
                  method: patch
                update:
                  href: /api/v3/grids/2/form
                  method: post
                self:
                  href: /api/v3/grids/2
    GridSimplePatchModel:
      value:
        rowCount: 1
        columnCount: 2
        widgets:
          - _type: GridWidget
            identifier: tasks
            startRow: 1
            endRow: 2
            startColumn: 1
            endColumn: 2
            options:
              name: Tasks
          - _type: GridWidget
            identifier: news
            startRow: 1
            endRow: 2
            startColumn: 2
            endColumn: 3
            options:
              name: Новости
        _links:
          scope:
            href: /my/page
            type: text/html
    GridSimpleResponse:
      value:
        _type: Grid
        id: 2
        rowCount: 8
        columnCount: 5
        widgets:
          - _type: GridWidget
            identifier: tasks
            startRow: 1
            endRow: 8
            startColumn: 1
            endColumn: 3
          - _type: GridWidget
            identifier: news
            startRow: 3
            endRow: 8
            startColumn: 4
            endColumn: 5
          - _type: GridWidget
            identifier: documents
            startRow: 1
            endRow: 3
            startColumn: 3
            endColumn: 6
        createdAt: '2018-12-03T16:58:30.915Z'
        updatedAt: '2018-12-13T19:36:40.588Z'
        _links:
          self:
            href: /api/v3/grids/2
          attachments:
            href: /api/v3/grids/2/attachments
          addAttachment:
            href: /api/v3/grids/2/attachments
            method: post
          scope:
            href: /my/page
            type: text/html
          updateImmediately:
            href: /api/v3/grids/2
            method: patch
          update:
            href: /api/v3/grids/2/form
            method: post
          delete:
            href: /api/v3/grids/2
            method: delete
    GroupResponse:
      value:
        _type: Group
        id: 26
        name: Force Users
        createdAt: '2024-01-11T15:54:16.542Z'
        updatedAt: '2024-01-11T15:58:02.237Z'
        _embedded:
          members:
            - _hint: Principal resource shortened for brevity
              _type: User
              id: 23
              name: Grogu Jarin
            - _hint: Principal resource shortened for brevity
              _type: User
              id: 14
              name: Mara Jade
            - _hint: Principal resource shortened for brevity
              _type: User
              id: 3
              name: Darth Vader
        _links:
          self:
            href: /api/v3/groups/26
            title: Force Users
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2226%22%5D%7D%7D%5D
            title: Memberships
          delete:
            href: /api/v3/groups/26
            method: delete
          updateImmediately:
            href: /api/v3/groups/26
            method: patch
          members:
            - href: /api/v3/users/23
              title: Grogu Jarin
            - href: /api/v3/users/14
              title: Mara Jade
            - href: /api/v3/users/3
              title: Darth Vader
    MembershipCreateRequestCustomMessage:
      description: Create a membership and send a custom notification message.
      value:
        _links:
          principal:
            href: /api/v3/users/14
          project:
            href: /api/v3/projects/21
          roles:
            - href: /api/v3/roles/4
        _meta:
          notificationMessage:
            format: markdown
            raw: Granted permission to execute Order *66*.
    MembershipCreateRequestGlobalRole:
      description: Create a membership for a global role. To address global roles, no project must be set.
      value:
        _links:
          principal:
            href: /api/v3/users/14
          roles:
            - href: /api/v3/roles/4
    MembershipCreateRequestNoNotification:
      description: Create a membership without sending a notification message.
      value:
        _links:
          principal:
            href: /api/v3/users/14
          project:
            href: /api/v3/projects/21
          roles:
            - href: /api/v3/roles/4
        _meta:
          sendNotification: false
    MembershipFormResponse:
      description: A simple form response example.
      value:
        _type: Form
        _embedded:
          payload:
            _meta:
              notificationMessage:
                format: markdown
                raw: '*Hallo*'
                html: <p class="op-uc-p"><em>Hallo</em></p>
            _links:
              project:
                href: /api/v3/projects/21
                title: Death Star v3
              principal:
                href: /api/v3/users/14
                title: Mara Jade
              roles: []
          schema:
            _type: Schema
            _hint: Schema resource shortened for brevity
          validationErrors:
            roles:
              _type: Error
              errorIdentifier: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
              message: Roles need to be assigned.
              _embedded:
                details:
                  attribute: roles
        _links:
          self:
            href: /api/v3/memberships/form
            method: post
          validate:
            href: /api/v3/memberships/form
            method: post
    MembershipSchemaResponse:
      description: A simple schema response example.
      value:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        notificationMessage:
          type: Formattable
          name: Message
          required: false
          hasDefault: false
          writable: true
          options: {}
          location: _meta
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/memberships/available_projects?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%2214%22%5D%7D%7D%5D
        principal:
          type: Principal
          name: Principal
          required: true
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%223%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%2221%22%5D%7D%7D%5D
        roles:
          type: '[]Role'
          name: Role
          required: true
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/roles
        _links:
          self:
            href: /api/v3/memberships/schema
    MembershipSimpleCollectionResponse:
      description: A simple membership collection response example.
      value:
        _type: Collection
        total: 2
        count: 2
        pageSize: 20
        offset: 1
        _embedded:
          elements:
            - _type: Membership
              id: 11
              createdAt: '2015-03-20T12:56:56.643Z'
              updatedAt: '2018-12-20T18:16:11.643Z'
              _links:
                self:
                  href: /api/v3/memberships/11
                  title: Darth Vader
                schema:
                  href: /api/v3/memberships/schema
                update:
                  href: /api/v3/memberships/11/form
                  method: post
                updateImmediately:
                  href: /api/v3/memberships/11
                  method: patch
                project:
                  href: /api/v3/projects/3
                  title: Death Start v3
                principal:
                  href: /api/v3/users/5
                  title: Darth Vader
                roles:
                  - href: /api/v3/roles/4
                    title: Sith Lord
            - _type: Membership
              id: 12
              _hint: Membership resource shortened for brevity
        _links:
          self:
            href: /api/v3/memberships
          jumpTo:
            href: /api/v3/memberships?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/memberships?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
          nextByOffset:
            href: /api/v3/memberships?filters=%5B%5D&offset=2&pageSize=20
    MembershipSimpleResponse:
      description: A simple membership response example.
      value:
        _type: Membership
        id: 11
        createdAt: '2015-03-20T12:56:56.626Z'
        updatedAt: '2018-12-20T18:16:11.563Z'
        _embedded:
          project:
            _type: Project
            id: 3
            _hint: Project resource shortened for brevity
          principal:
            _type: User
            id: 5
            _hint: User resource shortened for brevity
          roles:
            - _type: Role
              id: 4
              _hint: Roles resource shortened for brevity
        _links:
          self:
            href: /api/v3/memberships/11
            title: Darth Vader
          schema:
            href: /api/v3/memberships/schema
          update:
            href: /api/v3/memberships/11/form
            method: post
          updateImmediately:
            href: /api/v3/memberships/11
            method: patch
          project:
            href: /api/v3/projects/3
            title: Death Start v3
          principal:
            href: /api/v3/users/5
            title: Darth Vader
          roles:
            - href: /api/v3/roles/4
              title: Sith Lord
    MembershipUpdateAdditionalRoles:
      description: Updates a membership and add multiple roles.
      value:
        _links:
          roles:
            - href: /api/v3/roles/5
            - href: /api/v3/roles/6
    MentionedNotification:
      value:
        _type: Notification
        id: 1
        readIAN: false
        reason: mentioned
        createdAt: '2022-04-05T14:38:28.881Z'
        updatedAt: '2022-04-06T09:03:24.591Z'
        _embedded:
          author:
            _hint: User resource shortened for brevity
            _type: User
            id: 13
            name: Darth Nihilus
          project:
            _hint: Project resource shortened for brevity
            _type: Project
            id: 11
            name: Jedi Remnant Locator
          activity:
            _hint: Activity resource shortened for brevity
            _type: Activity::Comment
            id: 180
            version: 3
          resource:
            _hint: WorkPackage resource shortened for brevity
            _type: WorkPackage
            id: 77
            subject: Educate Visas Marr
          details: []
        _links:
          self:
            href: /api/v3/notifications/1
          readIAN:
            href: /api/v3/notifications/1/read_ian
            method: post
          actor:
            href: /api/v3/users/13
            title: Darth Nihilus
          project:
            href: /api/v3/projects/11
            title: Jedi Remnant Locator
          activity:
            href: /api/v3/activities/180
          resource:
            href: /api/v3/work_packages/77
            title: Educate Visas Marr
    NotificationCollection:
      value:
        _type: Collection
        count: 2
        total: 2
        offset: 1
        pageSize: 20
        _embedded:
          elements:
            - _hint: Notification resource shortened for brevity
              id: 1
              readIAN: false
              reason: mentioned
            - _hint: Notification resource shortened for brevity
              id: 2
              readIAN: false
              reason: dateAlert
              _embedded:
                details:
                  - _type: Values::Property
                    property: startDate
                    value: '2021-01-01'
                    _links:
                      self:
                        href: api/v3/notifications/123/details/0
                      schema:
                        href: api/v3/values/schemas/startDate
          detailsSchemas:
            - _type: Schema
              property:
                name: Property
                type: String
              value:
                name: Start date
                type: Date
              _links:
                self:
                  href: /api/v3/values/schemas/startDate
        _links:
          self:
            href: /api/v3/notifications?offset=1&pageSize=20
          jumpTo:
            href: /api/v3/notifications?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/notifications?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
    PlaceholderUserResponse:
      value:
        _type: PlaceholderUser
        id: 27
        name: Akolyth
        createdAt: '2024-02-12T11:52:24.708Z'
        updatedAt: '2024-02-12T11:52:24.708Z'
        _links:
          self:
            href: /api/v3/placeholder_users/27
            title: Akolyth
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2227%22%5D%7D%7D%5D
            title: Memberships
          updateImmediately:
            href: /api/v3/placeholder_users/27
            title: Update Akolyth
            method: patch
          delete:
            href: /api/v3/placeholder_users/27
            title: Delete Akolyth
            method: delete
          showUser:
            href: /placeholder_users/27
            type: text/html
    Project:
      value:
        _type: Project
        _links:
          self:
            href: /api/v3/projects/1
            title: Lorem
          createWorkPackage:
            href: /api/v3/projects/1/work_packages/form
            method: post
          createWorkPackageImmediate:
            href: /api/v3/projects/1/work_packages
            method: post
          categories:
            href: /api/v3/projects/1/categories
          types:
            href: /api/v3/projects/1/types
          versions:
            href: /api/v3/projects/1/versions
          workPackages:
            href: /api/v3/projects/1/work_packages
          memberships:
            href: /api/v3/memberships?filters=[{"project":{"operator":"=","values":["1"]}}]
          customField456:
            href: /api/v3/users/315
            title: A user
          parent:
            href: /api/v3/projects/123
            title: Parent project
          ancestors:
            - href: /api/v3/projects/2
              title: Root project
            - href: /api/v3/projects/12
              title: Grandparent project
            - href: /api/v3/projects/123
              title: Parent project
          status:
            href: /api/v3/project_statuses/on_track
            title: On track
        id: 1
        identifier: project_example
        name: Project example
        active: true
        public: false
        statusExplanation:
          format: markdown
          raw: Everything **fine**
          html: <p>Everything <strong>fine</strong></p>
        description:
          format: markdown
          raw: Lorem **ipsum** dolor sit amet
          html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
        createdAt: '2014-05-21T08:51:20.396Z'
        updatedAt: '2014-05-21T08:51:20.396Z'
        customField123: 123
    ProjectBody:
      value:
        name: Project example
        statusExplanation:
          raw: Everything **fine**
        description:
          raw: Lorem **ipsum** dolor sit amet
        customField123: 123
        _links:
          parent:
            href: /api/v3/projects/123
          customField456:
            href: /api/v3/users/315
    ProjectCollection:
      value:
        _type: Collection
        count: 2
        total: 2
        pageSize: 20
        offset: 1
        _embedded:
          elements:
            - _hint: Project resource shortened for brevity
              id: 1
              identifier: initialproject
              name: DeathStar construction
              active: true
              public: true
            - _hint: Project resource shortened for brevity
              id: 2
              identifier: mysecret
              name: Palpatine's secret plan
              active: true
              public: false
        _links:
          self:
            href: /api/v3/projects?filters=%5B%5D&offset=1&pageSize=20
          jumpTo:
            href: /api/v3/projects?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/projects?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
          representations:
            - href: /projects.csv?filters=%5B%5D&offset=1&pageSize=20
              identifier: csv
              type: text/csv
              title: CSV
            - href: /projects.xls?filters=%5B%5D&offset=1&pageSize=20
              identifier: xls
              type: application/vnd.ms-excel
              title: XLS
    QueriesModel:
      value:
        _links:
          self:
            href: /api/v3/queries
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
            - _type: Query
              id: 9
              name: fdsfdsfdsf
              createdAt: '2015-03-20T12:56:56.413Z'
              updatedAt: '2015-05-20T18:16:53.392Z'
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Finish date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Finish date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: true
              projections:
                - _type: QueryProjection::Table
                - _type: QueryProjection::TeamPlanner
                  _links:
                    rows:
                      - href: /api/v3/users/1
                        title: Bob Bobbit
                - _type: QueryProjection::Calendar
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 30
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: METEOR Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
    QueryModel:
      value:
        _type: Query
        id: 9
        name: abcdefg
        createdAt: '2015-03-20T12:56:56.235Z'
        updatedAt: '2015-05-20T18:16:53.976Z'
        filters:
          - _type: StatusQueryFilter
            name: Status
            _links:
              filter:
                href: /api/v3/queries/filters/status
                title: Status
              operator:
                href: /api/v3/queries/operators/o
                title: open
              schema:
                href: /api/v3/queries/filter_instance_schemas/status
              values: []
          - _type: DueDateQueryFilter
            name: Finish date
            values:
              - '1'
            _links:
              filter:
                href: /api/v3/queries/filters/dueDate
                title: Finish date
              operator:
                href: /api/v3/queries/operators/<t+
                title: in less than
              schema:
                href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: false
        hidden: false
        timestamps:
          - PT0S
        projections:
          - _type: QueryProjection::Table
            showHierarchies: true
            _links:
              columns:
                - href: /api/v3/queries/columns/id
                  title: ID
                - href: /api/v3/queries/columns/subject
                  title: Subject
                - href: /api/v3/queries/columns/type
                  title: Type
                - href: /api/v3/queries/columns/status
                  title: Status
                - href: /api/v3/queries/columns/priority
                  title: Priority
                - href: /api/v3/queries/columns/assignee
                  title: Assignee
                - href: /api/v3/queries/columns/updated_at
                  title: Updated on
              highlightedAttributes: []
          - _type: QueryProjection::Gantt
            labels: {}
            zoomLevel: auto
            _links:
              highlightedAttributes: []
          - _type: QueryProjection::TeamPlanner
            _links:
              rows:
                - href: /api/v3/users/1
                  title: Alan Touring
                - href: /api/v3/users/5
                  title: John von Neumann
          - _type: QueryProjection::Calendar
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 30
            offset: 1
            _embedded:
              elements:
                - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: abcdefg
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          groupBy:
            href: null
            title: null
          sortBy:
            - href: /api/v3/queries/sort_bys/parent-desc
              title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: METEOR Admin
          project:
            href: /api/v3/projects/3
            title: copy
    QuerySchemaModel:
      value:
        _dependencies: []
        _embedded:
          filtersSchemas:
            _embedded:
              elements:
                - _dependencies:
                    - _type: SchemaDependency
                      dependencies:
                        /api/v3/queries/operators/!:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: '[]User'
                            writable: true
                        /api/v3/queries/operators/!*: {}
                        /api/v3/queries/operators/*: {}
                        /api/v3/queries/operators/=:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: '[]User'
                            writable: true
                      'on': operator
                  _links:
                    filter:
                      href: /api/v3/queries/filters/assignee
                      title: Assignee
                    self:
                      href: /api/v3/queries/filter_instance_schemas/assignee
                  _type: QueryFilterInstanceSchema
                  filter:
                    _links: {}
                    hasDefault: false
                    name: Filter
                    required: true
                    type: QueryFilter
                    writable: true
                  name:
                    hasDefault: true
                    name: Name
                    required: true
                    type: String
                    writable: false
                - _dependencies:
                    - _type: SchemaDependency
                      dependencies:
                        /api/v3/queries/operators/!:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: '[]User'
                            writable: true
                        /api/v3/queries/operators/=:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: '[]User'
                            writable: true
                      'on': operator
                  _links:
                    filter:
                      href: /api/v3/queries/filters/author
                      title: Author
                    self:
                      href: /api/v3/queries/filter_instance_schemas/author
                  _type: QueryFilterInstanceSchema
                  filter:
                    _links: {}
                    hasDefault: false
                    name: Filter
                    required: true
                    type: QueryFilter
                    writable: true
                  name:
                    hasDefault: true
                    name: Name
                    required: true
                    type: String
                    writable: false
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas
            _type: Collection
            count: 20
            total: 20
        _links:
          self:
            href: /api/v3/queries/schema
        _type: Schema
        columns:
          _links: {}
          hasDefault: true
          location: _links
          name: Columns
          required: false
          type: '[]QueryColumn'
          writable: true
        createdAt:
          hasDefault: false
          name: Created on
          required: true
          type: DateTime
          writable: false
        filters:
          _links:
            allowedValuesSchemas:
              href: /api/v3/queries/filter_instance_schemas
          hasDefault: true
          location: _links
          name: Фильтры
          required: false
          type: '[]QueryFilterInstance'
          writable: true
        groupBy:
          _links: {}
          hasDefault: false
          name: Group results by
          required: false
          type: '[]QueryGroupBy'
          writable: true
        highlightedAttributes:
          hasDefault: true
          location: _links
          name: Highlighted attributes
          required: false
          type: '[]QueryColumn'
          writable: true
          deprecated: true
        highlightingMode:
          hasDefault: true
          name: Highlighting mode
          required: false
          type: String
          writable: true
          deprecated: true
        id:
          hasDefault: false
          name: ID
          required: true
          type: Integer
          writable: false
        name:
          hasDefault: false
          maxLength: 255
          minLength: 1
          name: Name
          required: true
          type: String
          writable: true
        project:
          _links: {}
          hasDefault: false
          location: _links
          name: Project
          required: false
          type: Project
          writable: true
        public:
          hasDefault: true
          name: Public
          required: false
          type: Boolean
          writable: true
        results:
          hasDefault: false
          name: Results
          required: false
          type: WorkPackageCollection
          writable: false
        showHierarchies:
          hasDefault: true
          name: Show hierarchies
          required: false
          type: Boolean
          writable: true
          deprecated: true
        sortBy:
          _links: {}
          hasDefault: true
          name: Sort by
          required: false
          type: '[]QuerySortBy'
          writable: true
        starred:
          hasDefault: true
          name: Starred
          required: false
          type: Boolean
          writable: true
        sums:
          hasDefault: true
          name: Sums
          required: false
          type: Boolean
          writable: true
        timelineLabels:
          hasDefault: true
          name: Timeline labels
          required: false
          type: QueryTimelineLabels
          writable: true
          deprecated: true
        timelineVisible:
          hasDefault: true
          name: Timeline visible
          required: false
          type: Boolean
          writable: true
          deprecated: true
        timelineZoomLevel:
          hasDefault: true
          name: Timeline zoom level
          required: false
          type: String
          writable: true
          deprecated: true
        timestamps:
          hasDefault: true
          name: Timestamps
          required: false
          type: '[]Timestamp'
          writable: true
        updatedAt:
          hasDefault: false
          name: Updated on
          required: true
          type: DateTime
          writable: false
        user:
          hasDefault: true
          name: User
          required: true
          type: User
          writable: false
    StatusCollection:
      value:
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/statuses/1
              _type: Status
              defaultDoneRatio: 0
              id: 1
              isClosed: false
              isDefault: true
              name: New
              position: 1
            - _links:
                self:
                  href: /api/v3/statuses/3
              _type: Status
              defaultDoneRatio: 75
              id: 3
              isClosed: false
              isDefault: false
              isReadonly: false
              name: Resolved
              position: 3
            - _links:
                self:
                  href: /api/v3/statuses/4
              _type: Status
              defaultDoneRatio: 25
              id: 4
              isClosed: false
              isDefault: false
              name: Feedback
              position: 4
            - _links:
                self:
                  href: /api/v3/statuses/5
              _type: Status
              defaultDoneRatio: 100
              id: 5
              isClosed: true
              isDefault: false
              name: Closed
              position: 5
            - _links:
                self:
                  href: /api/v3/statuses/6
              _type: Status
              defaultDoneRatio: 100
              id: 6
              isClosed: true
              isDefault: false
              name: Rejected
              position: 6
            - _links:
                self:
                  href: /api/v3/statuses/2
              _type: Status
              defaultDoneRatio: 50
              id: 2
              isClosed: false
              isDefault: false
              name: In Progress
              position: 3
        _links:
          self:
            href: /api/v3/statuses
        _type: Collection
        count: 6
        total: 6
    StoragesSimpleCollectionModel:
      value:
        _type: Collection
        count: 2
        total: 2
        offset: 1
        pageSize: 20
        _embedded:
          elements:
            - id: 1337
              _type: Storage
              name: It's no moon
              hasApplicationPassword: true
              createdAt: '2021-12-20T13:37:00.211Z'
              updatedAt: '2021-12-20T13:37:00.211Z'
              _links:
                self:
                  href: /api/v3/storages/1337
                  title: It's no moon
                type:
                  href: urn:meteor-org:api:v3:storages:nextcloud
                  title: Nextcloud
                origin:
                  href: https://nextcloud.deathstar.rocks/
                open:
                  href: https://nextcloud.deathstar.rocks/apps/files
                authorizationState:
                  href: urn:meteor-org:api:v3:storages:authorization:FailedAuthorization
                  title: Failed Authorization
                authorize:
                  href: https://nextcloud.deathstar.rocks/authorize/
                  title: Authorize
                oauthApplication:
                  href: /api/v3/oauth_application/42
                  title: It's no moon (Nextcloud)
                oauthClientCredentials:
                  href: /api/v3/oauth_client_credentials/42
            - id: 1338
              _type: Storage
              name: EmpireSharepoint
              createdAt: '2022-12-21T13:37:00.296Z'
              updatedAt: '2022-12-21T13:37:00.296Z'
              _links:
                self:
                  href: /api/v3/storages/1338
                  title: EmpireSharepoint
                type:
                  href: urn:meteor-org:api:v3:storages:one-drive
                  title: OneDrive
                open:
                  href: https://empire.sharepoint.com/sites/Documents
                authorizationState:
                  href: urn:meteor-org:api:v3:storages:authorization:Connected
                  title: Connected
                oauthClientCredentials:
                  href: /api/v3/oauth_client_credentials/44
    UserResponse:
      value:
        _type: User
        id: 14
        name: Mara Jade
        createdAt: '2022-04-04T08:07:22.910Z'
        updatedAt: '2024-02-09T09:01:17.382Z'
        login: member
        admin: false
        firstName: Mara
        lastName: Jade
        email: m.jade@empire.org
        avatar: https://secure.gravatar.com/avatar/17dd23570f3bd129d06db9b48b7a41b8?default=404&secure=true
        status: active
        identityUrl: null
        language: en
        _links:
          self:
            href: /api/v3/users/14
            title: Mara Jade
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2214%22%5D%7D%7D%5D
            title: Memberships
          showUser:
            href: /users/14
            type: text/html
          updateImmediately:
            href: /api/v3/users/14
            title: Update member
            method: patch
          lock:
            href: /api/v3/users/14/lock
            title: Set lock on member
            method: post
          delete:
            href: /api/v3/users/14
            title: Delete member
            method: delete
    ValuesPropertyStartDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Start date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/startDate
    ValuesPropertyDueDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Due date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/dueDate
    ValuesPropertyDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/date
    ValuesPropertyStartDate:
      value:
        _type: Values::Property
        property: startDate
        value: '2021-01-01'
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/startDate
    ValuesPropertyDueDate:
      value:
        _type: Values::Property
        property: dueDate
        value: '2021-01-01'
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/dueDate
    ValuesPropertyDate:
      value:
        _type: Values::Property
        property: date
        value: '2021-01-01'
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/date
    Views:
      value:
        _links:
          self:
            href: /api/v3/views
          changeSize:
            href: /api/v3/views?pageSize={size}
            templated: true
          jumpTo:
            href: /api/v3/views?offset={offset}
            templated: true
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
            - _type: Views::WorkPackagesTable
              name: Current work packages
              timelineVisible: true
              id: 9
              _links:
                self:
                  href: /api/v3/views/9
                query:
                  href: /api/v3/queries/18
                  title: A query
                columns:
                  - href: /api/v3/users/id
                    title: ID
                  - href: /api/v3/users/subject
                    title: Subject
                  - href: /api/v3/users/type
                    title: Type
                  - href: /api/v3/users/status
                    title: Status
                  - href: /api/v3/users/priority
                    title: Priority
                  - href: /api/v3/users/assignee
                    title: Assignee
                  - href: /api/v3/users/updated_at
                    title: Updated on
                project:
                  href: /api/v3/project/89
                  title: The project
    ViewWorkPackagesTable:
      value:
        _type: Views::WorkPackagesTable
        name: Current work packages
        id: 9
        _links:
          self:
            href: /api/v3/views/9
          query:
            href: /api/v3/queries/18
            title: Current work packages
          project:
            href: /api/v3/project/89
            title: The project
    ViewTeamPlanner:
      value:
        _type: Views::TeamPlanner
        name: Product team
        id: 9
        _links:
          self:
            href: /api/v3/views/9
          query:
            href: /api/v3/queries/18
            title: Product team
          project:
            href: /api/v3/project/89
            title: The project
  responses:
    InvalidQuery:
      description: Returned if the client sends invalid request parameters e.g. filters
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            _type: Error
            errorIdentifier: urn:meteor-org:api:v3:errors:InvalidQuery
            message: Filters Invalid filter does not exist.
    InvalidRequestBody:
      description: Occurs when the client did not send a valid JSON object in the request body.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            _type: Error
            errorIdentifier: urn:meteor-org:api:v3:errors:InvalidRequestBody
            message: The request body was not a single JSON object.
    MissingContentType:
      description: Occurs when the client did not send a Content-Type header
      content:
        text/plain:
          schema:
            type: string
          example: Missing content-type header
    UnsupportedMediaType:
      description: Occurs when the client sends an unsupported Content-Type header.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            _type: Error
            errorIdentifier: urn:meteor-org:api:v3:errors:TypeNotSupported
            message: Expected CONTENT-TYPE to be (expected value) but got (actual value).
  schemas:
    ActivityModel:
      type: object
      properties:
        id:
          type: integer
          description: Activity id
          readOnly: true
          exclusiveMinimum: 0
        version:
          type: integer
          description: Activity version
          readOnly: true
          exclusiveMinimum: 0
        comment:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - {}
        details:
          type: array
          readOnly: true
          items:
            allOf:
              - $ref: '#/components/schemas/Formattable'
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of update
          readOnly: true
      example:
        _type: Activity::Comment
        _links:
          self:
            href: /api/v3/activity/1
            title: Priority changed from High to Low
          workPackage:
            href: /api/v3/work_packages/1
            title: quis numquam qui voluptatum quia praesentium blanditiis nisi
          user:
            href: /api/v3/users/1
            title: John Sheppard - admin
        id: 1
        details:
          - format: markdown
            raw: Lorem ipsum dolor sit amet.
            html: <p>Lorem ipsum dolor sit amet.</p>
        comment:
          format: markdown
          raw: Lorem ipsum dolor sit amet.
          html: <p>Lorem ipsum dolor sit amet.</p>
        createdAt: '2014-05-21T08:51:20.721Z'
        updatedAt: '2014-05-21T09:14:02.929Z'
        version: 31
    AttachmentModel:
      type: object
      required:
        - title
        - fileName
        - description
        - contentType
        - digest
        - createdAt
      properties:
        id:
          type: integer
          description: Attachment's id
          minimum: 1
        title:
          type: string
          description: The name of the file
        fileName:
          type: string
          description: The name of the uploaded file
        fileSize:
          type: integer
          description: The size of the uploaded file in Bytes
          minimum: 0
        description:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: A user provided description of the file
        contentType:
          type: string
          description: The files MIME-Type as determined by the server
        digest:
          type: string
          description: A checksum for the files content
        createdAt:
          type: string
          format: date-time
          description: Time of creation
        _links:
          type: object
          required:
            - self
            - container
            - author
            - downloadLocation
          properties:
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Deletes this attachment

                    # Conditions

                    **Permission**: edit on attachment container or being the author for attachments without container
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This attachment

                    **Resource**: Attachment
            container:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The object (e.g. WorkPackage) housing the attachment

                    **Resource**: Anything
            author:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user who uploaded the attachment

                    **Resource**: User
            downloadLocation:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Direct download link to the attachment

                    **Resource**: -
      example:
        _type: Attachment
        _links:
          self:
            href: /api/v3/attachments/1
          container:
            href: /api/v3/work_packages/1
          author:
            href: /api/v3/users/1
          staticDownloadLocation:
            href: /api/v3/attachments/1/content
          downloadLocation:
            href: /some/remote/aws/url/image.png
        id: 1
        fileName: cat.png
        filesize: 24
        description:
          format: plain
          raw: A picture of a cute cat
          html: <p>A picture of a cute cat</p>
        contentType: image/png
        digest:
          algorithm: md5
          hash: 64c26a8403cd796ea4cf913cda2ee4a9
        createdAt: '2014-05-21T08:51:20.396Z'
    Attachments_Model:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The attachments collection

                        **Resource**: AttachmentsCollection
                      readOnly: true
            _embedded:
              type: object
              properties:
                elements:
                  type: array
                  readOnly: true
                  items:
                    allOf:
                      - $ref: '#/components/schemas/AttachmentModel'
                      - description: Collection of Attachments
    Available_AssigneesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/42/available_assignees
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: User
              _links:
                self:
                  href: /api/v3/users/1
                  title: John Sheppard - j.sheppard
                lock:
                  href: /api/v3/users/1/lock
                  title: Set lock on j.sheppard
                  method: POST
                delete:
                  href: /api/v3/users/1
                  title: Delete j.sheppard
                  method: DELETE
              id: 1
              login: j.sheppard
              firstName: John
              lastName: Sheppard
              email: shep@mail.com
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.977Z'
              updatedAt: '2014-05-21T08:51:20.977Z'
            - _type: User
              _links:
                self:
                  href: /api/v3/users/2
                  title: Jim Sheppard - j.sheppard2
                lock:
                  href: /api/v3/users/2/lock
                  title: Set lock on j.sheppard2
                  method: POST
                delete:
                  href: /api/v3/users/2
                  title: Delete j.sheppard2
                  method: DELETE
              id: 2
              login: j.sheppard2
              firstName: Jim
              lastName: Sheppard
              email: shep@mail.net
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.977Z'
              updatedAt: '2014-05-21T08:51:20.977Z'
    Available_WatchersModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/work_packages/1/available_watchers
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: User
              _links:
                self:
                  href: /api/v3/users/1
                  title: John Sheppard - j.sheppard
                lock:
                  href: /api/v3/users/1/lock
                  title: Set lock on j.sheppard
                  method: POST
                delete:
                  href: /api/v3/users/1
                  title: Delete j.sheppard
                  method: DELETE
              id: 1
              login: j.sheppard
              firstName: John
              lastName: Sheppard
              email: shep@mail.com
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.286Z'
              updatedAt: '2014-05-21T08:51:20.286Z'
            - _type: User
              _links:
                self:
                  href: /api/v3/users/2
                  title: Jim Sheppard - j.sheppard2
                lock:
                  href: /api/v3/users/2/lock
                  title: Set lock on j.sheppard2
                  method: POST
                delete:
                  href: /api/v3/users/2
                  title: Delete j.sheppard2
                  method: DELETE
              id: 2
              login: j.sheppard2
              firstName: Jim
              lastName: Sheppard
              email: shep@mail.net
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.286Z'
              updatedAt: '2014-05-21T08:51:20.286Z'
    Available_projects_for_queryModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/queries/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/6
                  title: A project
                createWorkPackage:
                  href: /api/v3/projects/6/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/6/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/6/categories
                versions:
                  href: /api/v3/projects/6/versions
              id: 6
              identifier: a_project
              name: A project
              description: Eveniet molestias omnis quis aut qui eum adipisci.
              createdAt: '2015-07-06T13:28:14+00:00'
              updatedAt: '2015-10-01T09:55:02+00:00'
              type: Customer Project
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/14
                  title: Another project
                createWorkPackage:
                  href: /api/v3/projects/14/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/14/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/14/categories
                versions:
                  href: /api/v3/projects/14/versions
              id: 14
              identifier: another_project
              name: Another project
              description: ''
              createdAt: '2016-02-29T12:50:20+00:00'
              updatedAt: '2016-02-29T12:50:20+00:00'
              type: null
    Available_projects_for_time_entriesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/time_entries/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Project...
            - _type: Project...
    Available_projects_for_versionsModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/versions/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/6
                  title: A project
                editWorkPackage:
                  href: /api/v3/work_packages/{id}/form
                  templated: true
                  method: post
                createWorkPackage:
                  href: /api/v3/projects/6/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/6/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/6/categories
                versions:
                  href: /api/v3/projects/6/versions
              id: 6
              identifier: a_project
              name: A project
              description: Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
              createdAt: '2015-07-06T13:28:14+00:00'
              updatedAt: '2015-10-01T09:55:02+00:00'
              type: Customer Project
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/14
                  title: Another project
                createWorkPackage:
                  href: /api/v3/projects/14/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/14/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/14/categories
                versions:
                  href: /api/v3/projects/14/versions
              id: 14
              identifier: another_project
              name: Another project
              description: ''
              createdAt: '2016-02-29T12:50:20+00:00'
              updatedAt: '2016-02-29T12:50:20+00:00'
              type: null
    Available_projects_for_work_packageModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/work_packages/5/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/6
                  title: A project
                editWorkPackage:
                  href: /api/v3/work_packages/{id}/form
                  templated: true
                  method: post
                createWorkPackage:
                  href: /api/v3/projects/6/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/6/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/6/categories
                versions:
                  href: /api/v3/projects/6/versions
              id: 6
              identifier: a_project
              name: A project
              description: Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
              createdAt: '2015-07-06T13:28:14+00:00'
              updatedAt: '2015-10-01T09:55:02+00:00'
              type: Customer Project
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/14
                  title: Another project
                createWorkPackage:
                  href: /api/v3/projects/14/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/14/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/14/categories
                versions:
                  href: /api/v3/projects/14/versions
              id: 14
              identifier: another_project
              name: Another project
              description: ''
              createdAt: '2016-02-29T12:50:20+00:00'
              updatedAt: '2016-02-29T12:50:20+00:00'
              type: null
    Available_relation_candidatesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/14/work_packages
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: WorkPackage
              _links:
                self:
                  href: /api/v3/work_packages/1
              id: 1
              subject: Skipped other properties for brevity
            - _type: WorkPackage
              _links:
                self:
                  href: /api/v3/work_packages/2
              id: 2
              subject: Skipped other properties for brevity
    BudgetModel:
      type: object
      properties:
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This budget

                    **Resource**: Budget
                  readOnly: true
      example:
        _type: Budget
        _links:
          self:
            href: /api/v3/budgets/1
            title: Q3 2015
        id: 1
        subject: Q3 2015
    Budgets_by_ProjectModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/1/budgets
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Budget
              _links:
                self:
                  href: /api/v3/budgets/1
                  title: Q3 2015
              id: 1
              subject: Q3 2015
            - _type: Budget
              _links:
                self:
                  href: /api/v3/budgets/2
                  title: Q4 2015
              id: 2
              subject: Q4 2015
    Categories_by_ProjectModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/11/categories
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/categories/10
                  title: Category with assignee
                project:
                  href: /api/v3/projects/11
                  title: Example project
                defaultAssignee:
                  href: /api/v3/users/42
                  title: John Sheppard
              _type: Category
              id: 10
              name: Foo
            - _links:
                self:
                  href: /api/v3/categories/11
                project:
                  href: /api/v3/projects/11
              _type: Category
              id: 11
              name: Bar
    CategoryModel:
      type: object
      properties:
        id:
          type: integer
          description: Category id
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: Category name
        _links:
          type: object
          required:
            - self
            - project
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This category

                    **Resource**: Category
                  readOnly: true
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project of this category

                    **Resource**: Project
                  readOnly: true
            defaultAssignee:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Default assignee for work packages of this category

                    **Resource**: User
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/categories/10
            title: Category with assignee
          project:
            href: /api/v3/projects/11
            title: Example project
          defaultAssignee:
            href: /api/v3/users/42
            title: John Sheppard
        _type: Category
        id: 10
        name: Foo
    CollectionModel:
      type: object
      required:
        - _type
        - total
        - count
        - _links
      properties:
        _type:
          type: string
          enum:
            - Collection
        total:
          type: integer
          description: The total amount of elements available in the collection.
          minimum: 0
        count:
          type: integer
          description: Actual amount of elements in this response.
          minimum: 0
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This collection resource.

                    **Resource**: Collection
    ConfigurationModel:
      type: object
      properties:
        maximumAttachmentFileSize:
          type: integer
          description: The maximum allowed size of an attachment in Bytes
          readOnly: true
        hostName:
          type: string
          description: The host name configured for the system
          readOnly: true
        perPageOptions:
          type: array
          description: Page size steps to be offered in paginated list UI
          items:
            type: integer
        activeFeatureFlags:
          type: array
          description: The list of all feature flags that are active
          items:
            type: string
    CustomActionModel:
      type: object
      properties:
        _type:
          type: string
          enum:
            - CustomAction
        name:
          type: string
          description: The name of the custom action
        description:
          type: string
          description: The description for the custom action
        _links:
          type: object
          required:
            - self
            - executeImmediately
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This custom action

                    **Resource**: CustomAction
            executeImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Execute this custom action.
      examples:
        - _type: CustomAction
          name: Change project and type
          description: Changes project and type in one go
          _links:
            executeImmediately:
              href: /api/v3/custom_actions/2/execute
              title: Execute Change project and type
              method: post
            self:
              href: /api/v3/custom_actions/2
              title: Change project and type
    CustomOptionModel:
      type: object
      properties:
        id:
          type: integer
          description: The identifier
          readOnly: true
        value:
          type: string
          description: The value defined for this custom option
          readOnly: true
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This custom option.

                    **Resource**: CustomOption
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/custom_options/1
        _type: CustomOption
        value: Foo
    DayCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This days collection

                        **Resource**: DayCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  description: |-
                    The array of days. Each day has a name and a working status
                    indicating if it is a working or a non-working day.
                  items:
                    $ref: '#/components/schemas/DayModel'
      example:
        _type: Collection
        total: 5
        count: 5
        _links:
          self:
            href: /api/v3/days?filters=[{"interval":{"operator":"<>d","values":["2022-04-29","2022-05-03"]}}]
        _embedded:
          elements:
            - _type: Day
              date: '2022-04-29'
              name: Friday
              working: true
              _links:
                self:
                  href: /api/v3/days/2022-04-29
                weekday:
                  href: /api/v3/days/week/5
                  title: Friday
            - _type: Day
              date: '2022-04-30'
              name: Saturday
              working: false
              _links:
                self:
                  href: /api/v3/days/2022-04-30
                nonWorkingReasons:
                  - href: /api/v3/days/week/6
                    title: Saturday
                weekday:
                  href: /api/v3/days/week/6
                  title: Saturday
            - _type: Day
              date: '2022-05-01'
              name: Sunday (Labour day)
              working: false
              _links:
                self:
                  href: /api/v3/days/2022-05-01
                nonWorkingReasons:
                  - href: /api/v3/days/week/7
                    title: Sunday
                  - href: /api/v3/days/non_working/2022-05-01
                    title: Labour day
                weekday:
                  href: /api/v3/days/week/7
                  title: Sunday
            - _type: Day
              date: '2022-05-02'
              name: Monday
              working: true
              _links:
                self:
                  href: /api/v3/days/2022-05-02
                weekday:
                  href: /api/v3/days/week/1
                  title: Monday
            - _type: Day
              date: '2022-05-03'
              name: Tuesday
              working: true
              _links:
                self:
                  href: /api/v3/days/2022-05-03
                weekday:
                  href: /api/v3/days/week/2
                  title: Tuesday
    DayModel:
      type: object
      required:
        - _type
        - date
        - name
        - working
      properties:
        _type:
          type: string
          enum:
            - Day
        date:
          type: string
          format: date
          description: Date of the day.
        name:
          type: string
          description: Descriptive name for the day.
        working:
          type: boolean
          description: '`true` for a working day, `false` otherwise.'
        _links:
          type: object
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/Link'
            nonWorkingReasons:
              type: array
              description: |-
                A list of resources describing why this day is a non-working day.
                Linked resources can be `NonWorkingDay` and `WeekDay` resources.
                This property is absent for working days.
              items:
                $ref: '#/components/schemas/Link'
            weekDay:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: The week day for this day.
      example:
        _type: Day
        date: '2022-12-25'
        name: Sunday (Christmas)
        working: false
        _links:
          self:
            href: /api/v3/days/2022-12-25
          nonWorkingReasons:
            - href: /api/v3/days/week/7
              title: Sunday
            - href: /api/v3/days/non_working/2022-12-25
              title: Christmas
          weekday:
            href: /api/v3/days/week/7
            title: Sunday
    Default_QueryModel:
      type: object
      example:
        _type: Query
        name: default
        filters:
          - _type: StatusQueryFilter
            name: Status
            _links:
              filter:
                href: /api/v3/queries/filters/status
                title: Status
              operator:
                href: /api/v3/queries/operators/o
                title: open
              schema:
                href: /api/v3/queries/filter_instance_schemas/status
              values: []
        public: false
        sums: false
        timelineVisible: false
        timelineZoomLevel: days
        timelineLabels: {}
        highlightingMode: inline
        timestamps:
          - P0D
        showHierarchies: true
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
                - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
            highlightedAttributes: []
        _links:
          self:
            href: /api/v3/queries/default
            title: Default
          results:
            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
            - href: /api/v3/queries/columns/id
              title: ID
            - href: /api/v3/queries/columns/subject
              title: Subject
            - href: /api/v3/queries/columns/type
              title: Type
            - href: /api/v3/queries/columns/status
              title: Status
            - href: /api/v3/queries/columns/priority
              title: Priority
            - href: /api/v3/queries/columns/assignee
              title: Assignee
            - href: /api/v3/queries/columns/updated_at
              title: Updated on
          highlightedAttributes: []
          groupBy:
            href: null
            title: null
          sortBy:
            - href: /api/v3/queries/sort_bys/parent-desc
              title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: METEOR Admin
          project:
            href: null
    Default_Query_for_ProjectModel:
      type: object
      example:
        _type: Query
        name: default
        filters:
          - _type: StatusQueryFilter
            name: Status
            _links:
              filter:
                href: /api/v3/queries/filters/status
                title: Status
              operator:
                href: /api/v3/queries/operators/o
                title: open
              schema:
                href: /api/v3/queries/filter_instance_schemas/status
              values: []
        public: false
        sums: false
        timelineVisible: false
        timelineZoomLevel: days
        showHierarchies: true
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
                - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/projects/42/queries/default
            title: Default
          results:
            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
            - href: /api/v3/queries/columns/id
              title: ID
            - href: /api/v3/queries/columns/subject
              title: Subject
            - href: /api/v3/queries/columns/type
              title: Type
            - href: /api/v3/queries/columns/status
              title: Status
            - href: /api/v3/queries/columns/priority
              title: Priority
            - href: /api/v3/queries/columns/assignee
              title: Assignee
            - href: /api/v3/queries/columns/updated_at
              title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
            - href: /api/v3/queries/sort_bys/parent-desc
              title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: METEOR Admin
          project:
            href: /api/v3/projects/42
            title: Lorem ipsum project
    DocumentModel:
      type: object
      properties:
        id:
          type: integer
          description: Document's id
          readOnly: true
          exclusiveMinimum: 0
        title:
          type: string
          description: The title chosen for the collection of documents
          readOnly: true
        description:
          type: string
          description: A text describing the documents
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The time the document was created at
          readOnly: true
        _links:
          type: object
          required:
            - self
            - project
            - attachments
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This document

                    **Resource**: Document
                  readOnly: true
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the document is in

                    **Resource**: Project
            attachments:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The attachments belonging to the document

                    **Resource**: []Attachment
      example:
        _type: Document
        id: 1
        title: Some other document
        description:
          format: markdown
          raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
        createdAt: '2018-12-10T20:53:39.539Z'
        _links:
          attachments:
            href: /api/v3/documents/1/attachments
          addAttachment:
            href: /api/v3/documents/1/attachments
            method: post
          self:
            href: /api/v3/documents/1
            title: Some document
          project:
            href: /api/v3/projects/19
            title: Some project
        _embedded:
          project:
            _type: Project...
          attachments:
            _type: Collection
            total: 2
            count: 2
            _embedded...:
              elements: []
            _links:
              self:
                href: /api/v3/documents/1/attachments
    DocumentsModel:
      type: object
      example:
        _type: Collection
        total: 2
        count: 2
        pageSize: 30
        offset: 1
        _embedded:
          elements:
            - description:
                format: markdown
                raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
              _type: Document
              id: 1
              title: Some other document
              createdAt: '2018-12-10T20:53:39.966Z'
              _links:
                attachments:
                  href: /api/v3/documents/1/attachments
                addAttachment:
                  href: /api/v3/documents/1/attachments
                  method: post
                self:
                  href: /api/v3/documents/1
                  title: Some document
                project:
                  href: /api/v3/projects/19
                  title: Some project
            - description:
                format: markdown
                raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
              _type: Document
              id: 2
              title: Some other document
              createdAt: '2018-12-10T20:55:54.886Z'
              _links:
                attachments:
                  href: /api/v3/documents/2/attachments
                addAttachment:
                  href: /api/v3/documents/2/attachments
                  method: post
                self:
                  href: /api/v3/documents/2
                  title: Some other document
                project:
                  href: /api/v3/projects/29
                  title: Some other project
        _links:
          self:
            href: /api/v3/documents?offset=1&pageSize=30
          jumpTo:
            href: /api/v3/documents?offset=%7Boffset%7D&pageSize=30
            templated: true
          changeSize:
            href: /api/v3/documents?offset=1&pageSize=%7Bsize%7D
            templated: true
    ErrorResponse:
      type: object
      required:
        - _type
        - errorIdentifier
        - message
      properties:
        _embedded:
          type: object
          properties:
            details:
              type: object
              properties:
                attribute:
                  type: string
                  example: project
        _type:
          type: string
          enum:
            - Error
        errorIdentifier:
          type: string
          example: urn:meteor-org:api:v3:errors:PropertyConstraintViolation
        message:
          type: string
          example: Project can't be blank.
    Example_FormModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/example/form
          validate:
            href: /api/v3/example/form
            method: POST
          previewMarkup:
            href: /api/v3/render/markdown
            method: POST
          commit:
            href: /api/v3/example
            method: PATCH
        _type: Form
        _embedded:
          payload:
            _links:
              status:
                href: /api/v3/statuses/1
            _type: Example
            lockVersion: 5
            subject: An example title
          schema:
            _type: Schema
            _links:
              self:
                href: /api/v3/example/schema
            lockVersion:
              type: Integer
              writable: false
            subject:
              type: String
              minLength: 1
              maxLength: 255
            status:
              _links:
                allowedValues:
                  - href: /api/v3/statuses/1
                    title: New
                  - href: /api/v3/statuses/2
                    title: Closed
              type: Status
              _embedded:
                allowedValues:
                  - _links:
                      self:
                        href: /api/v3/statuses/1
                    _type: Status
                    id: 1
                    name: New
                    position: 1
                    isDefault: true
                    isClosed: false
                    defaultDoneRatio: 0
                    createdAt: '2014-05-21T08:51:20.759Z'
                    updatedAt: '2014-05-21T09:12:00.237Z'
                  - _links:
                      self:
                        href: /api/v3/statuses/2
                    _type: Status
                    id: 2
                    name: Closed
                    position: 2
                    isDefault: false
                    isClosed: true
                    defaultDoneRatio: 100
                    createdAt: '2014-05-21T08:51:20.759Z'
                    updatedAt: '2014-05-21T09:12:00.237Z'
          validationErrors:
            subject:
              _type: Error
              errorIdentifier: urn:meteor-org:api:v3:errors:BadExampleError
              message: For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.
    Example_SchemaModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        _links:
          self:
            href: /api/v3/example/schema
        lockVersion:
          name: Resource Version
          type: Integer
          writable: false
        subject:
          name: Subject
          type: String
          minLength: 1
          maxLength: 255
        status:
          _links:
            allowedValues:
              - href: /api/v3/statuses/1
                title: New
              - href: /api/v3/statuses/2
                title: Closed
          name: Status
          type: Status
          location: _links
          _embedded:
            allowedValues:
              - _links:
                  self:
                    href: /api/v3/statuses/1
                _type: Status
                id: 1
                name: New
                position: 1
                isDefault: true
                isClosed: false
                defaultDoneRatio: 0
                createdAt: '2014-05-21T08:51:20.991Z'
                updatedAt: '2014-05-21T09:12:00.155Z'
              - _links:
                  self:
                    href: /api/v3/statuses/2
                _type: Status
                id: 2
                name: Closed
                position: 2
                isDefault: false
                isClosed: true
                defaultDoneRatio: 100
                createdAt: '2014-05-21T08:51:20.991Z'
                updatedAt: '2014-05-21T09:12:00.155Z'
    FileLinkCollectionReadModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This file links collection

                        **Resource**: FileLinkCollectionReadModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/FileLinkReadModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/work_packages/42/file_links
        _embedded:
          elements:
            - id: 1337
              _type: FileLink
              createdAt: '2021-12-20T13:37:00.211Z'
              updatedAt: '2021-12-20T13:37:00.211Z'
              originData:
                id: 5503
                name: logo.png
                mimeType: image/png
                size: 16042
                createdAt: '2021-12-19T09:42:10.170Z'
                lastModifiedAt: '2021-12-20T14:00:13.987Z'
                createdByName: Luke Skywalker
                lastModifiedByName: Anakin Skywalker
              _links:
                self:
                  href: /api/v3/work_package/17/file_links/1337
                  title: file link
                storage:
                  href: /api/v3/storage/42
                  title: storage
                container:
                  href: /api/v3/work_package/17
                  title: work package
                creator:
                  href: /api/v3/users/33
                  title: Obi-Wan Kenobi
                delete:
                  href: /api/v3/work_package/17/file_links/1337
                  method: delete
                originOpen:
                  href: https://nextcloud.deathstar.rocks/index.php/f?fileid=5503
                staticOriginOpen:
                  href: /api/v3/work_package/17/file_links/1337/open
            - _hint: File Link resource shortened for brevity
              id: 1338
    FileLinkCollectionWriteModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _embedded
          properties:
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/FileLinkWriteModel'
      example:
        _embedded:
          elements:
            - originData:
                id: 5503
                name: logo.png
                mimeType: image/png
                size: 16042
                createdAt: '2021-12-19T09:42:10.170Z'
                lastModifiedAt: '2021-12-20T14:00:13.987Z'
                createdByName: Luke Skywalker
                lastModifiedByName: Anakin Skywalker
              _links:
                storage:
                  href: /api/v3/storage/42
            - _hint: File Link resource shortened for brevity
              id: 1338
    FileLinkOriginDataModel:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Linked file's id on the origin
        name:
          type: string
          description: Linked file's name on the origin
        mimeType:
          type: string
          minLength: 0
          description: |-
            MIME type of the linked file.

            To link a folder entity, the custom MIME type `application/x-op-directory` MUST be provided. Otherwise it defaults back to
            an unknown MIME type.
        size:
          type: integer
          minimum: 0
          description: file size on origin in bytes
        createdAt:
          type: string
          format: date-time
          description: Timestamp of the creation datetime of the file on the origin
        lastModifiedAt:
          type: string
          format: date-time
          description: Timestamp of the datetime of the last modification of the file on the origin
        createdByName:
          type: string
          description: Display name of the author that created the file on the origin
        lastModifiedByName:
          type: string
          description: Display name of the author that modified the file on the origin last
    FileLinkReadModel:
      type: object
      required:
        - id
        - _type
        - originData
        - _links
      properties:
        id:
          type: integer
          description: File link id
        _type:
          type: string
          enum:
            - FileLink
        createdAt:
          type: string
          format: date-time
          description: Time of creation
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the file link
        originData:
          $ref: '#/components/schemas/FileLinkOriginDataModel'
        _embedded:
          type: object
          required:
            - storage
            - container
          properties:
            storage:
              $ref: '#/components/schemas/StorageReadModel'
            container:
              $ref: '#/components/schemas/Work_PackageModel'
        _links:
          type: object
          required:
            - self
            - storage
            - container
            - creator
            - permission
            - originOpen
            - staticOriginOpen
            - originOpenLocation
            - staticOriginOpenLocation
            - staticOriginDownload
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This file link.

                    **Resource**: FileLink
            storage:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The storage resource of the linked file.

                    **Resource**: Storage
            container:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The container the origin file is linked to.

                    Can be one of the following **Resources**:

                    - WorkPackage
            creator:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The creator of the file link.

                    **Resource**: User
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The uri to delete the file link.

                    **Resource**: N/A
            status:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The urn of the user specific file link status on its storage. Can be one of:

                    - urn:meteor-org:api:v3:file-links:permission:ViewAllowed
                    - urn:meteor-org:api:v3:file-links:permission:ViewNotAllowed
                    - urn:meteor-org:api:v3:file-links:NotFound
                    - urn:meteor-org:api:v3:file-links:Error

                    **Resource**: N/A
            originOpen:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The uri to open the origin file on the origin itself.

                    **Resource**: N/A
            staticOriginOpen:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    A static uri to open the origin file on the storage. Responds with a redirect.

                    **Resource**: N/A
            originOpenLocation:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The uri to open the location of origin file on the origin itself.

                    **Resource**: N/A
            staticOriginOpenLocation:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    A static uri to open the location of the origin file on the storage. Responds with a redirect.

                    **Resource**: N/A
            staticOriginDownload:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    A static uri to generate a new download URL from the storage. Responds with a redirect.

                    **Resource**: N/A
      example:
        id: 1337
        _type: FileLink
        createdAt: '2021-12-20T13:37:00.211Z'
        updatedAt: '2021-12-20T13:37:00.211Z'
        originData:
          id: 5503
          name: logo.png
          mimeType: image/png
          size: 16042
          createdAt: '2021-12-19T09:42:10.170Z'
          lastModifiedAt: '2021-12-20T14:00:13.987Z'
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
        _embedded:
          storage:
            id: 1337
            _type: Storage
            name: It's no moon
            createdAt: '2021-12-20T13:37:00.211Z'
            updatedAt: '2021-12-20T13:37:00.211Z'
            _links:
              self:
                href: /api/v3/storages/1337
                title: It's no moon
              type:
                href: urn:meteor-org:api:v3:storages:nextcloud
                title: Nextcloud
              origin:
                href: https://nextcloud.deathstar.rocks/
          container:
            _hint: Work package resource shortened for brevity
            _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/1528
                title: Develop API
              schema:
                href: /api/v3/work_packages/schemas/11-2
            id: 1528
            subject: Develop API
            description:
              format: markdown
              raw: Develop super cool METEOR API.
              html: <p>Develop super cool METEOR API.</p>
            scheduleManually: false
            readonly: false
            startDate: null
            dueDate: null
            createdAt: '2014-08-29T12:40:53.860Z'
            updatedAt: '2014-08-29T12:44:41.036Z'
        _links:
          self:
            href: /api/v3/work_package/17/file_links/1337
          storage:
            href: /api/v3/storage/42
            title: It's no moon
          container:
            href: /api/v3/work_package/17
            title: Develop API
          creator:
            href: /api/v3/users/33
            title: Obi-Wan Kenobi
          delete:
            href: /api/v3/work_package/17/file_links/1337
          status:
            href: urn:meteor-org:api:v3:file-links:permission:View
            title: View
          originOpen:
            href: https://nextcloud.deathstar.rocks/index.php/f/5503?openfile=1
          staticOriginOpen:
            href: /api/v3/file_links/1337/open
          originOpenLocation:
            href: https://nextcloud.deathstar.rocks/index.php/f/5503?openfile=0
          staticOriginOpenLocation:
            href: /api/v3/file_links/1337/open?location=true
          staticOriginDownload:
            href: /api/v3/file_links/1337/download
    FileLinkWriteModel:
      type: object
      required:
        - originData
        - _links
      properties:
        originData:
          $ref: '#/components/schemas/FileLinkOriginDataModel'
        _links:
          oneOf:
            - type: object
              required:
                - storage
              properties:
                storage:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The storage resource of the linked file.

                        **Resource**: Storage
            - type: object
              required:
                - storageUrl
              properties:
                storageUrl:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The storage url the file link references to.

                        **Resource**: N/A
      example:
        originData:
          id: 5503
          name: logo.png
          mimeType: image/png
          size: 16042
          createdAt: '2021-12-19T09:42:10.170Z'
          lastModifiedAt: '2021-12-20T14:00:13.987Z'
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
        _links:
          storageUrl:
            href: https://nextcloud.my-deathstar.org
    Formattable:
      type: object
      required:
        - format
      properties:
        format:
          type: string
          enum:
            - plain
            - markdown
            - custom
          readOnly: true
          description: Indicates the formatting language of the raw text
          example: markdown
        raw:
          type: string
          description: The raw text, as entered by the user
          example: I **am** formatted!
        html:
          type: string
          readOnly: true
          description: The text converted to HTML according to the format
          example: I <strong>am</strong> formatted!
      example:
        format: markdown
        raw: I am formatted!
        html: I am formatted!
    GridCollectionModel:
      allOf:
        - $ref: '#/components/schemas/PaginatedCollectionModel'
        - type: object
          required:
            - _embedded
          properties:
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/GridReadModel'
    GridReadModel:
      type: object
      required:
        - _type
        - id
        - rowCount
        - columnCount
        - widgets
        - _links
      properties:
        _type:
          type: string
          enum:
            - Grid
        id:
          type: integer
          description: Grid's id
          minimum: 1
        rowCount:
          type: integer
          description: The number of rows the grid has
          minimum: 1
        columnCount:
          type: integer
          description: The number of columns the grid has
          minimum: 1
        widgets:
          type: array
          description: |-
            The set of `GridWidget`s selected for the grid.

            # Conditions

            - The widgets must not overlap.
          items:
            $ref: '#/components/schemas/GridWidgetModel'
        createdAt:
          type: string
          format: date-time
          description: The time the grid was created.
        updatedAt:
          type: string
          format: date-time
          description: The time the grid was last updated.
        _links:
          type: object
          required:
            - self
            - scope
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This grid.

                    **Resource**: Grid
            attachments:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The attachment collection of this grid.

                    **Resource**: AttachmentCollection
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Link for adding an attachment to this grid.
            scope:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: The location where this grid is used, usually represented as a relative URL.
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly perform edits on this grid.

                    # Conditions

                    **Permission**: depends on the page the grid is defined for
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Validate edits on the grid via a form resource before committing

                    # Conditions

                    **Permission**: depends on the page the grid is defined for
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Deletes this grid resource.
    GridWidgetModel:
      type: object
      required:
        - _type
        - id
        - identifier
        - startRow
        - endRow
        - startColumn
        - endColumn
      properties:
        _type:
          type: string
          enum:
            - GridWidget
        id:
          type:
            - integer
            - 'null'
          description: The grid widget's unique identifier. Can be null, if a new widget is created within a grid.
          minimum: 1
        identifier:
          type: string
          description: An alternative, human legible, and unique identifier.
        startRow:
          type: integer
          description: The index of the starting row of the widget. The row is inclusive.
          minimum: 1
        endRow:
          type: integer
          description: The index of the ending row of the widget. The row is exclusive.
          minimum: 1
        startColumn:
          type: integer
          description: The index of the starting column of the widget. The column is inclusive.
          minimum: 1
        endColumn:
          type: integer
          description: The index of the ending column of the widget. The column is exclusive.
          minimum: 1
        options:
          type: object
    GridWriteModel:
      type: object
      properties:
        rowCount:
          type: integer
          description: The number of rows the grid has
          minimum: 1
        columnCount:
          type: integer
          description: The number of columns the grid has
          minimum: 1
        widgets:
          type: array
          description: |-
            The set of `GridWidget`s selected for the grid.

            # Conditions

            - The widgets must not overlap.
          items:
            $ref: '#/components/schemas/GridWidgetModel'
        _links:
          type: object
          properties:
            scope:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: The location where this grid is used, usually represented as a relative URL.
    GroupCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This group collection

                        **Resource**: Collection
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/GroupModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/groups
        _embedded:
          elements:
            - _type: Group
              id: 1337
              name: Stormtroopers
              createdAt: '2022-09-23T11:06:36.300Z'
              updatedAt: '2022-09-23T11:06:36.300Z'
              _links:
                self:
                  href: /api/v3/groups/9
                  title: Stormtroopers
                delete:
                  href: /api/v3/group/9
                  method: delete
                memberships:
                  href: /api/v3/memberships?filters=[{"principal":{"operator":"=","values":["9"]}}]
                  title: Memberships
                updateImmediately:
                  href: /api/v3/group/9
                  method: patch
                members:
                  - href: /api/v3/users/363
                    title: ST-097E
                  - href: /api/v3/users/60
                    title: ST-C-334
            - _hint: Group resource shortened for brevity
              id: 1338
    GroupModel:
      allOf:
        - $ref: '#/components/schemas/PrincipalModel'
        - type: object
          required:
            - _type
            - _embedded
          properties:
            _type:
              type: string
              enum:
                - Group
            _embedded:
              type: object
              properties:
                members:
                  type: array
                  description: Embedded list of members.
                  items:
                    - $ref: '#/components/schemas/UserModel'
            _links:
              type: object
              properties:
                members:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Link'
                      - description: |-
                          A member of the group

                          # Conditions:

                          - user has permission `manage_members` in any project

                          **Resource**: User
                delete:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        An href to delete the group.

                        # Conditions:

                        - `admin`
                updateImmediately:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        An href to update the group.

                        # Conditions:

                        - `admin`

                        **Resource**: Group
    GroupWriteModel:
      type: object
      properties:
        name:
          type: string
          description: The new group name.
        _links:
          type: object
          properties:
            members:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A new member for the group.

                      **Resource**: User
      example:
        name: Emperor's guard
        _links:
          members:
            - href: /api/v3/users/42
            - href: /api/v3/users/43
            - href: /api/v3/users/44
    HelpTextCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This help text collection

                        **Resource**: HelpTextCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/HelpTextModel'
      example:
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: HelpText
              _links:
                self:
                  href: /api/v3/help_texts/1
              id: 1
              attribute: id
              attributeCaption: ID
              scope: WorkPackage
              helpText:
                format: markdown
                raw: Help text for id attribute.
                html: <p>Help text for id attribute.</p>
            - _type: HelpText
              _links:
                self:
                  href: /api/v3/help_texts/2
              id: 2
              attribute: status
              attributeCaption: Status
              scope: WorkPackage
              helpText:
                format: markdown
                raw: Help text for status attribute.
                html: <p>Help text for status attribute.</p>
        _links:
          self:
            href: /api/v3/help_texts
    HelpTextModel:
      type: object
      required:
        - _type
        - id
        - attribute
        - scope
        - helpText
        - _links
      properties:
        _type:
          type: string
          enum:
            - HelpText
        id:
          type: integer
          format: int64
          minimum: 1
        attribute:
          type: string
          description: The attribute the help text is assigned to.
        scope:
          type: string
          enum:
            - WorkPackage
            - Project
        helpText:
          $ref: '#/components/schemas/Formattable'
        _links:
          type: object
          required:
            - self
            - editText
            - attachments
            - addAttachment
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This help text resource.

                    **Resource**: HelpText
            editText:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Edit the help text entry.

                    **Resource**: text/html
            attachments:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The attachment collection of this help text.

                    **Resource**: AttachmentCollection
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Add an attachment to the help text.
      example:
        _type: HelpText
        id: 1
        attribute: id
        scope: WorkPackage
        helpText:
          format: markdown
          raw: Help text for id attribute.
          html: <p>Help text for id attribute.</p>
        _links:
          self:
            href: /api/v3/help_texts/1
          editText:
            href: /admin/attribute_help_texts/1/edit
            type: text/html
          attachments:
            href: /api/v3/help_texts/1/attachments
          addAttachments:
            href: /api/v3/help_texts/1/attachments
            method: post
    Link:
      type: object
      required:
        - href
      properties:
        href:
          type:
            - string
            - 'null'
          description: URL to the referenced resource (might be relative)
        title:
          type: string
          description: Representative label for the resource
        templated:
          type: boolean
          default: false
          description: If true the href contains parts that need to be replaced by the client
        method:
          type: string
          default: GET
          description: The HTTP verb to use when requesting the resource
        payload:
          type: object
          description: The payload to send in the request to achieve the desired result
        identifier:
          type: string
          description: An optional unique identifier to the link object
        type:
          type: string
          description: The MIME-Type of the returned resource.
      example:
        href: /api/v3/work_packages
        method: POST
    List_actionsModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/actions
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/actions/work_packages/create
                  title: Add work package
              _type: Action
              id: work_packages/create
              name: Add work package
              description: Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission
              modules:
                - work_packages
            - _links:
                self:
                  href: /api/v3/actions/work_packages/assign_versions
                  title: Assigning version
              _type: Action
              id: work_packages/assign_versions
              name: Assign version
              description: Assigning a work package to a version when creating/updating a work package. Only principals having this permission can assign a value to the version property of the work package resource.
              modules:
                - work_packages
                - versions
    List_available_parent_project_candidatesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/available_parent_projects?of=123
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/6
                  title: A project
                createWorkPackage:
                  href: /api/v3/projects/6/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/6/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/6/categories
                versions:
                  href: /api/v3/projects/6/versions
                status:
                  href: /api/v3/project_statuses/on_track
                  title: On track
              id: 6
              identifier: a_project
              name: A project
              active: true
              statusExplanation:
                format: markdown
                raw: Everything **fine**
                html: <p>Everything <strong>fine</strong></p>
              public: false
              description:
                format: markdown
                raw: Lorem **ipsum** dolor sit amet
                html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
              createdAt: '2015-07-06T13:28:14+00:00'
              updatedAt: '2015-10-01T09:55:02+00:00'
              type: Customer Project
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/14
                  title: Another project
                createWorkPackage:
                  href: /api/v3/projects/14/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/14/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/14/categories
                versions:
                  href: /api/v3/projects/14/versions
                status:
                  href: /api/v3/project_statuses/on_track
                  title: On track
              id: 14
              identifier: another_project
              name: Another project
              active: true
              statusExplanation:
                format: markdown
                raw: Everything super **fine**
                html: <p>Everything super <strong>fine</strong></p>
              public: true
              description:
                format: markdown
                raw: ''
                html: ''
              createdAt: '2016-02-29T12:50:20+00:00'
              updatedAt: '2016-02-29T12:50:20+00:00'
              type: null
    List_capabilitiesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/capabilities
          changeSize:
            href: /api/v3/capabilities?pageSize={size}
            templated: true
          jumpTo:
            href: /api/v3/capabilities?offset={offset}
            templated: true
        total: 4
        count: 4
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/capabilities/work_packages/create/p123-567
                action:
                  href: /api/v3/actions/work_packages/create
                  title: Add work package
                context:
                  href: /api/v3/projects/123
                  title: A project
                principal:
                  href: /api/v3/users/567
                  title: Some user
              _type: Capability
              id: work_packages/create/p123-567
            - _links:
                self:
                  href: /api/v3/capabilities/work_packages/assignee/p123-567
                action:
                  href: /api/v3/actions/work_packages/assignee
                context:
                  href: /api/v3/projects/123
                  title: A project
                principal:
                  href: /api/v3/users/567
                  title: Some user
              _type: Capability
              id: work_packages/assignee/p123-567
            - _links:
                self:
                  href: /api/v3/capabilities/memberships/create/p345-821
                  title: Create members
                action:
                  href: /api/v3/actions/memberships/create
                context:
                  href: /api/v3/projects/345
                  title: A project
                principal:
                  href: /api/v3/users/821
                  title: Some user
              _type: Capability
              id: memberships/create/p345-821
            - _links:
                self:
                  href: /api/v3/capabilities/users/delete/g-567
                  title: Delete user
                context:
                  href: /api/v3/capabilities/context/global
                  title: Global
                principal:
                  href: /api/v3/users/567
                  title: Some user
              _type: Capability
              id: users/delete/g-567
    List_of_NewsModel:
      type: object
      example:
        _type: Collection
        total: 78
        count: 2
        pageSize: 2
        offset: 1
        _embedded:
          elements:
            - _type: News
              id: 1
              title: asperiores possimus nam doloribus ab
              summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.
              description:
                format: markdown
                raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
                html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
              createdAt: '2015-03-20T12:57:01.509Z'
              _links:
                self:
                  href: /api/v3/news/1
                  title: asperiores possimus nam doloribus ab
                project:
                  href: /api/v3/projects/1
                  title: Seeded Project
                author:
                  href: /api/v3/users/2
                  title: Peggie Feeney
            - _type: News
              id: 2
              title: terminatio tutamen. Officia adeptio sp
              summary: Consequatur sequi surculus creo tui aequitas.
              description:
                format: markdown
                raw: Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.
                html: <p>Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.</p>
              createdAt: '2015-03-20T12:57:01.509Z'
              _links:
                self:
                  href: /api/v3/news/2
                  title: terminatio tutamen. Officia adeptio sp
                project:
                  href: /api/v3/projects/1
                  title: Seeded Project
                author:
                  href: /api/v3/users/2
                  title: Peggie Feeney
        _links:
          self:
            href: /api/v3/news?offset=1&pageSize=2
          jumpTo:
            href: /api/v3/news?offset=%7Boffset%7D&pageSize=2
            templated: true
          changeSize:
            href: /api/v3/news?offset=1&pageSize=%7Bsize%7D
            templated: true
          nextByOffset:
            href: /api/v3/news?offset=2&pageSize=2
    List_projects_by_versionModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/versions/2/projects
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
            - _type: Project
              _links:
                self:
                  href: /api/v3/projects/1
                  title: Lorem
                categories:
                  href: /api/v3/projects/1/categories
                versions:
                  href: /api/v3/projects/1/versions
                status:
                  href: /api/v3/project_statuses/on_track
                  title: On track
              id: 1
              identifier: project_identifier
              name: Project example
              description:
                format: markdown
                raw: Lorem **ipsum** dolor sit amet
                html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
              active: true
              statusExplanation:
                format: markdown
                raw: Everything **fine**
                html: <p>Everything <strong>fine</strong></p>
              createdAt: '2014-05-21T08:51:20.142Z'
              updatedAt: '2014-05-21T08:51:20.142Z'
    MeetingModel:
      type: object
      required:
        - title
      properties:
        id:
          type: integer
          description: Identifier of this meeting
          readOnly: true
          exclusiveMinimum: 0
        title:
          type: string
          description: The meeting's title
        _links:
          type: object
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This meeting

                    **Resource**: Meeting
                  readOnly: true
            author:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user having created the meeting

                    **Resource**: User
                  readOnly: true
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the meeting is in

                    **Resource**: Project
            attachments:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The attachment collection of this grid.

                    **Resource**: AttachmentCollection           
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Attach a file to the meeting

                    # Conditions

                    **Permission**: edit meeting
                  readOnly: true
      example:
        _type: Meeting
        id: 72
        lockVersion: 5
        title: A meeting
        startTime: '2014-05-21T08:00:00.000Z'
        endTime: '2014-05-21T10:00:00.000Z'
        duration: 120
        createdAt: '2014-05-21T08:51:20.396Z'
        updatedAt: '2014-05-21T09:14:02.776Z'
        _embedded:
          project:
            _type: Project...
            id: 12
          author:
            _type: User...
            id: 2
        _links:
          addAttachment:
            href: /api/v3/meetings/72/attachments
            method: post
          attachments:
            href: /api/v3/meetings/72/attachments
          project:
            href: /api/v3/projects/12
            title: some project
          author:
            href: /api/v3/users/2
            title: Peggie Feeney
          self:
            href: /api/v3/meetings/72
    MarkdownModel:
      type: string
      format: html
      example: <p>Hello world! <a href="http://example.com">This</a> <strong>is</strong> markdown!</p>
    MembershipCollectionModel:
      allOf:
        - $ref: '#/components/schemas/PaginatedCollectionModel'
        - type: object
          required:
            - _embedded
          properties:
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/MembershipReadModel'
    MembershipFormModel:
      type: object
      required:
        - _type
        - _embedded
        - _links
      properties:
        _type:
          type: string
          enum:
            - Form
        _embedded:
          type: object
          required:
            - payload
            - schema
            - validationError
          properties:
            payload:
              $ref: '#/components/schemas/MembershipWriteModel'
            schema:
              $ref: '#/components/schemas/MembershipSchemaModel'
            validationError:
              type: object
              properties:
                base:
                  $ref: '#/components/schemas/ErrorResponse'
                principal:
                  $ref: '#/components/schemas/ErrorResponse'
                roles:
                  $ref: '#/components/schemas/ErrorResponse'
        _links:
          type: object
          required:
            - self
            - validate
            - commit
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This form request.

                    **Resource**: Form
            validate:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: The endpoint to validate the membership payload.
            commit:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The endpoint to create the membership with the same payload, as sent to the form.

                    **Resource**: Membership
    MembershipReadModel:
      type: object
      required:
        - _type
        - id
        - createdAt
        - updatedAt
        - _links
      properties:
        _type:
          type: string
          enum:
            - Membership
        id:
          type: integer
          description: The membership's id
          minimum: 1
        createdAt:
          type: string
          format: date-time
          description: The time the membership was created.
        updatedAt:
          type: string
          format: date-time
          description: The time the membership was last updated.
        _embedded:
          type: object
          properties:
            project:
              $ref: '#/components/schemas/ProjectModel'
            principal:
              anyOf:
                - $ref: '#/components/schemas/UserModel'
                - $ref: '#/components/schemas/GroupModel'
            roles:
              type: array
              items:
                $ref: '#/components/schemas/RoleModel'
        _links:
          type: object
          required:
            - self
            - schema
            - project
            - principal
            - roles
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This membership.

                    **Resource**: Membership
            schema:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This membership schema.

                    **Resource**: Schema
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The endpoint for updating the membership.

                    # Conditions

                    **Permission**: manage_members
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The endpoint for updating the membership without form validation.

                    # Conditions

                    **Permission**: manage_members
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the membership is related to.

                    **Resource**: Project
            principal:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The principal the membership is related to.

                    **Resource**: Principal
            roles:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A role the principal has.

                      **Resource**: Role
    MembershipSchemaModel:
      allOf:
        - $ref: '#/components/schemas/SchemaModel'
        - type: object
          required:
            - id
            - createdAt
            - updatedAt
            - notificationMessage
            - project
            - principal
            - roles
          properties:
            id:
              $ref: '#/components/schemas/SchemaPropertyModel'
            createdAt:
              $ref: '#/components/schemas/SchemaPropertyModel'
            updatedAt:
              $ref: '#/components/schemas/SchemaPropertyModel'
            notificationMessage:
              $ref: '#/components/schemas/SchemaPropertyModel'
            project:
              $ref: '#/components/schemas/SchemaPropertyModel'
            principal:
              $ref: '#/components/schemas/SchemaPropertyModel'
            roles:
              $ref: '#/components/schemas/SchemaPropertyModel'
    MembershipWriteModel:
      type: object
      required:
        - _links
      properties:
        _links:
          type: object
          properties:
            principal:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The principal that is to get a membership.

                    **Resource**: Principal
            roles:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A role the principal has.

                      **Resource**: Role
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project that is to get a membership. If no project is given, the principal's membership is supposed
                    to be global.

                    **Resource**: Project
        _meta:
          type: object
          properties:
            notificationMessage:
              allOf:
                - $ref: '#/components/schemas/Formattable'
                - description: A customised notification message, which will overwrite the standard notification.
            sendNotification:
              type: boolean
              description: Set to false, if no notification should get sent.
              default: true
    NewsModel:
      type: object
      properties:
        id:
          type: integer
          description: News' id
          readOnly: true
          exclusiveMinimum: 0
        title:
          type: string
          description: The headline of the news
          readOnly: true
        summary:
          type: string
          description: A short summary
          readOnly: true
        description:
          type: string
          description: The main body of the news with all the details
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The time the news was created at
          readOnly: true
        _links:
          type: object
          required:
            - self
            - project
            - author
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This news

                    **Resource**: News
                  readOnly: true
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the news is situated in

                    **Resource**: Project
            author:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user having created the news

                    **Resource**: User
                  readOnly: true
      example:
        _type: News
        id: 1
        title: asperiores possimus nam doloribus ab
        summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.
        description:
          format: markdown
          raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
        createdAt: '2015-03-20T12:57:01.908Z'
        _links:
          self:
            href: /api/v3/news/1
            title: asperiores possimus nam doloribus ab
          project:
            href: /api/v3/projects/1
            title: A project
          author:
            href: /api/v3/users/2
            title: Peggie Feeney
        _embedded:
          project:
            _type: Project...
          author:
            _type: User...
    NonWorkingDayCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This non working days collection

                        **Resource**: NonWorkingDayCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  description: The array of non working days. Each day has a name and a date.
                  items:
                    $ref: '#/components/schemas/NonWorkingDayModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/non_working?filters=[{"interval":{"operator":"<>d","values":["2022-04-29","2022-12-24"]}}]
        _embedded:
          elements:
            - _type: NonWorkingDay
              date: '2022-12-24'
              name: Christmas Evening
              _links:
                self:
                  href: /api/v3/days/non_working/2022-04-24
                weekday:
                  href: /api/v3/days/week/6
                  title: Saturday
            - _type: NonWorkingDay
              date: '2022-05-01'
              name: Labour day
              _links:
                self:
                  href: /api/v3/days/non_working/2022-05-01
                weekday:
                  href: /api/v3/days/week/7
                  title: Sunday
    NonWorkingDayModel:
      type: object
      required:
        - _type
        - date
        - name
      properties:
        _type:
          type: string
          enum:
            - NonWorkingDay
        date:
          type: string
          format: date
          description: Date of the non-working day.
        name:
          type: string
          description: Descriptive name for the non-working day.
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This non-working day.

                    **Resource**: NonWorkingDay
      example:
        _type: NonWorkingDay
        date: '2022-12-25'
        name: Christmas
        _links:
          self:
            href: /api/v3/days/non_working/2022-12-25
            title: Christmas
    NotificationCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This notification collection

                        **Resource**: NotificationCollectionModel
                jumpTo:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The notification collection at another offset

                        **Resource**: NotificationCollectionModel
                changeSize:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The notification collection with another size

                        **Resource**: NotificationCollectionModel
            _embedded:
              type: object
              required:
                - elements
                - detailsSchemas
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/NotificationModel'
                detailsSchemas:
                  type: array
                  items:
                    $ref: '#/components/schemas/SchemaModel'
    NotificationModel:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Notification
        id:
          type: integer
          description: Notification id
          minimum: 1
        reason:
          type: string
          description: The reason for the notification
          enum:
            - assigned
            - commented
            - created
            - dateAlert
            - mentioned
            - prioritized
            - processed
            - responsible
            - subscribed
            - scheduled
            - watched
        readIAN:
          type: boolean
          description: Whether the notification is marked as read
        details:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ValuesPropertyModel'
          description: A list of objects including detailed information about the notification.
        createdAt:
          type: string
          format: date-time
          description: The time the notification was created at
        updatedAt:
          type: string
          format: date-time
          description: The time the notification was last updated
        _embedded:
          type: object
          required:
            - project
            - resource
          properties:
            actor:
              $ref: '#/components/schemas/UserModel'
            project:
              $ref: '#/components/schemas/ProjectModel'
            activity:
              $ref: '#/components/schemas/ActivityModel'
            resource:
              oneOf:
                - $ref: '#/components/schemas/Work_PackageModel'
        _links:
          type: object
          required:
            - self
            - project
            - actor
            - activity
            - resource
            - details
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This notification

                    **Resource**: Notification
            readIAN:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Request to mark the notification as read. Only available if the notification is currently unread.
            unreadIAN:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Request to mark the notification as unread. Only available if the notification is currently read.
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the notification originated in

                    **Resource**: Project
            actor:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user that caused the notification. This might be null in
                    case no user triggered the notification.

                    **Resource**: User
            resource:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The linked resource of the notification, if any.

                    **Resource**: Polymorphic
            activity:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The journal activity, if the notification originated from a journal entry. This might be null in
                    case no activity triggered the notification.

                    **Resource**: Activity
            details:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A list of objects including detailed information about the notification. The contents of
                      and type of this can vary widely between different notification reasons.

                      **Resource**: Polymorphic (e.g. Values::Property)
    OAuthApplicationReadModel:
      type: object
      required:
        - id
        - _type
        - name
        - clientId
        - confidential
        - _link
      properties:
        id:
          type: integer
          minimum: 1
        _type:
          type: string
          enum:
            - OAuthApplication
        name:
          type: string
          description: The name of the OAuth 2 application
        clientId:
          type: string
          description: OAuth 2 client id
        clientSecret:
          type: string
          description: OAuth 2 client secret. This is only returned when creating a new OAuth application.
        confidential:
          type: boolean
          description: true, if OAuth 2 credentials are confidential, false, if no secret is stored
        createdAt:
          type: string
          format: date-time
          description: The time the OAuth 2 Application was created at
        updatedAt:
          type: string
          format: date-time
          description: The time the OAuth 2 Application was last updated
        scopes:
          type: array
          description: An array of the scopes of the OAuth 2 Application
          items:
            type: string
        _links:
          type: object
          required:
            - self
            - owner
            - redirectUri
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This OAuth application

                    **Resource**: OAuthApplication
            owner:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user that created the OAuth application.

                    **Resource**: User
            integration:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The resource that integrates this OAuth application into itself. Currently, only `Storage` resources are
                    able to create and maintain own OAuth application.

                    **Resource**: Storage
            redirectUri:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The redirect URI of the OAuth application

                    **Resource**: N/A
      example:
        id: 1337
        _type: OauthClientCredentials
        name: Vader's secure OAuth app
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        confidential: true
        createdAt: '2022-12-07T12:56:42.626Z'
        updatedAt: '2022-12-07T12:56:42.626Z'
        scopes:
          - api_v3
        _links:
          self:
            href: /api/v3/oauth_applications/1337
          owner:
            href: /api/v3/users/13
            title: Darth Vader
          integration:
            href: /api/v3/storages/42
            title: Death Star Cloud
          redirectUri:
            href: https://death-star.cloud.tools/index.php/apps/integration_openproject/oauth-redirect
    OAuthClientCredentialsReadModel:
      type: object
      required:
        - id
        - _type
        - clientId
        - confidential
        - _links
      properties:
        id:
          type: integer
          minimum: 1
        _type:
          type: string
          enum:
            - OAuthClientCredentials
        clientId:
          type: string
          description: OAuth 2 client id
        confidential:
          type: boolean
          description: true, if OAuth 2 credentials are confidential, false, if no secret is stored
        createdAt:
          type: string
          format: date-time
          description: The time the OAuth client credentials were created at
        updatedAt:
          type: string
          format: date-time
          description: The time the OAuth client credentials were last updated
        _links:
          type: object
          required:
            - self
            - integration
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This OAuth Client Credentials object

                    **Resource**: OAuthClientCredentials
            integration:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The resource that integrates this OAuth client credentials. Currently, only `Storage` resources are
                    able to contain OAuth client credentials.

                    **Resource**: Storage
      example:
        id: 1337
        _type: OAuthClientCredentials
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        confidential: true
        createdAt: '2022-12-07T12:56:42.836Z'
        updatedAt: '2022-12-07T12:56:42.836Z'
        _link:
          self:
            href: /api/v3/oauth_client_credentials/1337
          integration:
            href: /api/v3/storages/42
            title: Death Star Cloud
    OAuthClientCredentialsWriteModel:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          type: string
          description: OAuth 2 client id
        clientSecret:
          type: string
          description: OAuth 2 client secret
      example:
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        clientSecret: LSk52mn4jmtSYTgH0NzDj-u2z5LMpT8bsS0BouwJQQw
    PaginatedCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - pageSize
            - offset
          properties:
            pageSize:
              type: integer
              description: Amount of elements that a response will hold.
              minimum: 0
            offset:
              type: integer
              description: The page number that is requested from paginated collection.
              minimum: 1
            _links:
              type: object
              required:
                - jumpTo
                - changeSize
              properties:
                jumpTo:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Templated link to another page offset.

                        **Resource**: Collection
                changeSize:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Templated link for another page size.

                        **Resource**: Collection
    PlaceholderUserCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This placeholder user collection

                        **Resource**: Collection
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/PlaceholderUserModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/placeholder_users
        _embedded:
          elements:
            - _hint: PlaceholderUser resource shortened for brevity
              _type: PlaceholderUser
              id: 1337
            - _hint: PlaceholderUser resource shortened for brevity
              _type: PlaceholderUser
              id: 1338
    PlaceholderUserCreateModel:
      type: object
      properties:
        name:
          type: string
          description: The new name of the placeholder user to be created.
    PlaceholderUserModel:
      allOf:
        - $ref: '#/components/schemas/PrincipalModel'
        - type: object
          required:
            - _type
          properties:
            _type:
              type: string
              enum:
                - PlaceholderUser
            status:
              type: string
              description: |-
                The current activation status of the placeholder user.

                # Conditions

                - User has `manage_placeholder_user` permission globally
            _links:
              type: object
              required:
                - showUser
              properties:
                showUser:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: A relative path to show the placeholder user in the web application.
                delete:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        An href to delete the placeholder user.

                        # Conditions:

                        - `manage_placeholder_user`
                updateImmediately:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        An href to update the placeholder user.

                        # Conditions:

                        - `manage_placeholder_user`

                        **Resource**: PlaceholderUser
    Plain_TextModel:
      type: string
      format: html
      example: <p>Hello world! This *is* plain text!</p>
    PostModel:
      type: object
      required:
        - subject
      properties:
        id:
          type: integer
          description: Identifier of this post
          readOnly: true
          exclusiveMinimum: 0
        subject:
          type: string
          description: The post's subject
        _links:
          type: object
          properties:
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Attach a file to the post

                    # Conditions

                    **Permission**: edit messages
                  readOnly: true
      example:
        _type: Post
        id: 1
        subject: A post with a subject
        _embedded:
          project:
            _type: Project...
        _links:
          self:
            href: /api/v3/posts/1
          attachments:
            href: /api/v3/posts/1/attachments
          addAttachment:
            href: /api/v3/posts/1/attachments
            method: post
          project:
            href: /api/v3/projects/1
            title: A project with a title
    PrincipalCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
                - representations
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This principal collection

                        **Resource**: Collection
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    anyOf:
                      - $ref: '#/components/schemas/UserModel'
                      - $ref: '#/components/schemas/PlaceholderUserModel'
                      - $ref: '#/components/schemas/GroupModel'
      example:
        _type: Collection
        total: 3
        count: 3
        _links:
          self:
            href: /api/v3/principals
        _embedded:
          elements:
            - _hint: User resource shortened for brevity
              _type: User
              id: 1337
            - _hint: Group resource shortened for brevity
              _type: Group
              id: 1338
            - _hint: PlaceholderUser resource shortened for brevity
              _type: PlaceholderUser
              id: 1339
    PrincipalModel:
      type: object
      required:
        - _type
        - id
        - name
        - _links
      properties:
        _type:
          type: string
          enum:
            - User
            - Group
            - PlaceholderUser
        id:
          type: integer
          description: The principal's unique identifier.
          minimum: 1
        name:
          type: string
          description: The principal's display name, layout depends on instance settings.
        createdAt:
          type: string
          format: date-time
          description: Time of creation
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the principal
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This principal resource.

                    **Resource**: User|Group|PlaceholderUser
            memberships:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    An href to the collection of the principal's memberships.

                    # Conditions:

                    - user has permission `view_members` or `manage_members` in any project

                    **Resource**: Collection
    PrioritiesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/priorities
        _type: Collection
        total: 4
        count: 4
        _embedded:
          elements:
            - _type: Priority
              _links:
                self:
                  href: /api/v3/priorities/1
                  title: Low
              id: 1
              name: Low
              position: 1
              isDefault: false
              isActive: true
            - _type: Priority
              _links:
                self:
                  href: /api/v3/priorities/2
                  title: Normal
              id: 2
              name: Normal
              position: 2
              isDefault: true
              isActive: true
            - _type: Priority
              _links:
                self:
                  href: /api/v3/priorities/3
                  title: High
              id: 3
              name: High
              position: 3
              isDefault: false
              isActive: true
            - _type: Priority
              _links:
                self:
                  href: /api/v3/priorities/4
                  title: Immediate
              id: 4
              name: Immediate
              position: 5
              isDefault: false
              isActive: true
    PriorityModel:
      type: object
      properties:
        id:
          type: integer
          description: Priority id
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: Priority name
          readOnly: true
          minLength: 1
        position:
          type: integer
          description: Sort index of the priority
          readOnly: true
          exclusiveMinimum: 0
        isDefault:
          type: boolean
          description: Indicates whether this is the default value
          readOnly: true
        isActive:
          type: boolean
          description: Indicates whether the priority is available
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This priority

                    **Resource**: Priority
                  readOnly: true
      example:
        _type: Priority
        _links:
          self:
            href: /api/v3/priorities/1
            title: Low
        id: 1
        name: Low
        position: 1
        isDefault: false
        isActive: true
    ProjectCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
                - representations
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This project collection

                        **Resource**: ProjectStorageCollectionModel
                representations:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Link'
                      - description: A project collection representation in a specific file format.
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProjectModel'
    ProjectModel:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Project
        id:
          type: integer
          description: Projects' id
          minimum: 1
        identifier:
          type: string
        name:
          type: string
        active:
          type: boolean
          description: Indicates whether the project is currently active or already archived
        statusExplanation:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: A text detailing and explaining why the project has the reported status
        public:
          type: boolean
          description: Indicates whether the project is accessible for everybody
        description:
          $ref: '#/components/schemas/Formattable'
        createdAt:
          type: string
          format: date-time
          description: Time of creation. Can be writable by admins with the `apiv3_write_readonly_attributes` setting enabled.
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the project
        _links:
          type: object
          required:
            - self
            - categories
            - types
            - versions
            - memberships
            - workPackages
          properties:
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Form endpoint that aids in updating this project

                    # Conditions

                    **Permission**: edit project
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly update this project

                    # Conditions

                    **Permission**: edit project
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Delete this project

                    # Conditions

                    **Permission**: admin
            createWorkPackage:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Form endpoint that aids in preparing and creating a work package

                    # Conditions

                    **Permission**: add work packages
            createWorkPackageImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly creates a work package in the project

                    # Conditions

                    **Permission**: add work packages
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This project

                    **Resource**: Project
            categories:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Categories available in this project

                    **Resource**: Collection
            types:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Types available in this project

                    **Resource**: Collection

                    # Conditions

                    **Permission**: view work packages or manage types
            versions:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Versions available in this project

                    **Resource**: Collection

                    # Conditions

                    **Permission**: view work packages or manage versions
            memberships:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Memberships in the  project

                    **Resource**: Collection

                    # Conditions

                    **Permission**: view members
            workPackages:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Work Packages of this project

                    **Resource**: Collection
            parent:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Parent project of the project

                    **Resource**: Project

                    # Conditions

                    **Permission** edit project
            status:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Denotes the status of the project, so whether the project is on track, at risk or is having trouble.

                    **Resource**: ProjectStatus

                    # Conditions

                    **Permission** edit project
            storages:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      The link to a storage that is active for this project.

                      **Resource**: Storage

                      # Conditions

                      **Permission**: view_file_links
            projectStorages:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project storage collection of this project.

                    **Resource**: Collection

                    # Conditions

                    **Permission**: view_file_links
            ancestors:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      The link to an ancestor project.

                      **Resource**: Project
    ProjectStorageCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This file links collection

                        **Resource**: ProjectStorageCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProjectStorageModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/project_storages?filters=%5B%7B%22storage%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2281%22%5D%7D%7D%5D
        _embedded:
          elements:
            - id: 1337
              _type: ProjectStorage
              _hint: project storage resource shortened for brevity
            - id: 1338
              _type: ProjectStorage
              _hint: File Link resource shortened for brevity
    ProjectStorageModel:
      type: object
      required:
        - _type
        - id
        - projectFolderMode
        - createdAt
        - updatedAt
      properties:
        _type:
          type: string
          enum:
            - ProjectStorage
        id:
          type: integer
          description: The project storage's id
          minimum: 1
        projectFolderMode:
          type: string
          enum:
            - inactive
            - manual
        createdAt:
          type: string
          format: date-time
          description: Time of creation
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the project storage
        _links:
          type: object
          required:
            - self
            - creator
            - storage
            - project
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This project storage.

                    **Resource**: ProjectStorage
            creator:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user who created the project storage.

                    **Resource**: User
            storage:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The storage resource, that is linked to a project with this project storage.

                    **Resource**: Storage
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project resource, that is linked to a storage with this project storage.

                    **Resource**: Project
            projectFolder:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The directory on the storage that is used as a project folder.

                    **Resource**: StorageFile

                    # Conditions

                    Only provided, if the `projectFolderMode` is `manual` or `automatic`.
            open:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: A link to open project strorage.
            openWithConnectionEnsured:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    A link to open project storage with making sure user has access to it.

                    # Conditions

                    If the storage has not been configured(oauth client is missing, for instance), then the link is null.
      example:
        _type: ProjectStorage
        id: 1337
        projectFolderMode: manual
        createdAt: '2023-01-20T14:30:00.368Z'
        updatedAt: '2023-05-23T11:57:48.618Z'
        _links:
          self:
            href: /api/v3/project_storages/23
          projectFolder:
            href: /api/v3/storages/81/files/30
          creator:
            title: Darth Vader
            href: /api/v3/users/3
          project:
            title: Death Star 3.0
            href: /api/v3/projects/11
          storage:
            title: Palpatine's Data Vault
            href: /api/v3/storages/81
          open:
            href: /api/v3/storages/81/open
          openWithConnectionEnsured:
            href: /oauth_clients/123/ensure_connection?destination_url=https%3A%2F%2Fopenproject.local%2Fprojects%2Fdeath-star%2Fproject_storages%2F23%2Fopen&storage_id=81
    Projects_schemaModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        identifier:
          type: String
          name: Identifier
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 100
        description:
          type: Formattable
          name: Description
          required: false
          hasDefault: false
          writable: true
        public:
          type: Boolean
          name: Public
          required: true
          hasDefault: false
          writable: true
        active:
          type: Boolean
          name: Active
          required: true
          hasDefault: true
          writable: true
        status:
          type: ProjectStatus
          name: Status
          required: false
          hasDefault: true
          writable: true
          _links:
            allowedValues:
              - href: /api/v3/project_statuses/on_track
                title: On track
              - href: /api/v3/project_statuses/at_risk
                title: At risk
              - href: /api/v3/project_statuses/off_track
                title: Off track
        statusExplanation:
          type: Formattable
          name: Status explanation
          required: false
          hasDefault: false
          writable: true
        parent:
          type: Project
          name: Subproject of
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        customField30:
          type: Integer
          name: Integer project custom field
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField31:
          type: CustomOption
          name: List project custom field
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        customField32:
          type: Version
          name: Version project custom field
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        customField34:
          type: Boolean
          name: Boolean project custom field
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField35:
          type: String
          name: Text project custom field
          required: true
          hasDefault: false
          writable: true
          visibility: default
        _links:
          self:
            href: /api/v3/projects/schema
    QueriesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/queries
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
            - _type: Query
              id: 9
              name: fdsfdsfdsf
              createdAt: '2015-03-20T12:56:56.858Z'
              updatedAt: '2015-05-20T18:16:53.887Z'
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Finish date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Finish date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: true
              projections:
                - _type: Query::TableProjection
                - _type: Query::TeamPlannerProjection
                  _links:
                    rows:
                      - href: /api/v3/users/1
                        title: Bob Bobbit
                - _type: Query::CalendarProjection
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 30
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: METEOR Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
    QueryModel:
      type: object
      required:
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          description: Query id
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: Query name
          readOnly: true
        filters:
          type: array
          description: A set of QueryFilters which will be applied to the work packages to determine the resulting work packages
          readOnly: false
          items:
            $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel'
        sums:
          type: boolean
          description: Should sums (of supported properties) be shown?
          readOnly: true
        timelineVisible:
          type: boolean
          description: Should the timeline mode be shown?
          readOnly: true
          deprecated: true
        timelineLabels:
          type: array
          description: Which labels are shown in the timeline, empty when default
          readOnly: true
          deprecated: true
          items:
            type: string
        timelineZoomLevel:
          type: string
          description: Which zoom level should the timeline be rendered in?
          readOnly: true
          deprecated: true
        timestamps:
          type: array
          description: Timestamps to filter by when showing changed attributes on work packages.
          readOnly: false
        highlightingMode:
          type: string
          description: Which highlighting mode should the table have?
          readOnly: true
          deprecated: true
        showHierarchies:
          type: boolean
          description: Should the hierarchy mode be enabled?
          readOnly: true
          deprecated: true
        hidden:
          type: boolean
          description: Should the query be hidden from the query list?
          readOnly: true
          deprecated: true
        public:
          type: boolean
          description: Can users besides the owner see the query?
          readOnly: true
        starred:
          type: boolean
          description: Should the query be highlighted to the user?
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the query
          readOnly: true
        _links:
          type: object
          properties:
            star:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Elevates the query to the status of 'starred'

                    # Conditions

                    **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is not yet starred
                  readOnly: true
            unstar:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Removes the 'starred' status

                    # Conditions

                    **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is starred
                  readOnly: true
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Use the Form based process to verify the query before persisting

                    # Conditions

                    **Permission**: view work packages
                  readOnly: true
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Persist the query without using a Form based process for guidance

                    # Conditions

                    **Permission**: save queries for own queries, manage public queries for public queries;
                  readOnly: true
    Query_ColumnModel:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Query column id
          readOnly: true
        name:
          type: string
          description: Query column name
      example:
        _type: QueryColumn::Property
        id: priority
        name: Priority
        _links:
          self:
            href: /api/v3/queries/columns/priority
            title: Priority
    Query_Create_Form:
      type: object
      properties:
        name:
          type: string
          description: Query name.
      example:
        name: New query name
    Query_FilterModel:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: QueryFilter id
      example:
        _type: QueryFilter
        id: status
        _links:
          self:
            href: /api/v3/queries/filters/status
            title: Status
    Query_Filter_Instance_SchemaModel:
      type: object
      required:
        - name
        - filter
      properties:
        name:
          type: string
          description: Describes the name attribute
          readOnly: true
        filter:
          type: string
          description: QuerySortBy name
        _links:
          type: object
          required:
            - self
            - filter
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This QueryFilterInstanceSchema (same as for schema)

                    **Resource**: QueryFilterInstanceSchema
                  readOnly: true
            filter:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The filter for which this schema is specific

                    **Resource**: Filter
                  readOnly: true
      example:
        _type: QueryFilterInstanceSchema
        _dependencies:
          - _type: SchemaDependency
            'on': operator
            dependencies:
              /api/v3/queries/operators/=:
                values:
                  type: '[]User'
                  name: Values
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
              /api/v3/queries/operators/!:
                values:
                  type: '[]User'
                  name: Values
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
        name:
          type: String
          name: Name
          required: true
          hasDefault: true
          writable: false
        filter:
          type: QueryFilter
          name: Filter
          required: true
          hasDefault: false
          writable: true
          _links: {}
        _links:
          self:
            href: /api/v3/queries/filter_instance_schemas/author
          filter:
            href: /api/v3/queries/filters/author
            title: Author
    Query_Filter_Instance_SchemasModel:
      type: object
      example:
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: QueryFilterInstanceSchema
              _dependencies:
                - _type: SchemaDependency
                  'on': operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!*: {}
                    /api/v3/queries/operators/*: {}
              name:
                type: String
                name: Name
                required: true
                hasDefault: true
                writable: false
              filter:
                type: QueryFilter
                name: Filter
                required: true
                hasDefault: false
                writable: true
                _links: {}
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas/assignee
                filter:
                  href: /api/v3/queries/filters/assignee
                  title: Assignee
            - _type: QueryFilterInstanceSchema
              _dependencies:
                - _type: SchemaDependency
                  'on': operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
              name:
                type: String
                name: Name
                required: true
                hasDefault: true
                writable: false
              filter:
                type: QueryFilter
                name: Filter
                required: true
                hasDefault: false
                writable: true
                _links: {}
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas/author
                filter:
                  href: /api/v3/queries/filters/author
                  title: Author
        _links:
          self:
            href: /api/v3/queries/filter_instance_schemas
    Query_Filter_Instance_Schemas_For_ProjectModel:
      type: object
      example:
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
            - _type: QueryFilterInstanceSchema
              _dependencies:
                - _type: SchemaDependency
                  'on': operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!*: {}
                    /api/v3/queries/operators/*: {}
              name:
                type: String
                name: Name
                required: true
                hasDefault: true
                writable: false
              filter:
                type: QueryFilter
                name: Filter
                required: true
                hasDefault: false
                writable: true
                _links: {}
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas/assignee
                filter:
                  href: /api/v3/queries/filters/assignee
                  title: Assignee
            - _type: QueryFilterInstanceSchema
              _dependencies:
                - _type: SchemaDependency
                  'on': operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
              name:
                type: String
                name: Name
                required: true
                hasDefault: true
                writable: false
              filter:
                type: QueryFilter
                name: Filter
                required: true
                hasDefault: false
                writable: true
                _links: {}
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas/author
                filter:
                  href: /api/v3/queries/filters/author
                  title: Author
        _links:
          self:
            href: /api/v3/projects/42/queries/filter_instance_schemas
    Query_OperatorModel:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Query operator id
          readOnly: true
        name:
          type: string
          description: Query operator name
      example:
        _type: QueryOperator
        id: '!'
        name: is not
        _links:
          self:
            href: /api/v3/queries/operators/!
            title: is not
    Query_Sort_ByModel:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: QuerySortBy id
          readOnly: true
        name:
          type: string
          description: QuerySortBy name
      example:
        _type: QuerySortBy
        id: status-asc
        name: Status (Ascending)
        _links:
          self:
            href: /api/v3/queries/sort_bys/status-asc
            title: Status (Ascending)
          column:
            href: /api/v3/queries/columns/status
            title: Status
          direction:
            href: urn:meteor-org:api:v3:queries:directions:asc
            title: Ascending
    Query_Update_Form:
      type: object
      properties:
        name:
          type: string
          description: Query name.
      example:
        name: Updated query name
    RelationModel:
      type: object
      properties:
        id:
          type: integer
          description: Relation ID
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: The internationalized name of this kind of relation
        type:
          type: string
          description: Which kind of relation (blocks, precedes, etc.)
        reverseType:
          type: string
          description: The kind of relation from the other WP's perspective
          readOnly: true
        description:
          type: string
          description: Short text further describing the relation
        lag*:
          type: integer
          description: The lag in days between closing of `from` and start of `to`
          minimum: 0
        _links:
          type: object
          required:
            - self
            - schema
            - from
            - to
          properties:
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Updates the relation between two work packages via a form

                    # Conditions

                    **Permission**: manage work package relations
                  readOnly: true
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Updates the relation between two work packages

                    # Conditions

                    **Permission**: manage work package relations
                  readOnly: true
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Destroys the relation between the two work packages

                    # Conditions

                    **Permission**: manage work package relations
                  readOnly: true
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This relation

                    **Resource**: Relation

                    # Conditions

                    **Permission**: view work packages
                  readOnly: true
            schema:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The schema of this relation

                    **Resource**: Schema
                  readOnly: true
            from:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The emanating work package

                    **Resource**: WorkPackage

                    # Conditions

                    **Permission**: view work packages
                  readOnly: true
            to:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The work package the relation ends in

                    **Resource**: WorkPackage

                    # Conditions

                    **Permission**: view work packages
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/relations/1
          update:
            href: /api/v3/relations/1/form
            method: POST
          updateImmediately:
            href: /api/v3/relations/1
            method: PATCH
          delete:
            href: /api/v3/relations/1
            method: DELETE
          from:
            href: /api/v3/work_packages/42
            title: Steel Delivery
          to:
            href: /api/v3/work_packages/84
            title: Bending the steel
        _type: Relation
        id: 1
        name: precedes
        type: precedes
        reverseType: follows
        description: We can't bend the steel before it's been delivered!
        lag: 0
    Relation_edit_formModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/relations/form
          validate:
            href: /api/v3/relations/form
            method: POST
          commit:
            href: /api/v3/relations
            method: PATCH
        _type: Form
        _embedded:
          payload:
            _links:
              from:
                href: /api/v3/work_packages/4534
              to:
                href: /api/v3/work_packages/3857
            _type: WorkPackage
            type: follows
            lag: 3
            description: let it rest for 3 days
          schema:
            _type: Schema
            _links:
              self:
                href: /api/v3/relations/schema
            id:
              name: ID
              type: Integer
              writable: false
            type:
              name: Type
              type: String
              writable: true
              allowedValues:
                - relates
                - duplicates
                - duplicated
                - blocks
                - blocked
                - precedes
                - follows
                - includes
                - partof
                - requires
                - required
            reverseType:
              name: Reverse Type
              type: String
              writable: false
            description:
              name: Description
              type: String
              writable: true
            from:
              name: From work package
              type: WorkPackage
              writable: false
            to:
              name: To work package
              type: WorkPackage
              writable: false
            lag:
              name: lag
              type: Integer
              writable: true
          validationErrors:
            from:
              _type: Error
              errorIdentifier: urn:meteor-org:api:v3:errors:BadExampleError
              message: For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.
    Relation_schemaModel:
      type: object
      example:
        _type: Schema
        _links:
          self:
            href: /api/v3/relations/schema
        id:
          name: ID
          type: Integer
          writable: false
        type:
          name: Type
          type: String
          writable: true
        reverseType:
          name: Reverse Type
          type: String
          writable: false
        description:
          name: Description
          type: String
          writable: true
        from:
          name: From work package
          type: WorkPackage
          writable: false
        to:
          name: To work package
          type: WorkPackage
          writable: false
        lag:
          name: Lag
          type: Integer
          writable: true
    RelationsModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/relations
        total: 3
        count: 1
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/relations/1
                update:
                  href: /api/v3/relations/1/form
                  method: POST
                updateImmediately:
                  href: /api/v3/relations/1
                  method: PATCH
                delete:
                  href: /api/v3/relations/1
                  method: DELETE
                from:
                  href: /api/v3/work_packages/42
                  title: Steel Delivery
                to:
                  href: /api/v3/work_packages/84
                  title: Bending the steel
              _type: Relation
              id: 1
              name: precedes
              type: precedes
              reverseType: follows
              description: We can't bend the steel before it's been delivered!
              lag: 0
    RevisionModel:
      type: object
      required:
        - identifier
        - formattedIdentifier
        - authorName
        - message
        - createdAt
      properties:
        id:
          type: integer
          description: Revision's id, assigned by METEOR
          readOnly: true
          exclusiveMinimum: 0
        identifier:
          type: string
          description: The raw SCM identifier of the revision (e.g. full SHA hash)
          readOnly: true
        formattedIdentifier:
          type: string
          description: The SCM identifier of the revision, formatted (e.g. shortened unambiguous SHA hash). May be identical to identifier in many cases
          readOnly: true
        authorName:
          type: string
          description: The name of the author that committed this revision. Note that this name is retrieved from the repository and does not identify a user in METEOR.
          readOnly: true
        message:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: The commit message of the revision
              readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The time this revision was committed to the repository
        _links:
          type: object
          required:
            - self
            - project
            - showRevision
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This revision

                    **Resource**: Revision
                  readOnly: true
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project to which the revision belongs

                    **Resource**: Project
                  readOnly: true
            author:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user that added this revision, if the authorName was mapped to a user in METEOR

                    **Resource**: User
                  readOnly: true
            showRevision:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    A URL to the repository view (outside APIv3) showing this revision

                    **Resource**: -
                  readOnly: true
      example:
        _type: Revision
        _links:
          self:
            href: /api/v3/revisions/1
          project:
            href: /api/v3/projects/1
          author:
            href: /api/v3/users/1
          showRevision:
            href: /projects/identifier/repository/revision/11f4b07
        id: 1
        identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
        formattedIdentifier: 11f4b07
        authorName: Some Developer
        message:
          format: plain
          raw: |-
            This revision provides new features

            An elaborate description
          html: <p>This revision provides new features<br/><br/>An elaborate description</p>
        createdAt: '2015-07-21T13:36:59.859Z'
    RevisionsModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/work_packages/42/revisions
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: Revision
              _links:
                self:
                  href: /api/v3/revisions/13
                project:
                  href: /api/v3/projects/1
                  title: A Test Project
                author:
                  href: /api/v3/users/1
                  title: John Sheppard - j.sheppard
                showRevision:
                  href: /projects/identifier/repository/revision/11f4b07
              id: 13
              identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
              formattedIdentifier: 11f4b07
              authorName: John Sheppard
              message:
                format: plain
                raw: |-
                  This revision provides new features

                  An elaborate description
                html: <p>This revision provides new features<br/><br/>An elaborate description</p>
              createdAt: '2015-07-21T13:36:59.201Z'
            - _type: Revision
              _links:
                self:
                  href: /api/v3/revisions/14
                project:
                  href: /api/v3/projects/1
                  title: A Test Project
                author:
                  href: /api/v3/users/2
                  title: Jim Sheppard - j.sheppard
                showRevision:
                  href: /projects/identifier/repository/revision/029ed72a
              id: 13
              identifier: 029ed72a3b7b7c4ab332b1f6eaa6576e7c946059
              formattedIdentifier: 029ed72a
              authorName: j1msheppard
              message:
                format: plain
                raw: |-
                  This revision fixes some stuff

                  More information here
                html: <p>This revision fixes some stuff<br/><br/>More information here</p>
              createdAt: '2015-06-30T08:47:00.548Z'
    RoleModel:
      type: object
      required:
        - name
      properties:
        _type:
          type: string
          enum:
            - Role
        id:
          type: integer
          description: Role id
          readOnly: true
          minimum: 1
        name:
          type: string
          description: Role name
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This role

                    **Resource**: Role
                  readOnly: true
      example:
        _type: Role
        id: 3
        name: Manager
        _links:
          self:
            href: /api/v3/roles/3
            title: Manager
    RolesModel:
      type: object
      example:
        _type: Collection
        total: 5
        count: 5
        _embedded:
          elements:
            - _type: Role
              id: 3
              name: Manager
              _links:
                self:
                  href: /api/v3/roles/3
                  title: Manager
            - _type: Role
              id: 2
              name: Anonymous
              _links:
                self:
                  href: /api/v3/roles/2
                  title: Anonymous
            - _type: Role
              id: 5
              name: Reader
              _links:
                self:
                  href: /api/v3/roles/5
                  title: Reader
            - _type: Role
              id: 4
              name: Member
              _links:
                self:
                  href: /api/v3/roles/4
                  title: Member
            - _type: Role
              id: 1
              name: Non member
              _links:
                self:
                  href: /api/v3/roles/1
                  title: Non member
        _links:
          self:
            href: /api/v3/roles
    RootModel:
      type: object
      required:
        - _type
        - instanceName
        - _links
      properties:
        _type:
          type: string
          enum:
            - Корень
        instanceName:
          type: string
          description: The name of the METEOR instance
        coreVersion:
          type: string
          description: |-
            The METEOR core version number for the instance

            # Conditions

            **Permission** requires admin privileges
        _links:
          type: object
          required:
            - self
            - configuration
            - memberships
            - priorities
            - relations
            - statuses
            - time_entries
            - types
            - user
            - userPreferences
            - workPackages
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This root information object.

                    **Resource**: Root
            configuration:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The configuration resource.

                    **Resource**: Configuration
            memberships:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of memberships.

                    **Resource**: Collection
            priorities:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of priorities.

                    **Resource**: Collection
            relations:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of relations.

                    **Resource**: Collection
            statuses:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of statuses.

                    **Resource**: Collection
            time_entries:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of time entries.

                    **Resource**: Collection
            types:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The collection of types.

                    **Resource**: Collection
            user:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The current user resource.

                    **Resource**: User
            userPreferences:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The current user preferences resource.

                    **Resource**: UserPreferences
            workPackages:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The work package collection.

                    **Resource**: Collection
      example:
        _type: Root
        instanceName: METEOR
        coreVersion: 12.1.0
        _links:
          self:
            href: /api/v3
          configuration:
            href: /api/v3/configuration
          memberships:
            href: /api/v3/memberships
          priorities:
            href: /api/v3/priorities
          relations:
            href: /api/v3/relations
          statuses:
            href: /api/v3/statuses
          time_entries:
            href: /api/v3/time_entries
          types:
            href: /api/v3/types
          user:
            href: /api/v3/users/3
            title: Anakin Skywalker
          userPreferences:
            href: /api/v3/users/3/preferences
          workPackages:
            href: /api/v3/work_packages
    SchemaModel:
      type: object
      required:
        - _type
        - _links
      properties:
        _type:
          type: string
          enum:
            - Schema
        _dependencies:
          type: array
          description: A list of dependencies between one property's value and another property
          items:
            type: string
        _links:
          type: object
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This schema

                    **Resource**: Schema
    SchemaPropertyModel:
      type: object
      required:
        - type
        - name
        - required
        - hasDefault
        - writable
      properties:
        type:
          type: string
          description: The resource type for this property.
        name:
          type: string
          description: The name of the property.
        required:
          type: boolean
          description: Indicates, if the property is required for submitting a request of this schema.
        hasDefault:
          type: boolean
          description: Indicates, if the property has a default.
        writable:
          type: boolean
          description: Indicates, if the property is writable when sending a request of this schema.
        object:
          type: object
          description: Additional options for the property.
        location:
          type: string
          description: Defines the json path where the property is located in the payload.
          default: ''
        _links:
          type: object
          description: Useful links for this property (e.g. an endpoint to fetch allowed values)
    Schema_For_Global_QueriesModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        user:
          type: User
          name: User
          required: true
          hasDefault: true
          writable: false
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        public:
          type: Boolean
          name: Public
          required: false
          hasDefault: true
          writable: true
        sums:
          type: Boolean
          name: Sums
          required: false
          hasDefault: true
          writable: true
        timelineVisible:
          type: Boolean
          name: Timeline visible
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timelineZoomLevel:
          type: String
          name: Timeline zoom level
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timelineLabels:
          type: QueryTimelineLabels
          name: Timeline labels
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timestamps:
          type: '[]Timestamp'
          name: Timestamps
          required: false
          hasDefault: true
          writable: true
        highlightingMode:
          type: String
          name: Highlighting mode
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        highlightedAttributes:
          type: '[]QueryColumn'
          name: Highlighted attributes
          required: false
          hasDefault: true
          writable: true
          location: _links
          deprecated: true
        showHierarchies:
          type: Boolean
          name: Show hierarchies
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        starred:
          type: Boolean
          name: Starred
          required: false
          hasDefault: true
          writable: true
        columns:
          type: '[]QueryColumn'
          name: Columns
          required: false
          hasDefault: true
          writable: true
          location: _links
          _links: {}
        filters:
          type: '[]QueryFilterInstance'
          name: Фильтры
          required: false
          writable: true
          hasDefault: true
          location: _links
          _links:
            allowedValuesSchemas:
              href: /api/v3/queries/filter_instance_schemas
        groupBy:
          type: '[]QueryGroupBy'
          name: Group results by
          required: false
          hasDefault: false
          writable: true
          _links: {}
        sortBy:
          type: '[]QuerySortBy'
          name: Sort by
          required: false
          hasDefault: true
          writable: true
          _links: {}
        results:
          type: WorkPackageCollection
          name: Results
          required: false
          hasDefault: false
          writable: false
        _embedded:
          filtersSchemas:
            _type: Collection
            total: 20
            count: 20
            _embedded:
              elements:
                - _type: QueryFilterInstanceSchema
                  _dependencies:
                    - _type: SchemaDependency
                      'on': operator
                      dependencies:
                        /api/v3/queries/operators/=:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!*: {}
                        /api/v3/queries/operators/*: {}
                  name:
                    type: String
                    name: Name
                    required: true
                    hasDefault: true
                    writable: false
                  filter:
                    type: QueryFilter
                    name: Filter
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                  _links:
                    self:
                      href: /api/v3/queries/filter_instance_schemas/assignee
                    filter:
                      href: /api/v3/queries/filters/assignee
                      title: Assignee
                - _type: QueryFilterInstanceSchema
                  _dependencies:
                    - _type: SchemaDependency
                      'on': operator
                      dependencies:
                        /api/v3/queries/operators/=:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                  name:
                    type: String
                    name: Name
                    required: true
                    hasDefault: true
                    writable: false
                  filter:
                    type: QueryFilter
                    name: Filter
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                  _links:
                    self:
                      href: /api/v3/queries/filter_instance_schemas/author
                    filter:
                      href: /api/v3/queries/filters/author
                      title: Author
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas
        _links:
          self:
            href: /api/v3/queries/schema
    Schema_For_Project_QueriesModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        user:
          type: User
          name: User
          required: true
          hasDefault: true
          writable: false
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          _links: {}
        public:
          type: Boolean
          name: Public
          required: false
          hasDefault: true
          writable: true
        sums:
          type: Boolean
          name: Sums
          required: false
          hasDefault: true
          writable: true
        timelineVisible:
          type: Boolean
          name: Timeline visible
          required: false
          hasDefault: true
          writable: true
        timelineZoomLevel:
          type: String
          name: Timeline zoom level
          required: false
          hasDefault: true
          writable: true
        showHierarchies:
          type: Boolean
          name: Show hierarchies
          required: false
          hasDefault: true
          writable: true
        starred:
          type: Boolean
          name: Starred
          required: false
          hasDefault: true
          writable: true
        columns:
          type: '[]QueryColumn'
          name: Columns
          required: false
          hasDefault: true
          writable: true
          _links: {}
        filters:
          type: '[]QueryFilterInstance'
          name: Фильтры
          required: false
          writable: true
          hasDefault: true
          _links:
            allowedValuesSchemas:
              href: /api/v3/projects/42/queries/filter_instance_schemas
        groupBy:
          type: '[]QueryGroupBy'
          name: Group results by
          required: false
          hasDefault: false
          writable: true
          _links: {}
        sortBy:
          type: '[]QuerySortBy'
          name: Sort by
          required: false
          hasDefault: true
          writable: true
          _links: {}
        results:
          type: WorkPackageCollection
          name: Results
          required: false
          hasDefault: false
          writable: false
        _embedded:
          filtersSchemas:
            _type: Collection
            total: 20
            count: 20
            _embedded:
              elements:
                - _type: QueryFilterInstanceSchema
                  _dependencies:
                    - _type: SchemaDependency
                      'on': operator
                      dependencies:
                        /api/v3/queries/operators/=:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!*: {}
                        /api/v3/queries/operators/*: {}
                  name:
                    type: String
                    name: Name
                    required: true
                    hasDefault: true
                    writable: false
                  filter:
                    type: QueryFilter
                    name: Filter
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                  _links:
                    self:
                      href: /api/v3/queries/filter_instance_schemas/assignee
                    filter:
                      href: /api/v3/queries/filters/assignee
                      title: Assignee
                - _type: QueryFilterInstanceSchema
                  _dependencies:
                    - _type: SchemaDependency
                      'on': operator
                      dependencies:
                        /api/v3/queries/operators/=:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                        /api/v3/queries/operators/!:
                          values:
                            type: '[]User'
                            name: Values
                            required: true
                            hasDefault: false
                            writable: true
                            _links: {}
                  name:
                    type: String
                    name: Name
                    required: true
                    hasDefault: true
                    writable: false
                  filter:
                    type: QueryFilter
                    name: Filter
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                  _links:
                    self:
                      href: /api/v3/queries/filter_instance_schemas/author
                    filter:
                      href: /api/v3/queries/filters/author
                      title: Author
            _links:
              self:
                href: /api/v3/projects/42/queries/filter_instance_schemas
        _links:
          self:
            href: /api/v3/projects/42/queries/schema
    Star_QueryModel:
      type: object
      example:
        _type: Query
        id: 9
        name: fdsfdsfdsf
        createdAt: '2015-03-20T12:56:56.085Z'
        updatedAt: '2015-05-20T18:16:53.619Z'
        filters:
          - _type: StatusQueryFilter
            name: Status
            _links:
              filter:
                href: /api/v3/queries/filters/status
                title: Status
              operator:
                href: /api/v3/queries/operators/o
                title: open
              schema:
                href: /api/v3/queries/filter_instance_schemas/status
              values: []
          - _type: DueDateQueryFilter
            name: Finish date
            values:
              - '1'
            _links:
              filter:
                href: /api/v3/queries/filters/dueDate
                title: Finish date
              operator:
                href: /api/v3/queries/operators/<t+
                title: in less than
              schema:
                href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: true
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
                - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: fdsfdsfdsf
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
            - href: /api/v3/queries/columns/id
              title: ID
            - href: /api/v3/queries/columns/subject
              title: Subject
            - href: /api/v3/queries/columns/type
              title: Type
            - href: /api/v3/queries/columns/status
              title: Status
            - href: /api/v3/queries/columns/priority
              title: Priority
            - href: /api/v3/queries/columns/assignee
              title: Assignee
            - href: /api/v3/queries/columns/updated_at
              title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
            - href: /api/v3/queries/sort_bys/parent-desc
              title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: METEOR Admin
          project:
            href: /api/v3/projects/3
            title: copy
    StatusCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This file links collection

                        **Resource**: StatusCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/StatusModel'
    StatusModel:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Status
        id:
          type: integer
          description: Status id
          readOnly: true
          minimum: 1
        name:
          type: string
          description: Status name
          readOnly: true
        position:
          type: integer
          description: Sort index of the status
          readOnly: true
        isDefault:
          type: boolean
          readOnly: true
        isClosed:
          type: boolean
          description: are tickets of this status considered closed?
          readOnly: true
        isReadonly:
          type: boolean
          description: are tickets of this status read only?
          readOnly: true
        defaultDoneRatio:
          type: integer
          description: The percentageDone being applied when changing to this status
          maximum: 100
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This status

                    **Resource**: Status
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/statuses/1
        _type: Status
        id: 1
        name: New
        position: 1
        isDefault: true
        isClosed: false
        defaultDoneRatio: 0
    StorageCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This storage collection

                        **Resource**: StorageCollectionReadModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/StorageReadModel'
    StorageFileModel:
      allOf:
        - $ref: '#/components/schemas/FileLinkOriginDataModel'
        - type: object
          required:
            - _type
            - location
            - _links
          properties:
            _type:
              type: string
              enum:
                - StorageFile
            location:
              type: string
              description: Location identification for file in storage
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Not provided

                        **Resource**: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
      example:
        id: 42
        name: readme.md
        _type: StorageFile
        location: /readme.md
        _links:
          self:
            href: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
    StorageFilesModel:
      type: object
      required:
        - _type
        - files
        - parent
        - ancestors
        - _links
      properties:
        _type:
          type: string
          enum:
            - StorageFiles
        files:
          type: array
          items:
            $ref: '#/components/schemas/StorageFileModel'
          description: List of files provided by the selected storage.
        parent:
          allOf:
            - $ref: '#/components/schemas/StorageFileModel'
            - description: File of the currently selected parent directory.
        ancestors:
          type: array
          items:
            $ref: '#/components/schemas/StorageFileModel'
          description: List of ancestors of the parent directory. Can be empty, if parent directory was root directory.
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Not provided

                    **Resource**: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
      example:
        _type: StorageFiles
        files:
          - id: 42
            name: readme.md
            _type: StorageFile
            location: /readme.md
            mimeType: text/markdown
            size: 4096
            createdAt: '2021-12-19T09:42:10.170Z'
            lastModifiedAt: '2021-12-20T14:00:13.987Z'
            createdByName: Luke Skywalker
            lastModifiedByName: Anakin Skywalker
            _links:
              self:
                href: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
          - id: 43
            name: readme.pdf
            _type: StorageFile
            location: /readme.pdf
            mimeType: application/pdf
            size: 2048
            createdAt: '2021-12-19T09:42:10.170Z'
            lastModifiedAt: '2021-12-20T14:00:13.987Z'
            createdByName: Luke Skywalker
            lastModifiedByName: Anakin Skywalker
            _links:
              self:
                href: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
        parent:
          id: 41
          name: /
          location: /
          mimeType: application/x-op-directory
          size: 6144
          createdAt: '2021-12-20T09:42:10.170Z'
          lastModifiedAt: '2021-12-21T14:00:13.987Z'
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
          _links:
            self:
              href: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
        ancestors: []
        _links:
          self:
            href: urn:meteor-org:api:v3:storages:storage_file:no_link_provided
    StorageFileUploadPreparationModel:
      type: object
      required:
        - projectId
        - fileName
        - parent
      properties:
        projectId:
          type: integer
          description: The project identifier, from where a user starts uploading a file.
          minimum: 1
        fileName:
          type: string
          description: The file name.
        parent:
          type: string
          description: |-
            The directory to which the file is to be uploaded. For root directories, the value `/` must
            be provided.
    StorageFileUploadLinkModel:
      type: object
      required:
        - _type
        - _links
      properties:
        _type:
          type: string
          enum:
            - UploadLink
        _links:
          type: object
          required:
            - self
            - destination
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The resource link of the upload link resource.

                    As the upload link is a temporal object, and cannot be retrieved again, the
                    self link usually is `urn:meteor-org:api:v3:storages:upload_link:no_link_provided`.

                    **Resource**: UploadLink
            destination:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The direct upload link.

                    **Resource**: N/A
    StorageReadModel:
      type: object
      required:
        - id
        - _type
        - name
        - _links
      properties:
        id:
          type: integer
          description: Storage id
        _type:
          type: string
          enum:
            - Storage
        name:
          type: string
          description: Storage name
        hasApplicationPassword:
          type: boolean
          description: |-
            Whether the storage has the application password to use for the Nextcloud storage.

            Ignored if the provider type is not Nextcloud
        createdAt:
          type: string
          format: date-time
          description: Time of creation
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the storage
        _embedded:
          type: object
          required:
            - oauthApplication
            - oauthClientCredentials
          properties:
            oauthApplication:
              $ref: '#/components/schemas/OAuthApplicationReadModel'
            oauthClientCredentials:
              $ref: '#/components/schemas/OAuthClientCredentialsReadModel'
        _links:
          type: object
          required:
            - self
            - type
            - origin
            - open
            - authorizationState
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This storage resource. Contains the user defined storage name as title.

                    **Resource**: Storage
            type:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The urn of the storage type. Currently only nextcloud storages are supported.

                    **Resource**: N/A
            origin:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Web URI of the storage instance.

                    **Resource**: N/A
            open:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    URI of the file storage location, from where the user usually starts browsing files.

                    **Resource**: N/A
            authorizationState:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The urn of the storage connection state. Can be one of:

                    - urn:meteor-org:api:v3:storages:authorization:Connected
                    - urn:meteor-org:api:v3:storages:authorization:FailedAuthorization
                    - urn:meteor-org:api:v3:storages:authorization:Error

                    **Resource**: N/A
            authorize:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The link to the starting point of the authorization cycle for a configured storage provider.

                    # Conditions

                    `authorizationState` is:

                    - urn:meteor-org:api:v3:storages:authorization:FailedAuthorization

                    **Resource**: N/A
            oauthApplication:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The OAuth 2 provider application linked to the storage.

                    # Conditions

                    - User has role `admin`

                    **Resource**: OAuthApplication
            oauthClientCredentials:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The OAuth 2 credentials resource linked to the storage.

                    # Conditions

                    - User has role `admin`

                    **Resource**: OAuthClientCredentials
      example:
        id: 1337
        _type: Storage
        name: It's no moon
        hasApplicationPassword: true
        createdAt: '2021-12-20T13:37:00.211Z'
        updatedAt: '2021-12-20T13:37:00.211Z'
        _links:
          self:
            href: /api/v3/storages/1337
            title: It's no moon
          type:
            href: urn:meteor-org:api:v3:storages:nextcloud
            title: Nextcloud
          origin:
            href: https://nextcloud.deathstar.rocks/
          open:
            href: https://nextcloud.deathstar.rocks/apps/files
          authorizationState:
            href: urn:meteor-org:api:v3:storages:authorization:FailedAuthorization
            title: Failed Authorization
          authorize:
            href: https://nextcloud.deathstar.rocks/authorize/
            title: Authorize
          oauthApplication:
            href: /api/v3/oauth_application/42
            title: It's no moon (Nextcloud)
          oauthClientCredentials:
            href: /api/v3/oauth_client_credentials/42
    StorageWriteModel:
      type: object
      properties:
        name:
          type: string
          description: Storage name, if not provided, falls back to a default.
        applicationPassword:
          type:
            - string
            - 'null'
          description: |-
            The application password to use for the Nextcloud storage. Ignored if the provider type is not Nextcloud.

            If a string is provided, the password is set and automatic management is enabled for the storage.
            If null is provided, the password is unset and automatic management is disabled for the storage.
        _links:
          type: object
          required:
            - origin
            - type
          properties:
            origin:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The storage's host URL.

                    **Resource**: N/A
            type:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The urn of the storage type. Currently only nextcloud storages are supported.

                    - urn:meteor-org:api:v3:storages:Nextcloud

                    **Resource**: N/A
      example:
        name: Coruscant
        applicationPassword: qJ_VLNReW@sd-Edz2hyC
        _links:
          origin:
            href: https://nextcloud.deathstar.rocks
          type:
            href: urn:meteor-org:api:v3:storages:Nextcloud
    TimeEntryActivityModel:
      type: object
      required:
        - _type
        - id
        - name
        - position
        - default
        - _embedded
        - _links
      properties:
        _type:
          type: string
          enum:
            - TimeEntriesActivity
        id:
          type: integer
          description: Time entry id
          minimum: 1
        name:
          type: string
          description: The human readable name chosen for this activity
        position:
          type: integer
          description: The rank the activity has in a list of activities
        default:
          type: boolean
          description: Flag to signal whether this activity is the default activity
        _embedded:
          type: object
          required:
            - projects
          properties:
            projects:
              type: array
              items:
                $ref: '#/components/schemas/ProjectModel'
        _links:
          type: object
          required:
            - self
            - projects
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This time entry activity

                    **Resource**: TimeEntriesActivity
            projects:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      One of the projects the time entry is active in.

                      **Resource**: Project
      examples:
        - _type: TimeEntriesActivity
          id: 18
          name: Management
          position: 8
          default: false
          _embedded:
            projects: []
          _links:
            self:
              href: /api/v3/time_entries/activities/18
              title: Management
            projects:
              - href: /api/v3/projects/death_star_v2
                title: DeathStarV2
              - href: /api/v3/projects/star_killer_base
                title: StarKillerBase
    TimeEntryCollectionModel:
      type: object
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This time entry collection

                        **Resource**: TimeEntryCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/TimeEntryModel'
      examples:
        - _type: Collection
          total: 39
          count: 2
          pageSize: 2
          offset: 1
          _embedded:
            elements:
              - _type: TimeEntry
                id: 5
                comment:
                  format: plain
                  raw: Some comment
                  html: <p>Some comment</p>
                spentOn: '2015-03-20'
                hours: PT5H
                createdAt: '2015-03-20T12:56:56.803Z'
                updatedAt: '2015-03-20T12:56:56.803Z'
                _links:
                  self:
                    href: /api/v3/time_entries/1
                  updateImmediately:
                    href: /api/v3/time_entries/1
                    method: patch
                  delete:
                    href: /api/v3/time_entries/1
                    method: delete
                  project:
                    href: /api/v3/projects/1
                    title: Some project
                  workPackage:
                    href: /api/v3/work_packages/1
                    title: Some work package
                  user:
                    href: /api/v3/users/2
                    title: Some user
                  activity:
                    href: /api/v3/time_entries/activities/18
                    title: Some time entry activity
              - _type: TimeEntry
                id: 10
                comment:
                  format: plain
                  raw: Another comment
                  html: <p>Another comment</p>
                spentOn: '2015-03-21'
                hours: PT7H
                createdAt: '2015-03-20T12:56:56.569Z'
                updatedAt: '2015-03-20T12:56:56.371Z'
                _links:
                  self:
                    href: /api/v3/time_entries/2
                  project:
                    href: /api/v3/projects/42
                    title: Some other project
                  workPackage:
                    href: /api/v3/work_packages/541
                    title: Some other work package
                  user:
                    href: /api/v3/users/6
                    title: Some other project
                  activity:
                    href: /api/v3/time_entries/activities/14
                    title: some other time entry activity
          _links:
            self:
              href: /api/v3/time_entries?offset=1&pageSize=2
            jumpTo:
              href: /api/v3/time_entries?offset=%7Boffset%7D&pageSize=2
              templated: true
            changeSize:
              href: /api/v3/time_entries?offset=1&pageSize=%7Bsize%7D
              templated: true
            nextByOffset:
              href: /api/v3/time_entries?offset=2&pageSize=2
            createTimeEntry:
              href: /api/v3/time_entries/form
              method: post
            createTimeEntryImmediately:
              href: /api/v3/time_entries
              method: post
    TimeEntryModel:
      type: object
      properties:
        id:
          type: integer
          description: The id of the time entry
          minimum: 1
        comment:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: A comment to the time entry
        spentOn:
          type: string
          format: date
          description: The date the expenditure is booked for
        hours:
          type: string
          format: duration
          description: The time quantifying the expenditure
        ongoing:
          type: boolean
          description: Whether the time entry is actively tracking time
        createdAt:
          type: string
          format: date-time
          description: The time the time entry was created
        updatedAt:
          type: string
          format: date-time
          description: The time the time entry was last updated
        _links:
          type: object
          required:
            - self
            - project
            - user
            - activity
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This time entry

                    **Resource**: TimeEntry
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly perform edits on this time entry

                    # Conditions

                    **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Form endpoint that aids in preparing and performing edits on a TimeEntry

                    # Conditions

                    **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
            delete:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Delete this time entry

                    # Conditions

                    **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
            schema:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The time entry schema

                    **Resource**: Schema
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project the time entry is bundled in. The project might be different from the work package's project once the workPackage is moved.

                    **Resource**: Project
            workPackage:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The work package the time entry is created on

                    **Resource**: WorkPackage
            user:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The user the time entry tracks expenditures for

                    **Resource**: User
            activity:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The time entry activity the time entry is categorized as

                    **Resource**: TimeEntriesActivity
      examples:
        - _type: TimeEntry
          id: 42
          comment:
            format: plain
            raw: The force shall set me free.
            html: <p>The force shall set me free.</p>
          spentOn: '2023-01-11'
          hours: PT4H
          createdAt: '2023-01-11T13:58:24.927Z'
          updatedAt: '2023-01-11T13:58:24.927Z'
          _links:
            self:
              href: /api/v3/time_entries/42
            updateImmediately:
              href: /api/v3/time_entries/42
              method: patch
            update:
              href: /api/v3/time_entries/42/form
              method: post
            delete:
              href: /api/v3/time_entries/42
              method: delete
            schema:
              href: /api/v3/time_entries/schema
            project:
              href: /api/v3/projects/11
              title: DeathStarV2
            workPackage:
              href: /api/v3/work_packages/77
              title: Build new hangar
            user:
              href: /api/v3/users/3
              title: Darth Vader
            activity:
              href: /api/v3/time_entries/activities/1
              title: Management
    TypeModel:
      type: object
      properties:
        id:
          type: integer
          description: Type id
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: Type name
          readOnly: true
        color:
          type: string
          description: The color used to represent this type
          readOnly: true
        position:
          type: integer
          description: Sort index of the type
          readOnly: true
        isDefault:
          type: boolean
          description: Is this type active by default in new projects?
          readOnly: true
        isMilestone:
          type: boolean
          description: Do work packages of this type represent a milestone?
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the user
        _links:
          type: object
          required:
            - self
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This type

                    **Resource**: Type
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/types/1
        _type: Type
        id: 1
        name: Bug
        color: '#ff0000'
        position: 1
        isDefault: true
        isMilestone: false
        createdAt: '2014-05-21T08:51:20.624Z'
        updatedAt: '2014-05-21T08:51:20.624Z'
    TypesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/types
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/types/1
              _type: Type
              id: 1
              name: Bug
              color: '#ff0000'
              position: 1
              isDefault: true
              isMilestone: false
              createdAt: '2014-05-21T08:51:20.429Z'
              updatedAt: '2014-05-21T08:51:20.429Z'
            - _links:
                self:
                  href: /api/v3/types/2
              _type: Type
              id: 2
              name: Feature
              color: '#888'
              position: 2
              isDefault: false
              isMilestone: false
              createdAt: '2014-05-21T08:51:20.429Z'
              updatedAt: '2014-05-21T08:51:20.429Z'
    Types_by_ProjectModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/11/types
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/types/1
              _type: Type
              id: 1
              name: Bug
              color: '#ff0000'
              position: 1
              isDefault: true
              isMilestone: false
              createdAt: '2014-05-21T08:51:20.745Z'
              updatedAt: '2014-05-21T08:51:20.745Z'
            - _links:
                self:
                  href: /api/v3/types/2
              _type: Type
              id: 2
              name: Feature
              color: '#888'
              position: 2
              isDefault: false
              isMilestone: false
              createdAt: '2014-05-21T08:51:20.745Z'
              updatedAt: '2014-05-21T08:51:20.745Z'
    Unstar_QueryModel:
      type: object
      example:
        _type: Query
        id: 9
        name: fdsfdsfdsf
        createdAt: '2015-03-20T12:56:56.257Z'
        updatedAt: '2015-05-20T18:16:53.953Z'
        filters:
          - _type: StatusQueryFilter
            name: Status
            _links:
              filter:
                href: /api/v3/queries/filters/status
                title: Status
              operator:
                href: /api/v3/queries/operators/o
                title: open
              schema:
                href: /api/v3/queries/filter_instance_schemas/status
              values: []
          - _type: DueDateQueryFilter
            name: Finish date
            values:
              - '1'
            _links:
              filter:
                href: /api/v3/queries/filters/dueDate
                title: Finish date
              operator:
                href: /api/v3/queries/operators/<t+
                title: in less than
              schema:
                href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
                - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: fdsfdsfdsf
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
            - href: /api/v3/queries/columns/id
              title: ID
            - href: /api/v3/queries/columns/subject
              title: Subject
            - href: /api/v3/queries/columns/type
              title: Type
            - href: /api/v3/queries/columns/status
              title: Status
            - href: /api/v3/queries/columns/priority
              title: Priority
            - href: /api/v3/queries/columns/assignee
              title: Assignee
            - href: /api/v3/queries/columns/updated_at
              title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
            - href: /api/v3/queries/sort_bys/parent-desc
              title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: METEOR Admin
          project:
            href: /api/v3/projects/3
            title: copy
    UserCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This user collection

                        **Resource**: Collection
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserModel'
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/users
        _embedded:
          elements:
            - _hint: User resource shortened for brevity
              _type: User
              id: 1337
            - _hint: User resource shortened for brevity
              _type: User
              id: 1338
    UserCreateModel:
      type: object
      required:
        - admin
        - email
        - login
        - firstName
        - lastName
        - language
      properties:
        admin:
          type: boolean
        email:
          type: string
          maxLength: 60
        login:
          type: string
          maxLength: 256
        password:
          type: string
          description: |-
            The users password.

            *Conditions:*

            Only writable on creation, not on update.
        firstName:
          type: string
          maxLength: 30
        lastName:
          type: string
          maxLength: 30
        status:
          type: string
          description: |-
            The current activation status of the user.

            *Conditions:*

            Only writable on creation, not on update.
        language:
          type: string
      example:
        login: j.sheppard
        password: idestroyedsouvereign
        firstName: John
        lastName: Sheppard
        email: shep@mail.com
        admin: true
        status: active
        language: en
    UserModel:
      allOf:
        - $ref: '#/components/schemas/PrincipalModel'
        - type: object
          required:
            - _type
            - avatar
          properties:
            _type:
              type: string
              enum:
                - User
            avatar:
              type: string
              format: uri
              description: URL to user's avatar
            login:
              type: string
              description: |-
                The user's login name

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
              maxLength: 256
            firstName:
              type: string
              description: |-
                The user's first name

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
              maxLength: 30
            lastName:
              type: string
              description: |-
                The user's last name

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
              maxLength: 30
            email:
              type: string
              description: |-
                The user's email address

                # Conditions

                - E-Mail address not hidden
                - User is not a new record
                - User is self, or `create_user` or `manage_user` permission globally
              maxLength: 60
            admin:
              type: boolean
              description: |-
                Flag indicating whether or not the user is an admin

                # Conditions

                - `admin`
            status:
              type: string
              description: |-
                The current activation status of the user.

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
            language:
              type: string
              description: |-
                User's language | ISO 639-1 format

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
            identityUrl:
              type:
                - string
                - 'null'
              description: |-
                User's identity_url for OmniAuth authentication.

                # Conditions

                - User is self, or `create_user` or `manage_user` permission globally
            createdAt:
              type: string
              format: date-time
              description: Time of creation
            updatedAt:
              type: string
              format: date-time
              description: Time of the most recent change to the user
            _links:
              type: object
              properties:
                showUser:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        A relative path to show the user in the web application.

                        # Condition

                        - User is not a new record
                        - User is not `locked`
                updateImmediately:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        A link to update the user resource.

                        # Conditions

                        - `admin`
                lock:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Restrict the user from logging in and performing any actions.

                        # Conditions

                        - User is not locked
                        - `admin`
                unlock:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Allow a locked user to login and act again.

                        # Conditions

                        - User is not locked
                        - `admin`
                delete:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Permanently remove a user from the instance

                        # Conditions

                        either:
                          - `admin`
                          - Setting `users_deletable_by_admin` is set
                        or:
                          - User is self
                          - Setting `users_deletable_by_self` is set
                authSource:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        Permanently remove a user from the instance

                        # Conditions

                        - LDAP authentication configured
                        - `admin`
    UserPreferencesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/my_preferences
          user:
            href: /api/v3/users/1
            title: John Sheppard
          updateImmediately:
            href: /api/v3/users/3/preferences
            method: patch
        _type: UserPreferences
        commentSortDescending: true
        hideMail: false
        timeZone: Europe/Berlin
        warnOnLeavingUnsaved: true
        notifications:
          - watched: false
            involved: true
            mentioned: false
            shared: true
            newsAdded: false,
            newsCommented: false
            documentAdded: false
            forumMessages: false
            wikiPageAdded: false
            wikiPageUpdated: false
            membershipAdded: false
            membershipUpdated: false
            workPackageCommented: false
            workPackageProcessed: false
            workPackagePrioritized: false
            workPackageScheduled: false
            _links:
              project:
                href: null
    ValuesPropertyModel:
      type: object
      required:
        - _type
        - property
        - value
        - _links
      properties:
        _type:
          type: string
          enum:
            - Values::Property
        property:
          type: string
          description: The key of the key - value pair represented by the Values::Property
        value:
          type: string
          description: The value of the key - value pair represented by the Values::Property
        _links:
          type: object
          required:
            - self
            - schema
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This key - value pair.

                    **Resource**: Storage
            schema:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The schema describing the key - value pair.

                    **Resource**: Schema
    VersionModel:
      type: object
      required:
        - name
        - status
        - sharing
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          description: Version id
          readOnly: true
          exclusiveMinimum: 0
        name:
          type: string
          description: Version name
        description:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - {}
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          description: The current status of the version
        sharing:
          type: string
          description: The current status of the version
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the version
          readOnly: true
        _links:
          type: object
          required:
            - self
            - availableInProjects
          properties:
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Form endpoint that aids in preparing and performing edits on the version

                    # Conditions

                    **Permission**: manage versions
                  readOnly: true
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly perform edits on the version

                    # Conditions

                    **Permission**: manage versions
                  readOnly: true
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This version

                    **Resource**: Version
                  readOnly: true
            definingProject:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project to which the version belongs

                    **Resource**: Project
                  readOnly: true
            availableInProjects:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Projects where this version can be used

                    **Resource**: Projects
                  readOnly: true
      example:
        _links:
          self:
            href: /api/v3/versions/11
          update:
            href: /api/v3/versions/11/form
            method: POST
          updateImmediately:
            href: /api/v3/versions/11
            method: PATCH
          definingProject:
            href: /api/v3/projects/11
          availableInProjects:
            href: /api/v3/versions/11/projects
          customField4:
            href: /api/v3/custom_options/5
            title: Custom field option
        _type: Version
        id: 11
        name: v3.0 Alpha
        description:
          format: plain
          raw: This version has a description
          html: This version has a description
        startDate: '2014-11-20'
        endDate: null
        status: open
        sharing: system
        customField14: '1234567890'
    Version_schemaModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 60
        description:
          type: Formattable
          name: Description
          required: false
          hasDefault: false
          writable: true
        startDate:
          type: Date
          name: Start date
          required: false
          hasDefault: false
          writable: true
        endDate:
          type: Date
          name: Finish date
          required: false
          hasDefault: false
          writable: false
        status:
          type: String
          name: Status
          required: true
          hasDefault: false
          writable: true
          visibility: default
          _links: {}
        sharing:
          type: String
          name: Sharing
          required: true
          hasDefault: false
          writable: true
          visibility: default
          _links: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        definingProject:
          type: Project
          name: Project
          required: true
          hasDefault: false
          writable: true
          _links: {}
        customField14:
          type: String
          name: text CF
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField40:
          type: CustomOption
          name: List CF
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        _links:
          self:
            href: /api/v3/versions/schema
    VersionsModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/versions
        total: 3
        count: 3
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/versions/11
                definingProject:
                  href: /api/v3/projects/12
                availableInProjects:
                  href: /api/v3/versions/11/projects
              _type: Version
              id: 11
              name: v3.0 Alpha
              description:
                format: plain
                raw: This version has a description
                html: This version has a description
              startDate: '2014-11-20'
              endDate: null
              status: Open
            - _links:
                self:
                  href: /api/v3/versions/12
                definingProject:
                  href: /api/v3/projects/11
                availableInProjects:
                  href: /api/v3/versions/12/projects
              _type: Version
              id: 12
              name: v2.0
              description:
                format: plain
                raw: ''
                html: ''
              startDate: null
              endDate: null
              status: Closed
            - _links:
                self:
                  href: /api/v3/versions/10
                definingProject:
                  href: /api/v3/projects/13
                availableInProjects:
                  href: /api/v3/versions/13/projects
              _type: Version
              id: 10
              name: v1.0
              description:
                format: plain
                raw: ''
                html: ''
              startDate: null
              endDate: null
              status: Open
    Versions_by_ProjectModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/projects/11/versions
        total: 3
        count: 3
        _type: Collection
        _embedded:
          elements:
            - _links:
                self:
                  href: /api/v3/versions/11
                definingProject:
                  href: /api/v3/projects/11
                availableInProjects:
                  href: /api/v3/versions/11/projects
              _type: Version
              id: 11
              name: v3.0 Alpha
              description:
                format: plain
                raw: This version has a description
                html: This version has a description
              startDate: '2014-11-20'
              endDate: null
              status: Open
            - _links:
                self:
                  href: /api/v3/versions/12
                definingProject:
                  href: /api/v3/projects/11
                availableInProjects:
                  href: /api/v3/versions/12/projects
              _type: Version
              id: 12
              name: v2.0
              description:
                format: plain
                raw: ''
                html: ''
              startDate: null
              endDate: null
              status: Closed
            - _links:
                self:
                  href: /api/v3/versions/10
                definingProject:
                  href: /api/v3/projects/11
                availableInProjects:
                  href: /api/v3/versions/10/projects
              _type: Version
              id: 10
              name: v1.0
              description:
                format: plain
                raw: ''
                html: ''
              startDate: null
              endDate: null
              status: Open
    View_actionModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/actions/work_packages/create
            title: Add work package
        _type: Action
        id: work_packages/create
        name: Add work package
        description: Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission
        modules:
          - work_packages
    View_capabilitiesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/capabilities/work_packages/create/p123-567
          action:
            href: /api/v3/actions/work_packages/create
            title: Add work package
          context:
            href: /api/v3/projects/123
            title: A project
          principal:
            href: /api/v3/users/567
            title: Some user
        _type: Capability
        id: work_packages/create/p123-567
    View_global_contextModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/capabilities/context/global
        _type: CapabilityContext::Global
        id: global
    View_project_statusModel:
      type: object
      example:
        _type: ProjectStatus
        id: on_track
        name: On track
        _links:
          self:
            href: /api/v3/project_statuses/on_track
    View_time_entry_schemaModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        spentOn:
          type: Date
          name: Date
          required: true
          hasDefault: false
          writable: true
          options: {}
        hours:
          type: Duration
          name: Hours
          required: true
          hasDefault: false
          writable: true
          options: {}
        user:
          type: User
          name: User
          required: true
          hasDefault: false
          writable: false
          options: {}
        workPackage:
          type: WorkPackage
          name: Work package
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        activity:
          type: TimeEntriesActivity
          name: Activity
          required: true
          hasDefault: true
          writable: true
          location: _links
          _links: {}
        customField29:
          type: String
          name: sfsdfsdfsdfsdfdsf
          required: false
          hasDefault: false
          writable: true
          options:
            rtl: null
        _links:
          self:
            href: /api/v3/time_entries/schema
    View_user_schemaModel:
      type: object
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        login:
          type: String
          name: Username
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
          options: {}
        admin:
          type: Boolean
          name: Administrator
          required: false
          hasDefault: false
          writable: true
          options: {}
        mail:
          type: String
          name: Email
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
          options: {}
        firstName:
          type: String
          name: First name
          required: true
          hasDefault: false
          writable: false
          minLength: 1
          maxLength: 255
          options: {}
        lastName:
          type: String
          name: Last name
          required: true
          hasDefault: false
          writable: false
          minLength: 1
          maxLength: 255
          options: {}
        avatar:
          type: String
          name: Avatar
          required: false
          hasDefault: false
          writable: false
          options: {}
        status:
          type: String
          name: Status
          required: false
          hasDefault: false
          writable: true
          options: {}
        identityUrl:
          type: String
          name: Identity url
          required: false
          hasDefault: false
          writable: true
          options: {}
        language:
          type: String
          name: Language
          required: false
          hasDefault: false
          writable: true
          options: {}
        password:
          type: Password
          name: Password
          required: false
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        customField1:
          type: String
          name: User String CF
          required: false
          hasDefault: false
          writable: true
        customField2:
          type: CustomOption
          name: User List cf
          required: false
          hasDefault: false
          writable: true
          location: _links
        _links:
          self:
            href: /api/v3/users/schema
    WatchersModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The watcher list

                        **Resource**: WatchersModel
                      readOnly: true
            _embedded:
              type: object
              properties:
                elements:
                  type: array
                  readOnly: true
                  items:
                    allOf:
                      - $ref: '#/components/schemas/UserModel'
                      - description: Collection of Users
      example:
        _links:
          self:
            href: /api/v3/work_packages/14/watchers
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: User
              _links:
                self:
                  href: /api/v3/users/1
                  title: John Sheppard - j.sheppard
                showUser:
                  href: /users/1
                  type: text/html
                lock:
                  href: /api/v3/users/1/lock
                  title: Set lock on j.sheppard
                  method: POST
                delete:
                  href: /api/v3/users/1
                  title: Delete j.sheppard
                  method: DELETE
              id: 1
              login: j.sheppard
              firstName: John
              lastName: Sheppard
              mail: shep@mail.com
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.396Z'
              updatedAt: '2014-05-21T08:51:20.396Z'
            - _type: User
              _links:
                self:
                  href: /api/v3/users/2
                  title: Jim Sheppard - j.sheppard2
                lock:
                  href: /api/v3/users/2/lock
                  title: Set lock on j.sheppard2
                  method: POST
                delete:
                  href: /api/v3/users/2
                  title: Delete j.sheppard2
                  method: DELETE
              id: 2
              login: j.sheppard2
              firstName: Jim
              lastName: Sheppard
              mail: shep@mail.net
              avatar: https://example.org/users/1/avatar
              status: active
              createdAt: '2014-05-21T08:51:20.396Z'
              updatedAt: '2014-05-21T08:51:20.396Z'
    WeekDayCollectionModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        This week days collection

                        **Resource**: WeekDayCollectionModel
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  description: The array of week days.
                  minItems: 7
                  maxItems: 7
                  items:
                    $ref: '#/components/schemas/WeekDayModel'
      example:
        _type: Collection
        total: 7
        count: 7
        _links:
          self:
            href: /api/v3/days/week
        _embedded:
          elements:
            - _type: WeekDay
              day: 1
              name: Monday
              working: true
              _links:
                self:
                  href: /api/v3/days/week/1
                  title: Monday
            - _type: WeekDay
              day: 2
              name: Tuesday
              working: true
              _links:
                self:
                  href: /api/v3/days/week/2
                  title: Tuesday
            - _type: WeekDay
              day: 3
              name: Wednesday
              working: true
              _links:
                self:
                  href: /api/v3/days/week/3
                  title: Wednesday
            - _type: WeekDay
              day: 4
              name: Thursday
              working: true
              _links:
                self:
                  href: /api/v3/days/week/4
                  title: Thursday
            - _type: WeekDay
              day: 5
              name: Friday
              working: true
              _links:
                self:
                  href: /api/v3/days/week/5
                  title: Friday
            - _type: WeekDay
              day: 6
              name: Saturday
              working: false
              _links:
                self:
                  href: /api/v3/days/week/6
                  title: Saturday
            - _type: WeekDay
              day: 7
              name: Sunday
              working: false
              _links:
                self:
                  href: /api/v3/days/week/7
                  title: Sunday
    WeekDayCollectionWriteModel:
      type: object
      required:
        - _type
        - _embedded
      properties:
        _type:
          type: string
          enum:
            - Collection
        _embedded:
          type: object
          required:
            - elements
          properties:
            elements:
              type: array
              description: The array of week days.
              minItems: 1
              maxItems: 7
              items:
                allOf:
                  - $ref: '#/components/schemas/WeekDayWriteModel'
                  - type: object
                    required:
                      - _links
                    properties:
                      _links:
                        allOf:
                          - $ref: '#/components/schemas/WeekDaySelfLinkModel'
      example:
        _type: Collection
        _embedded:
          elements:
            - _type: WeekDay
              working: true
              _links:
                self:
                  href: /api/v3/days/week/1
            - _type: WeekDay
              working: true
              _links:
                self:
                  href: /api/v3/days/week/2
            - _type: WeekDay
              working: true
              _links:
                self:
                  href: /api/v3/days/week/4
            - _type: WeekDay
              working: false
              _links:
                self:
                  href: /api/v3/days/week/6
            - _type: WeekDay
              working: false
              _links:
                self:
                  href: /api/v3/days/week/7
    WeekDayModel:
      type: object
      required:
        - _type
        - day
        - name
        - working
      properties:
        _type:
          type: string
          enum:
            - WeekDay
        day:
          type: integer
          description: The week day from 1 to 7. 1 is Monday. 7 is Sunday.
          readOnly: true
          minimum: 1
          maximum: 7
        name:
          type: string
          description: The week day name.
        working:
          type: boolean
          description: '`true` for a working week day, `false` otherwise.'
        _links:
          allOf:
            - $ref: '#/components/schemas/WeekDaySelfLinkModel'
      example:
        _type: WeekDay
        day: 5
        name: Friday
        working: false
        _links:
          self:
            href: /api/v3/day/week/5
            title: Friday
    WeekDaySelfLinkModel:
      type: object
      description: Identify a particular week day by its href.
      properties:
        self:
          allOf:
            - $ref: '#/components/schemas/Link'
            - description: |-
                This week day resource link.

                **Resource**: WeekDay
              readOnly: true
      example:
        self:
          href: /api/v3/days/week/3
          title: Wednesday
    WeekDayWriteModel:
      type: object
      description: Describes a week day as a working day or a non-working day (weekend).
      required:
        - _type
        - working
      properties:
        _type:
          type: string
          enum:
            - WeekDay
        working:
          type: boolean
          description: '`true` for a working day. `false` for a weekend day.'
      example:
        _type: WeekDay
        working: false
    Wiki_PageModel:
      type: object
      required:
        - title
      properties:
        id:
          type: integer
          description: Identifier of this wiki page
          readOnly: true
          exclusiveMinimum: 0
        title:
          type: string
          description: The wiki page's title
        _links:
          type: object
          properties:
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Attach a file to the wiki page

                    # Conditions

                    **Permission**: edit wiki page
                  readOnly: true
      example:
        _type: WikiPage
        id: 72
        title: A wiki page with a name
        _embedded:
          project:
            _type: Project...
            id: 12
        _links:
          self:
            href: /api/v3/wiki_pages/72
          attachments:
            href: /api/v3/wiki_pages/72/attachments
          addAttachment:
            href: /api/v3/wiki_pages/72/attachments
            method: post
          project:
            href: /api/v3/projects/12
            title: some project
    Work_PackageModel:
      type: object
      required:
        - subject
        - _links
      properties:
        id:
          type: integer
          description: Work package id
          readOnly: true
          minimum: 1
        lockVersion:
          type: integer
          description: The version of the item as used for optimistic locking
          readOnly: true
        subject:
          type: string
          description: Work package subject
        _type:
          type: string
          enum:
            - WorkPackage
          readOnly: true
        description:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: The work package description
        scheduleManually:
          type: boolean
          description: If false (default) schedule automatically.
        readonly:
          type: boolean
          description: If true, the work package is in a readonly status so with the exception of the status, no other property can be altered.
        startDate:
          type: string
          format: date
          description: Scheduled beginning of a work package
        dueDate:
          type: string
          format: date
          description: Scheduled end of a work package
        date:
          type: string
          format: date
          description: Date on which a milestone is achieved
        derivedStartDate:
          type: string
          format: date
          description: Similar to start date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.
          readOnly: true
        derivedDueDate:
          type: string
          format: date
          description: Similar to due date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.
          readOnly: true
        duration:
          type: string
          format: duration
          description: |-
            **(NOT IMPLEMENTED)** The amount of time in hours the work package needs to be completed.
            Not available for milestone type of work packages.
          readOnly: true
        estimatedTime:
          type: string
          format: duration
          description: Time a work package likely needs to be completed excluding its descendants
        derivedEstimatedTime:
          type: string
          format: duration
          description: Time a work package likely needs to be completed including its descendants
          readOnly: true
        ignoreNonWorkingDays:
          type: boolean
          description: |-
            **(NOT IMPLEMENTED)** When scheduling, whether or not to ignore the non working days being defined.
            A work package with the flag set to true will be allowed to be scheduled to a non working day.
          readOnly: true
        spentTime:
          type: string
          format: duration
          description: |-
            The time booked for this work package by users working on it

            # Conditions

            **Permission** view time entries
          readOnly: true
        percentageDone:
          type: integer
          description: Amount of total completion for a work package
          minimum: 0
          maximum: 100
        derivedPercentageDone:
          type: integer
          description: Amount of total completion for a work package derived from itself and its descendant work packages
          readOnly: true
          minimum: 0
          maximum: 100
        createdAt:
          type: string
          format: date-time
          description: Time of creation. Can be writable by admins with the `apiv3_write_readonly_attributes` setting enabled.
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the work package.
          readOnly: true
        _links:
          type: object
          required:
            - self
            - schema
            - ancestors
            - attachments
            - author
            - children
            - priority
            - project
            - status
            - type
          properties:
            addAttachment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Attach a file to the WP

                    # Conditions

                    **Permission**: edit work package
                  readOnly: true
            addComment:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Post comment to WP

                    # Conditions

                    **Permission**: add work package notes
                  readOnly: true
            addRelation:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Adds a relation to this work package.

                    # Conditions

                    **Permission**: manage wp relations
                  readOnly: true
            addWatcher:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Add any user to WP watchers

                    # Conditions

                    **Permission**: add watcher
                  readOnly: true
            customActions:
              type: array
              readOnly: true
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A predefined action that can be applied to the work package.

                      **Resource**: CustomAction
                    readOnly: true
            previewMarkup:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: Post markup (in markdown) here to receive an HTML-rendered response
                  readOnly: true
            removeWatcher:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Remove any user from WP watchers

                    # Conditions

                    **Permission**: delete watcher
                  readOnly: true
            unwatch:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Remove current user from WP watchers

                    # Conditions

                    logged in; watching
                  readOnly: true
            update:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Form endpoint that aids in preparing and performing edits on a WP

                    # Conditions

                    **Permission**: edit work package
                  readOnly: true
            updateImmediately:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Directly perform edits on a work package

                    # Conditions

                    **Permission**: edit work package
                  readOnly: true
            watch:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Add current user to WP watchers

                    # Conditions

                    logged in; not watching
                  readOnly: true
            self:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    This work package

                    **Resource**: WorkPackage
                  readOnly: true
            schema:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The schema of this work package

                    **Resource**: Schema
                  readOnly: true
            ancestors:
              type: array
              readOnly: true
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A visible ancestor work package of the current work package.

                      **Resource**: WorkPackage

                      # Conditions

                      **Permission** view work packages
                    readOnly: true
            attachments:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The files attached to this work package

                    **Resource**: Collection
            author:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The person that created the work package

                    **Resource**: User
                  readOnly: true
            assignee:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The person that is intended to work on the work package

                    **Resource**: User
            availableWatchers:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    All users that can be added to the work package as watchers.

                    **Resource**: User

                    # Conditions

                    **Permission** add work package watchers
                  readOnly: true
            budget:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The budget this work package is associated to

                    **Resource**: Budget

                    # Conditions

                    **Permission** view cost objects
            category:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The category of the work package

                    **Resource**: Category
            children:
              type: array
              readOnly: true
              items:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - description: |-
                      A visible child work package of the current work package.

                      **Resource**: WorkPackage

                      # Conditions

                      **Permission** view work packages
                    readOnly: true
            addFileLink:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Add a file link to the work package

                    # Conditions

                    **Permission**: manage file links
            fileLinks:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Gets the file link collection of this work package

                    # Conditions

                    **Permission**: view file links
            parent:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Parent work package

                    **Resource**: WorkPackage
            priority:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The priority of the work package

                    **Resource**: Priority
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project to which the work package belongs

                    **Resource**: Project
            responsible:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The person that is responsible for the overall outcome

                    **Resource**: User
            relations:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Relations this work package is involved in

                    **Resource**: Relation

                    # Conditions

                    **Permission** view work packages
                  readOnly: true
            revisions:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Revisions that are referencing the work package

                    **Resource**: Revision

                    # Conditions

                    **Permission** view changesets
                  readOnly: true
            status:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The current status of the work package

                    **Resource**: Status
            timeEntries:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.

                    **Resource**: N/A

                    # Conditions

                    **Permission** view time entries
                  readOnly: true
            type:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The type of the work package

                    **Resource**: Type
            version:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The version associated to the work package

                    **Resource**: Version
            watchers:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    All users that are currently watching this work package

                    **Resource**: Collection

                    # Conditions

                    **Permission** view work package watchers
                  readOnly: true
      example:
        _type: WorkPackage
        _links:
          self:
            href: /api/v3/work_packages/1528
            title: Develop API
          schema:
            href: /api/v3/work_packages/schemas/11-2
          update:
            href: /api/v3/work_packages/1528
            method: patch
            title: Update Develop API
          delete:
            href: /work_packages/bulk?ids=1528
            method: delete
            title: Delete Develop API
          logTime:
            href: /work_packages/1528/time_entries/new
            type: text/html
            title: Log time on Develop API
          move:
            href: /work_packages/1528/move/new
            type: text/html
            title: Move Develop API
          attachments:
            href: /api/v3/work_packages/1528/attachments
          addAttachment:
            href: /api/v3/work_packages/1528/attachments
            method: post
          author:
            href: /api/v3/users/1
            title: METEOR Admin - admin
          customActions:
            - href: /api/v3/work_packages/1528/custom_actions/153/execute
              method: post
              title: Reset
            - href: /api/v3/work_packages/1528/custom_actions/94/execute
              method: post
              title: Forward to accounting
          responsible:
            href: /api/v3/users/23
            title: Laron Leuschke - Alaina5788
          relations:
            href: /api/v3/work_packages/1528/relations
            title: Show relations
          revisions:
            href: /api/v3/work_packages/1528/revisions
          assignee:
            href: /api/v3/users/11
            title: Emmie Okuneva - Adele5450
          priority:
            href: /api/v3/priorities/2
            title: Normal
          project:
            href: /api/v3/projects/1
            title: A Test Project
          status:
            href: /api/v3/statuses/1
            title: New
          type:
            href: /api/v3/types/1
            title: A Type
          version:
            href: /api/v3/versions/1
            title: Version 1
          availableWatchers:
            href: /api/v3/work_packages/1528/available_watchers
          watch:
            href: /api/v3/work_packages/1528/watchers
            method: post
            payload:
              user:
                href: /api/v3/users/1
          addWatcher:
            href: /api/v3/work_packages/1528/watchers
            method: post
            payload:
              user:
                href: /api/v3/users/{user_id}
            templated: true
          removeWatcher:
            href: /api/v3/work_packages/1528/watchers/{user_id}
            method: delete
            templated: true
          addRelation:
            href: /api/v3/relations
            method: post
            title: Add relation
          changeParent:
            href: /api/v3/work_packages/694
            method: patch
            title: Change parent of Bug in METEOR
          addComment:
            href: /api/v3/work_packages/1528/activities
            method: post
            title: Add comment
          parent:
            href: /api/v3/work_packages/1298
            title: nisi eligendi officiis eos delectus quis voluptas dolores
          category:
            href: /api/v3/categories/1298
            title: eligend isi
          children:
            - href: /api/v3/work_packages/1529
              title: Write API documentation
          ancestors:
            - href: /api/v3/work_packages/1290
              title: Root node of hierarchy
            - href: /api/v3/work_packages/1291
              title: Intermediate node of hierarchy
            - href: /api/v3/work_packages/1298
              title: nisi eligendi officiis eos delectus quis voluptas dolores
          timeEntries:
            href: /work_packages/1528/time_entries
            type: text/html
            title: Time entries
          watchers:
            href: /api/v3/work_packages/1528/watchers
          customField3:
            href: api/v3/users/14
        id: 1528
        subject: Develop API
        description:
          format: markdown
          raw: Develop super cool METEOR API.
          html: <p>Develop super cool METEOR API.</p>
        scheduleManually: false
        readonly: false
        startDate: null
        dueDate: null
        derivedStartDate: null
        derivedDueDate: null
        estimatedTime: PT2H
        derivedEstimatedTime: PT10H
        percentageDone: 0
        customField1: Foo
        customField2: 42
        createdAt: '2014-08-29T12:40:53.373Z'
        updatedAt: '2014-08-29T12:44:41.981Z'
    Work_Package_SchemasModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/work_packages/schemas
        total: 5
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: Schema...
              _links:
                self:
                  href: /api/v3/work_packages/schemas/13-1
            - _type: Schema...
              _links:
                self:
                  href: /api/v3/work_packages/schemas/7-6
    Work_Package_activitiesModel:
      type: object
      example:
        _links:
          self:
            href: /api/v3/work_packages/1/revisions
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _type: Activity
              _links:
                self:
                  href: /api/v3/activity/1
                workPackage:
                  href: /api/v3/work_packages/1
                user:
                  href: /api/v3/users/1
              id: 1
              details: []
              comment:
                format: markdown
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T08:51:20.396Z'
              updatedAt: '2014-05-21T09:14:02.324Z'
              version: 1
            - _type: Activity
              _links:
                self:
                  href: /api/v3/activity/2
                workPackage:
                  href: /api/v3/work_packages/1
                user:
                  href: /api/v3/users/1
              id: 2
              details: []
              comment:
                format: markdown
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T09:51:22.769Z'
              updatedAt: '2014-05-21T10:14:02.927Z'
              version: 2
    Work_PackagesModel:
      allOf:
        - $ref: '#/components/schemas/CollectionModel'
        - type: object
          required:
            - _links
            - _embedded
          properties:
            _links:
              type: object
              required:
                - self
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - description: |-
                        The work package collection

                        **Resource**: WorkPackageCollection
                      readOnly: true
            _embedded:
              type: object
              required:
                - elements
              properties:
                elements:
                  type: array
                  items:
                    $ref: '#/components/schemas/Work_PackageModel'
      example:
        _links:
          self:
            href: /api/v3/work_packages
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
            - _hint: Work package resource shortened for brevity
              _type: WorkPackage
              _links:
                self:
                  href: /api/v3/work_packages/1
              id: 1
            - _hint: Work package resource shortened for brevity
              _type: WorkPackage
              _links:
                self:
                  href: /api/v3/work_packages/2
              id: 2
    WorkPackagePatchModel:
      type: object
      required:
        - lockVersion
      properties:
        lockVersion:
          type: integer
          description: The version of the item as used for optimistic locking
        subject:
          type: string
          description: Work package subject
        description:
          allOf:
            - $ref: '#/components/schemas/Formattable'
            - description: The work package description
        scheduleManually:
          type: boolean
          description: If false (default) schedule automatically.
        startDate:
          type: string
          format: date
          description: Scheduled beginning of a work package
        dueDate:
          type: string
          format: date
          description: Scheduled end of a work package
        date:
          type: string
          format: date
          description: Date on which a milestone is achieved
        estimatedTime:
          type: string
          format: duration
          description: Time a work package likely needs to be completed excluding its descendants
        ignoreNonWorkingDays:
          type: boolean
          description: |-
            **(NOT IMPLEMENTED)** When scheduling, whether or not to ignore the non working days being defined.
            A work package with the flag set to true will be allowed to be scheduled to a non working day.
          readOnly: true
        spentTime:
          type: string
          format: duration
          description: |-
            The time booked for this work package by users working on it

            # Conditions

            **Permission** view time entries
          readOnly: true
        percentageDone:
          type: integer
          description: Amount of total completion for a work package
          maximum: 100
        createdAt:
          type: string
          format: date-time
          description: Time of creation
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Time of the most recent change to the work package
          readOnly: true
        _links:
          type: object
          properties:
            assignee:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The person that is intended to work on the work package

                    **Resource**: User
            budget:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The budget this work package is associated to

                    **Resource**: Budget

                    # Conditions

                    **Permission** view cost objects
            category:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The category of the work package

                    **Resource**: Category
            parent:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    Parent work package

                    **Resource**: WorkPackage
            priority:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The priority of the work package

                    **Resource**: Priority
            project:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The project to which the work package belongs

                    **Resource**: Project
            responsible:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The person that is responsible for the overall outcome

                    **Resource**: User
            status:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The current status of the work package

                    **Resource**: Status
            type:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The type of the work package

                    **Resource**: Type
            version:
              allOf:
                - $ref: '#/components/schemas/Link'
                - description: |-
                    The version associated to the work package

                    **Resource**: Version
      examples:
        - subject: Upgrade hangar 25
          lockVersion: 0
          description:
            format: markdown
            raw: we need more place for new TIE Advanced
            html: <p>we need more place for new TIE Advanced</p>
          scheduleManually: false
          _links:
            responsible:
              href: /api/v3/users/23
              title: Palpatine
            assignee:
              href: /api/v3/users/33
              title: Darth Vader
            priority:
              href: /api/v3/priorities/2
              title: Normal
            project:
              href: /api/v3/projects/1
              title: Galactic Conquest
            status:
              href: /api/v3/statuses/1
              title: New
            type:
              href: /api/v3/types/11
              title: DeathStarUpgrades
            version:
              href: /api/v3/versions/1
              title: Version 1
            parent:
              href: /api/v3/work_packages/1298
              title: ct'hulhu f'tagn
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
tags:
  - description: |-
      ## Связи

      Ссылки на другие ресурсы в API представлены единообразно с помощью так называемых объектов ссылок.

      ### Локальные свойства

      | Свойство | Описание | Тип | Обязательно | Может иметь значение Null | По умолчанию |
      |:---------:| ------------------------------------------------------------------------ | ------- |:--------:|:--------:| ----------- |
      | href | URL-адрес ресурса, на который ссылается ссылка (может быть относительным) | Строка |    ✓     |    ✓     |             |
      | название | Репрезентативная метка для ресурса | Строка | | | |
      | templated | Если значение true, то `href` содержит части, которые необходимо заменить на client | Boolean | | | false |
      | method | HTTP-глагол, используемый при запросе ресурса | String | | | GET |
      | полезная нагрузка | Полезная нагрузка, которую необходимо отправить в запросе для достижения желаемого результата | Строка | | | не указано |
      | идентификатор| Необязательный уникальный идентификатор объекта ссылки | Строка | | | не указано |

      Все объекты link *должны* содержать свойство `href`, хотя оно может быть и `null`. Таким образом, следующий
      объект link является допустимым: `{ "href": null }`, тогда как `{ }` не является допустимым объектом link.
      Значение `"href": null` заключается в том, что ссылка на ресурс отсутствует.
      Например, рабочий пакет без назначенного пользователя по-прежнему будет содержать ссылку на назначенного пользователя, но его `href` будет `null`.

      Если присутствует `title`, клиент может отображать заголовок для пользователя при обращении к ресурсу.

      Шаблонные ссылки - это ссылки, которые содержат заменяемые клиентом части. Заменяемые части заключены в фигурные скобки. Например
      , ссылка `api/v3/example/{id}` сама по себе не является полной, но клиенту необходимо заменить строку `{id}`.
      На данный момент API не указывает допустимые значения для замены.

      `method` указывает, какой HTTP-глагол клиент *должен* использовать при переходе по ссылке по назначению.

      Если указана `payload`, она должна быть отправлена в качестве тела запроса для достижения желаемого результата (например, для выполнения
      действия, представленного ссылкой). Если `payload` не указана, то либо нет полезной нагрузки для отправки, либо в объекте link не указана допустимая полезная
      нагрузка. Полезная нагрузка также может быть немного шаблонной. Если свойство `templated` имеет значение true, полезная нагрузка может содержать заменяемые части
      в своих строках (например, `{ "href": "/api/v3/examples/{example_id}" }`).

      Примечание: При записи ссылок (например, во время операции `PATCH`) принимаются только изменения в `href`.
      Изменения во всех остальных свойствах будут ** автоматически проигнорированы**.

      Для ресурсов, невидимых клиенту (например, из-за отсутствия разрешений), ссылка будет содержать
      uri `urn:meteor-org:api:v3:undisclosed` вместо URL-адреса. Это указывает на существование значения
      , не раскрывая фактического значения. Примером этого является родительский проект. Ресурс проекта, который сам по себе может быть
      виден клиенту, может содержать ссылку на родительский проект, невидимый тому же клиенту. Преимущество раскрытия информации о существовании
      родителя перед сокрытием заключается в том, что клиент может принять обоснованное решение о том, сохранить ли существующую ссылку
      или обновить ее. Отправка ‘{ "href": "urn:meteor-org:api:v3:undisclosed" }` для ресурса приведет к сохранению
      исходного значения. Это особенно полезно, если клиент создает и обновляет ресурсы на основе объекта полезной нагрузки, предоставленного
      как часть формы, как рекомендуется при взаимодействии с API.

      ## Ошибки

      В случае ошибки API выдаст соответствующий код состояния HTTP.
      Для ответов со статусом HTTP `4xx` и `5xx` текст всегда будет содержать один объект error.
      Объекты ошибок должны предоставлять клиенту дополнительные сведения о причине ошибочного ответа.

      ### Общие ошибки

      * Для объектов Error в качестве `_type` задано значение `Error`

      * `errorIdentifier` служит уникальным (и машиночитаемым) идентификатором конкретной причины ошибки
          * Для каждого кода состояния HTTP может быть несколько возможных идентификаторов ошибки
          * Для каждого идентификатора ошибки может быть несколько возможных кодов состояния HTTP
          * "Список идентификаторов ошибок" определяет возможные соответствия между статусом HTTP и идентификатором ошибки

      * `message` содержит понятное для человека краткое сообщение с описанием ошибки
          * Оно * необязательно* содержит конкретную информацию, например, какие разрешения были необходимы для выполнения действия
          * Оно локализуется в зависимости от предпочтений пользователей
          * Оно * не должно * содержать HTML или другой вид разметки
          * Сообщения об ошибках формируют полные предложения, включая знаки препинания

      ##### Пример

      ```json
      {
        "_type": "Error",
        "errorIdentifier": "urn:meteor-org:api:v3:errors:InternalServerError",
        "message": "An internal server error occurred. This is not your fault."
      }
      ```

      ### Информация о встроенной ошибке

      Ошибки могут дополнительно содержать встроенные объекты, содержащие дополнительную информацию.

      #### Сведения об ошибке

      Под встроенным ключом `details` может быть объект, описывающий ошибку более подробно. Например, если
      ошибка затрагивает определенное поле, это поле может быть определено там.

      ##### Пример

      ```json
      {
        "_type": "Error",
        "errorIdentifier": "urn:meteor-org:api:v3:examples:ExampleError",
        "message": "This is an example error.",
        "_embedded": {
          "details": {
            "_type": "ExampleErrorDetailInformation",
            "erroneousField": "subject"
          }
        }
      }
      ```

      #### Множество объектов error

      Для упрощения реализации базовых клиентов гарантируется, что текст ответа всегда содержит только один объект error.
      Однако допускается, что объект error * объединяет* другие объекты error с ключом `errors`, тем самым объединяя их.

      `errorIdentifier` такого объекта всегда является `urn:meteor-org:api:v3:errors:MultipleErrors`. В сообщении может быть либо описана одна из
      встроенных ошибок, либо просто указано, что произошло несколько ошибок.

      ##### Пример

      ```json
      {
        "_type": "Error",
        "errorIdentifier": "urn:meteor-org:api:v3:errors:MultipleErrors",
        "message": "Multiple fields violated their constraints.",
        "_embedded": {
          "errors": [
            {
              "_type": "Error",
              "errorIdentifier": "urn:meteor-org:api:v3:errors:PropertyConstraintViolation",
              "...": "..."
            },
            {
              "_type": "Error",
              "errorIdentifier": "urn:meteor-org:api:v3:errors:PropertyConstraintViolation",
              "...": "..."
            }
          ]
        }
      }
      ```

      ### Список идентификаторов ошибок

      * `urn:meteor-org:api:v3:errors:InvalidQuery` (**HTTP 400**)
      Запрос содержал значение, которое не соответствовало ожиданиям сервера

      * `urn:meteor-org:api:v3:errors:InvalidRenderContext` (**HTTP 400**)
      Клиент указал контекст рендеринга, который не существует

      * `urn:meteor-org:api:v3:errors:InvalidRequestBody` (**HTTP 400**)
      Формат текста запроса не соответствовал ожиданиям серверов.

      * `urn:meteor-org:api:v3:errors:InvalidSignal` (**HTTP 400**)
      Клиент указал параметр, недоступный на ресурсе, например, потому, что на нем не существует свойства/ссылки.

      * `urn:meteor-org:api:v3:errors:InvalidUserStatusTransition` (**HTTP 400**)
      Клиент использовал недопустимый переход при попытке изменить статус учетной записи пользователя.

      * `urn:meteor-org:api:v3:errors:Unauthenticated` (**HTTP 401**)
      Клиент должен пройти проверку подлинности, чтобы получить доступ к запрошенному ресурсу.

      * `urn:meteor-org:api:v3:errors:MissingPermission` (**HTTP 403**)
      У клиента нет необходимых разрешений для выполнения запрошенного действия

      * `urn:meteor-org:api:v3:errors:NotFound` (**HTTP 404**)
      По умолчанию используется HTTP 404, когда дополнительная информация недоступна

      * `urn:meteor-org:api:v3:errors:UpdateConflict` (**HTTP 409**)
      Ресурс изменился в период между его получением и выполнением обновления

      * `urn:meteor-org:api:v3:errors:TypeNotSupported` (**HTTP 415**)
      Запрос содержал данные неподдерживаемого типа носителя (Content-Type)

      * `urn:meteor-org:api:v3:errors:PropertyConstraintViolation` (**HTTP 422**)
      Клиент попытался присвоить свойству недопустимое значение

      * `urn:meteor-org:api:v3:errors:PropertyIsReadOnly` (**HTTP 422**)
      Клиент попытался установить или изменить свойство, которое недоступно для записи

      * `urn:meteor-org:api:v3:errors:PropertyFormatError` (**HTTP 422**)
      Значение свойства было предоставлено в формате, который сервер не понимает и не принимает

      * `urn:meteor-org:api:v3:errors:PropertyMissingError` (**HTTP 422**)
      Синтаксически запрос корректен, но в нем отсутствует свойство для выполнения запрошенного действия

      * `urn:meteor-org:api:v3:errors:PropertyValueNotAvailableAnymore` (**HTTP 422**)
      Необходимо изменить неизмененное свойство, поскольку другие изменения в ресурсе делают его недоступным

      * `urn:meteor-org:api:v3:errors:ResourceTypeMismatch` (**HTTP 422**)
      Ожидалась ссылка на ресурс определенного типа, но была предоставлена ссылка на ресурс другого типа

      * `urn:meteor-org:api:v3:errors:InternalServerError` (**HTTP 500**)
      По умолчанию используется HTTP 500, если дополнительная информация недоступна

      * `urn:meteor-org:api:v3:errors:MultipleErrors`
      Произошло несколько ошибок. Более подробную информацию смотрите во встроенном массиве `errors`.

      ## Форматируемый текст

      METEOR поддерживает форматирование текста в Markdown. Свойства, содержащие форматируемый текст, имеют специальное представление в этом API. В этой спецификации их
      тип указан как `Formattable`. Их представление содержит следующие свойства:

      | Свойство | Описание | Тип | Пример | Поддерживаемые операции |
      |:--------:| -------------------------------------------------- | ------ | ---------------------------------- | -------------------- |
      | format | Указывает язык форматирования необработанного текста | Строка | markdown | ДЛЯ ЧТЕНИЯ |
      | raw | Необработанный текст, введенный пользователем | Строка | `I **am** formatted!`              | ЧТЕНИЕ / ЗАПИСЬ |
      | html | Текст, преобразованный в HTML в соответствии с форматом | String | `I <strong>am</strong> formatted!` | ЧИТАТЬ |

      На сегодняшний день `формат` может иметь одно из следующих значений:

      * `plain` - только базовое форматирование, например, вставка абзацев и разрывов строк в HTML

      * `markdown` - форматирование с использованием Markdown

      * `custom` - не существует очевидного правила форматирования, которое преобразовало бы исходную версию в HTML (используется только для свойств, доступных только для чтения).

      Обратите внимание, что `raw` - это единственное свойство, поддерживающее операцию **записи**. Свойство типа *Formattable*,
      помеченное как **чтение и запись**, будет принимать изменения только в свойстве `raw`. Изменения в `format` и `html` будут ** автоматически проигнорированы**.
      Таким образом, для внесения изменений достаточно указать только свойство `raw`.

      Если *Formattable* помечен как **доступный только для чтения**, атрибут `raw` также становится ** доступным только для чтения**.

      ##### Пример

      ```json
      {
        "format": "markdown",
        "raw": "I **am** formatted!",
        "html": "I <strong>am</strong> formatted!"
      }
      ```

      ## Даты, время, длительности и временные метки

      Представление значений, связанных со временем, в этом API осуществляется в соответствии с [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
      В этой спецификации в качестве спецификаторов типов (например, в таблицах) будут использоваться следующие термины:

      * `Date` - относится к дате ISO 8601, например "2014-05-21".

      * `DateTime` - относится к комбинированным дате и времени по стандарту ISO 8601, необязательно с указанием миллисекунд, например "2014-05-21T13:37:00Z" или "2014-05-21T13:37:00.396Z".

      * `Duration` - соответствует длительности по стандарту ISO 8601, например "P1DT18H".

      * `Timestamp` - относится к комбинированной дате и времени по стандарту ISO 8601, например "2014-05-21T13:37:00Z" или к продолжительности по стандарту ISO 8601, например "P1DT18H".
      В качестве длительности также анализируются следующие сокращенные значения: "1d", "1w", "1m", "1y", "1y-2m", "-2y".
      Он также может указывать на следующие ключевые слова, относящиеся к относительной дате: `"oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM"`.
      Часть `"HH:MM"` представляет собой часы и минуты с нулевым заполнением, например `"oneMonthAgo@21:00+00:00"`. Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC
      , связанное со временем, например, `"oneMonthAgo@21:00+02:00"` означает смещение часового пояса на +2 часа от UTC.
      Смещение может быть положительным или отрицательным, например, "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".
      Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.

      ## Цвета

      Цвета представлены в формате RGB с использованием шестнадцатеричной системы счисления, как указано в [CSS Color Module Level 3](https://www.w3.org/TR/css3-color/).
      Это символ `#`, за которым следуют три или шесть шестнадцатеричных цифр.

      ##### Пример

      ```
          red:   #ff0000 or #f00
          green: #00ff00 or #0f0
          black: #000000 or #000
          white: #ffffff or #fff
      ```

      ## Дайджесты

      Дайджесты (или хэши) - это односторонние функции, которые преобразуют данные произвольного размера в данные фиксированного размера.
      В METEOR они, например, используются для вычисления контрольных сумм для файлов (вложений).
      Вычисляемая контрольная сумма зависит от хэшированных данных и алгоритма, используемого в качестве хэш-функции.

      Поэтому все сводные данные представлены в следующем виде:

      | Свойство | Описание | Тип | Пример |
      |:---------:| -------------------------------------------------- | ------ | ---------------------------------- |
      | алгоритм | Алгоритм, используемый для вычисления дайджеста | String | md5 |
      | хэш | Вычисленный дайджест в шестнадцатеричной системе счисления | String | 64c26a8403cd796ea4cf913cda2ee4a9 |

      ##### Пример

      ```json
      {
        "algorithm": "md5",
        "hash": "64c26a8403cd796ea4cf913cda2ee4a9"
      }
      ```
    name: Базовые объекты
  - description: |-
      Всякий раз, когда клиент вызывает ресурс, который может возвращать более одного элемента, он получает коллекцию элементов.
      Однако, поскольку коллекции могут стать довольно большими, API будет возвращать не просто массив JSON, а специальный
      объект collection, который будет содержать фактические элементы во встроенном свойстве `elements`.

      Коллекции могут быть разбиты на страницы, это означает, что один ответ сервера будет содержать не все элементы коллекции,
      а только их подмножество. В этом случае клиент может отправлять дополнительные запросы для извлечения оставшихся элементов.
      Существует два способа доступа к страницам результатов разбивки коллекции на страницы с разбивкой на страницы:

      * разбивка на страницы на основе смещения

      * разбивка на страницы на основе курсора

      Доступные способы разбивки на страницы зависят от запрашиваемой коллекции. В некоторых коллекциях разбивка на страницы вообще отсутствует, что означает, что они
      всегда будут возвращать все элементы. Другие могут предлагать только один из двух методов разбивки на страницы или оба сразу.

      Коллекция также содержит метаинформацию, такую как общее количество элементов в коллекции или - в случае коллекции с разбивкой на страницы -
      количество элементов, возвращенных в этом ответе, и ссылки на действия для извлечения оставшихся элементов.

      ## Местные объекты недвижимости

      | Недвижимость | Описание | Тип | Доступность |
      |:--------:| --------------------------------------------------------------- | ------- | --------------------------- |
      | итого | Общее количество элементов, доступных в коллекции | Целое число | всегда |
      | Размер страницы | Количество элементов, которые будет содержать ответ | Целое число | при разбивке на страницы |
      | количество | Фактическое количество элементов в этом ответе | Целое число | всегда |
      | смещение | Номер страницы, запрашиваемый из коллекции с разбивкой на страницы | Целое число | при наличии смещения |
      | группы | Сводная информация о группах агрегирования | Объекте | при группировании |
      | Итоговые суммы| Агрегирование поддерживаемых значений для элементов коллекции | Объекта | при отображении сумм |

      ## Ссылки

      | Ссылка | Описание | Доступность |
      |:----------------:| ------------------------------------------------------------------------ | --------------------------- |
      | self | Ссылка на текущую страницу в коллекции | всегда |
      | changeSize | Шаблонная ссылка для изменения размера страницы, может изменить относительное положение | при разбивке на страницы |
      | jumpTo | Шаблонная ссылка для перехода к указанному смещению | при наличии смещения |
      | nextByOffset | Ссылка для получения следующей страницы элементов (на основе смещения) | при наличии смещения |
      | previousByOffset | Ссылка для получения предыдущей страницы элементов (на основе смещения) | при наличии смещения |
      | nextByCursor | Ссылка для поиска элементов, следующих за текущей страницей (на основе курсора) | при наличии курсора |
      | Предыдущий курсор | Ссылка для поиска элементов, предшествующих текущей странице (на основе курсора) | при наличии курсора |
    name: Коллекции
  - description: |-
      Объекты фильтра могут быть добавлены к нескольким конечным точкам в METEOR APIv3. С их помощью вы можете создавать мощные запросы к конечным точкам для возврата нужных вам данных.

      Все они обладают следующими основными свойствами:

      - Они состоят из трех элементов: свойства для фильтрации или определенного имени фильтра, одного или нескольких значений и оператора фильтрации, который определяет, какой запрос следует генерировать с заданными значениями

      - Вы можете комбинировать любое количество различных фильтров, которые могут быть добавлены к определениям конечных точек в этой документации по API

      - Комбинация объектов filter обрабатывается как фильтр И. Фильтры OR пока невозможны в одном запросе.

      ## Синтаксис фильтра

      Синтаксис фильтра - это объект JSON, который может быть передан в качестве параметра GET конечным точкам в виде строки JSON, закодированной в URL, которая выглядит следующим образом:

      ```json
      [
        { "<filter name>": { "operator": "<operator>", "values": [<value>, ...] } },
        // ...
      ]
      ```

      **Пример**

      Фильтрация конечной точки API рабочих пакетов для поиска рабочего пакета, который соответствует теме или идентификатору "12" и имеет статус с идентификатором=5.

      ```json
      [
        { "subjectOrId": { "operator": "**", "values": ["12"] } },
        { "status": { "operator": "=", "values": ["5"] } }
      ]
      ```

      С приведенной выше строкой JSON и закодированным URL-адресом это можно добавить в конечную точку `/api/v3/work_packages`, используя параметр `filter` для формирования URL-адреса:

      ```
      https://example.u-meteor.ru/op/api/v3/work_packages?filters=%5B%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:%5B%2212%22%5D%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:%5B%225%22%5D%7D%7D%5D
      ```

      ## Сжатие

      Поскольку приведенный выше список может стать довольно длинным, особенно если в него включено много значений фильтра, API предлагает обернуть все реквизиты запроса в свойство, сжатое в zlib и закодированное в base64 (`eprops`).
      В этом случае свойство будет включать не только фильтр, но и полный набор реквизитов запроса (например, `pageSize`, `offset` и `columns`). Таким образом, `eprops` - это объект JSON, который сжимается и кодируется.

      **Пример**

      Вместо запроса

      ```
      https://example.u-meteor.ru/op/api/v3/work_packages?filters=[%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:[%2212%22]%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:[%225%22]%7D%7D]&pageSize=10&sortBy=[[%22id%22,%20%22asc%22]]
      ```

      Который в стиле без кодировки URL-адреса будет выглядеть следующим образом

      ```
      https://example.u-meteor.ru/op/api/v3/work_packages?filters=[{"subjectOrId":{"operator":"**","values":["12"]}},{"status":{"operator":"=","values":["5"]}}]&pageSize=10&sortBy=[["id", "asc"]]
      ```

      Все реквизиты могут быть помещены внутрь объекта json

      ```json
      {
        "filters": "[{\"subjectOrId\":{\"operator\":\"**\",\"values\":[\"12\"]}},{\"status\":{\"operator\":\"=\",\"values\":[\"5\"]}}]",
        "sortBy": "[[\"id\",\"asc\"]]",
        "pageSize": 10
      }
      ```

      Пожалуйста, обратите внимание, что все объекты, которые должны быть в формате json (например, `filters`), будут закодированы дважды.

      Затем этот объект в формате json можно сжать и закодировать, а результат отправить в виде объединенного параметра `eprops`:

      ```
      https://example.u-meteor.ru/op/api/v3/work_packages?eprops=eJxtjTELwjAUhP%2FLjSWDFVwCLt2cHBz7OsT2VSKFlLwXQUv%2Bu0lXHe%2B7%2B7gN%0As1%2BUo8Ci3wiS7k8e9RovE8EWEFaOTkMsidA0BEN4uSWxFNIT2iNhyNlUV50m%0A%2BaOdf6zTLg0wkBC1e9f3gv20L52Mpa%2Ft6h588x%2BGbQ%2F5C12YN%2BM%3D%0A
      ```

      ## Доступные фильтры

      Доступность фильтров зависит от запрашиваемой конечной точки и будет указана в каждом определении конечной точки. Для рабочих пакетов вы также можете [начать использовать фильтры в модуле рабочие пакеты](https://example.u-meteor.ru/projects/openproject/work_packages), чтобы создать свой запрос, а затем просто скопировать URL-адрес из своего браузера, чтобы получить результирующие значения фильтров и их операторы.

      ## Доступные операторы

      В следующей таблице представлен список всех доступных операторов. Не все конечные точки и параметры поддерживают все значения, но этот список служит справочной таблицей для идентификации и использования операторов. При создании объекта фильтра используется символ **, указанный ниже.

      | Symbol | Описание фильтруемых свойств | Массив значений содержит |
      | ------ | ------------------------------------------------------------ | -------------------------- |
      | `=` | равны одному из заданных значений | По крайней мере, одному введенному значению |
      | `&=` | содержат все заданные значения | По крайней мере, одно введенное значение |
      | `!` | не равны ни одному из заданных значений | По крайней мере, одному введенному значению |
      | `>=` | больше или равны заданному значению | Одному числовому значению |
      | `<=` | меньше или равно заданному значению | На одно числовое значение |
      | `t-` | - заданное количество дней в прошлом | 1 целое число (дней) |
      | `t+` | - заданное количество дней в будущем | 1 целое число (дней) |
      | `<t+" | - это * меньше* заданного количества дней в будущем | 1 целое число (дней) |
      | `>t+` | это *больше, чем* заданное количество дней в будущем | 1 целое число (дней) |
      | `>t-` | меньше, чем* заданное количество дней в прошлом | 1 целое число (дней) |
      | `<t-` | больше, чем* заданное количество дней в прошлом | 1 целое число (дней) |
      | `*` | не являются нулевыми | *ничего, значения пустые* |
      | `!*` | являются нулевыми | *ничего, значения пустые* |
      | `**` | выполняет поиск по заданной строке по всем строковым атрибутам | По одному строковому значению |
      | `=d` | относятся к заданной дате | 1 ISO8601 date/datetime |
      | `<>d` | находятся между двумя заданными датами.                             | 2 ISO8601 date/datetimes |
      | `w` | есть на этой неделе | *ничего, поле values пусто* |
      | `t` | есть сегодня | *ничего, поле values пусто* |
      | `~` | содержит заданные слова (подобные SQL) в указанном порядке | По крайней мере одно строковое значение /
      | `!~` | не содержат заданных слов (подобных SQL) в указанном порядке / Хотя бы одно строковое значение |

      ​

      **Специальные операторы для рабочих пакетов**

      Некоторые дополнительные операторы используются только для рабочих пакетов:

      | Символ | Описание отфильтрованных свойств | Массив значений содержит |
      | ------ | ------------------------------------------ | -------------------------- |
      | `o` | статус рабочего пакета - *открыто* | *ничего, значения пусты* |
      | `c` | статус рабочего пакета - *закрыто* | *ничего, значения пусты* |
      | `ow` | рабочие пакеты сортируются вручную | *ничего, значения пустые* |

      Существуют также фильтры взаимосвязей для рабочих пакетов, которые содержат символы `blocks/blocked` `children/parent` `follows/precedes` `duplicates/duplicated` `partof/includes` `relates` `requires/required` в зависимости от направления связи и принимают в качестве значения идентификатор рабочего пакета это целевой узел отношения.

      **Специальные значения для логических фильтров**

      Если вы используете оператор, для которого требуются логические значения, обратите внимание, что они должны быть представлены в этой форме:

      - `['f']` для false
      - `['t']` для true
    name: Фильтры
  - description: |-
      Базовые сравнения позволяют сравнивать рабочие пакеты или коллекции рабочих пакетов по отношению к различным моментам времени.

      Это помогает ответить на такие вопросы, как:

      - Какие рабочие пакеты соответствуют определенному набору фильтров сегодня, какие рабочие пакеты соответствовали этому набору фильтров в определенный более ранний момент времени?
      - Какие свойства этих рабочих пакетов изменились по отношению к данным моментам времени?

      Этот инструмент можно использовать для анализа того, как изменился план проекта по отношению к определенной базовой дате.

      ## Запрашивает рабочие пакеты для разных временных меток

      API work-packages поддерживает параметр `timestamps` для сбора информации об одном рабочем пакете или коллекции рабочих пакетов для нескольких моментов времени.

      ```
      GET /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
      ```

      ```
      GET /api/v3/work_packages/123?timestamps=2022-01-01T00:00:00Z,PT0S
      ```

      Каждая временная метка должна быть указана в виде [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601 ) строка, либо абсолютная дата и время с указанием часового пояса, например `"2022-01-01T00:00:00Z"`, либо относительная временная метка, использующая [ISO-8601-Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations ) формат, например `"P-1Y"`, который состоит из начальной буквы `"P"`, обозначающей "период", и продолжительности. `P-1Y"` интерпретируется как относительная временная метка "1 год назад".
      Кроме того, для временных меток также может быть передан набор предопределенных ключевых слов относительной даты: `"oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM"`. Часть `"HH:MM"` обозначает часы и минуты с нулевым значением, например `"oneMonthAgo@21:00+00:00"`. Последняя часть "+ЧЧ:ММ" обозначает смещение часового пояса от UTC, связанное со временем,
      например, `oneMonthAgo@21:00+02:00"` означает смещение часового пояса на +2 часа от UTC. Смещение может быть положительным или отрицательным, например, "oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

      В качестве списка этих строк стандарта ISO-8601, разделенных запятыми, в параметр `timestamps` следует передать несколько временных меток, например `"2022-01-01T00:00:00Z,PT0S"`.

      Временные метки должны быть указаны в порядке возрастания, таким образом, чтобы первая временная метка была базовой, а последняя - текущей.

      Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.

      ## Обзор ответа

      При указании параметра `timestamps` у ответа появляется несколько дополнительных свойств:

      | Свойство | Описание | Тип | Дополнительная информация |
      | ----------------------- | -------------------------------------------------------------------------------------- | ---------------- | --------------------------------------------------- |
      | `timestamps` | Запрашиваемая временная метка, соответствующая окружающему встроенному объекту | Строке | разделу *[Временные метки](#timestamps)* ниже |
      | `attributesByTimestamp` | Атрибуты и метаинформация рабочих пакетов с соответствующими временными метками | Массив объектов | Раздел *[Атрибуты](#attributes)* ниже |
      | `matchesFilters` | Отмечает, соответствует ли рабочий пакет критериям фильтрации в соответствующей временной метке | Bool | Секции *[Соответствие фильтру](#filter-matching)* ниже |
      | `exists` | Указывает, существует ли рабочий пакет в соответствующей временной метке | Bool | Section *[Existence](#существование)* ниже |

      Каждый элемент рабочего пакета имеет `attributesByTimestamp` как `_embedded` раздел.

      Свойства `timestamp`, `matchesFilters`, и `exists` заключены в раздел `_meta`, который добавляется к каждому элементу рабочего пакета, а также к каждому элементу массива `attributesByTimestamp`.

      ```json5
      // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
      {
        "_type": "WorkPackageCollection",
        "total": 1,
      "_embedded": {
          "elements": [
      {
              "_type": "WorkPackage",
      "id": 1528,
              "subject": "Current subject of the work package",
              // other attributes ...,
              "_links": {
                "self": {
                  "href": "/api/v3/work_packages/1528?timestamps=2022-01-01T00:00:00Z,2023-03-01T01:37:10Z"
                }
              },
              "_meta": {
                "matchesFilters": true,
                "exists": true,
                "timestamp": "PT0S"
              },
              "_embedded": {
                "attributesByTimestamp": [
      {
                    "subject": "Original subject of the work package",
      "_meta": {
                      "matchesFilters": true,
                      "exists": true,
                      "timestamp": "2022-01-01T00:00:00Z"
                    },
                    "_links": {
                      "self": {
                        "href": "/api/v3/work_packages/1528?timestamps=2022-01-01T00:00:00Z"
                      }
                    },
                  },
                  {
                    "_meta": {
                      "matchesFilters": true,
                      "exists": true,
                      "timestamp": "PT0S"
                    },
                    "_links": {
                      "self": {
                        "href": "/api/v3/work_packages/1528?timestamps=2023-03-01T01:37:10Z"
                      }
                    }
                  }
                ],
              }
            }
          ]
        },
      "_links": {
          "self": {
            "href": "/api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,2023-03-01T01:37:10Z"
          }
        }
      }
      ```

      ## Метаинформация

      Каждый раздел `_meta` описывает окружающий объект метасекции, который может быть основным объектом рабочего пакета или объектом атрибутов в массиве `attributesByTimestamp`.

      Обратите внимание, что информация `_meta` о самой последней (самой правой) временной метке является избыточной: она задается как раздел `_meta` основного объекта work-package, а также как раздел `_meta` последнего объекта в массиве `attributesByTimestamp`.

      ## Временные метки

      Каждый раздел `_meta` содержит свойство `timestamp`, которое соответствует запрашиваемой `timestamp`, соответствующей объекту, описываемому в разделе `_meta`.

      `timestamp` имеет тот же формат ISO-8601, что и в параметре запроса `timestamps`, и сохраняет абсолютный или относительный характер запрашиваемой временной метки.

      Кроме того, к каждой самостоятельной ссылке, соответствующей более раннему моменту времени, также добавляется параметр запроса `timestamps`, который преобразуется в абсолютную строку ISO-8601 во время выполнения запроса. (в приведенном выше примере значение `PT0S` было преобразовано в `2023-03-01T01:37:10Z`, поскольку запрос был выполнен в это время.)

      ## Атрибуты

      Чтобы прочитать атрибуты рабочих пакетов на текущей временной метке (последней из заданных `timestamps`), проверьте атрибуты объектов рабочего пакета. Чтобы прочитать атрибуты рабочих пакетов в другие заданные временные метки, проверьте атрибуты в разделе `"_embedded"` раздела `"attributesAtTimestamp"`.

      Для экономии пропускной способности в  `"attributesByTimestamp"` включены только атрибуты, которые отличаются от атрибутов в основном объекте work-package. Атрибуты с тем же значением, что и в основном объекте work-package, не включены в раздел `"attributesByTimestamp"`.

      ```json5
      // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
      {
        "_type": "WorkPackageCollection",
      "_embedded": {
          "elements": [
      {
              "_type": "WorkPackage",
              "subject": "Current subject of the work package",
      "_meta": {
                "timestamp": "PT0S"
              },
              "_embedded": {
                "attributesByTimestamp": [
      {
                    "subject": "Original subject of the work package",
      "_meta": {
                      "timestamp": "2022-01-01T00:00:00Z"
                    }
                  },
                  {
                    "_meta": {
                      "timestamp": "PT0S"
                    }
                  }
                ],
              }
            }
          ]
        }
      }
      ```

      В приведенном выше примере последней из заданных `timestamps` является `"PT0S"` (что означает 0 секунд назад, т.е. сейчас). Атрибуты рабочего пакета на данный момент времени включены в основной объект рабочего пакета. `"subject"` рабочего пакета на отметке времени `"PT0S"` (сейчас) - это `"Current subject of the work package"`.

      В разделе `"_embedded"` `"attributesByTimestamp"` содержится запись массива для временной метки `"PT0S"`, которая является последней записью массива. Поскольку значение `"subject"` такое же, как и в главном объекте work-package, атрибут `"subject"` не указан в `"attributesByTimestamp"` для временной метки `"PT0S"`. `"subject"` рабочего пакета на отметке времени `"PT0S"` (сейчас) - это `"Current subject of the work package"`.

      В разделе `"_embedded"` `"attributesByTimestamp"` содержится запись массива для базовой временной метки `"2022-01-01T00:00:00Z"`, которая является первой записью массива. `"subject"` рабочего пакета на временной метке `"2022-01-01T00:00:00Z"` является `"Original subject of the work package"`. Он включен в `"attributesByTimestamp"` для временной метки `"2022-01-01T00:00:00Z"`, поскольку он отличается от `"subject"` в главном объекте рабочего пакета, который является `"Current subject of the work package"`.

      ## Соответствие фильтрам

      API work-packages поддерживает фильтрацию результатов запроса по одному или нескольким критериям поиска. Смотрите: [Фильтры](../filters)

      Чтобы узнать, соответствует ли рабочий пакет заданному набору критериев фильтрации в определенный момент времени, проверьте свойство `"matchesFilters"` в разделе `"_meta"` для этой временной метки:

      ```json5
      // /api/v3/work_packages?filters=...&timestamps=2022-01-01T00:00:00Z,PT0S
      {
        "_type": "WorkPackageCollection",
        "_embedded": {
          "elements": [
            {
              "_type": "WorkPackage",
              "_meta": {
                "matchesFilters": true,
                "timestamp": "PT0S"
              },
              "_embedded": {
                "attributesByTimestamp": [
                  {
                    "_meta": {
                      "matchesFilters": false,
                      "timestamp": "2022-01-01T00:00:00Z"
                    }
                  },
                  {
                    "_meta": {
                      "matchesFilters": true,
                      "timestamp": "PT0S"
                    }
                  }
                ],
              }
            }
          ]
        }
      }
      ```

      В приведенном выше примере рабочий пакет соответствует критериям фильтрации по временной метке `"PT0S"`, но не соответствует критериям фильтрации по временной метке `"2022-01-01T00:00:00Z"`.

      В другом примере может быть наоборот: рабочий пакет может соответствовать критериям фильтрации (`"matchesFilters": true`) на базовой временной метке, но больше не соответствовать критериям фильтрации (`"matchesFilters": false`) на текущей временной метке.

      Рабочий пакет включается в возвращаемую коллекцию, если он соответствует критериям фильтрации хотя бы по одной из запрошенных временных меток.

      ## Существование

      Чтобы узнать, существовал ли рабочий пакет на запрошенную временную метку, проверьте свойство `"exists"` в разделе `"_meta"` для этой временной метки:

      ```json5
      // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
      {
        "_type": "WorkPackageCollection",
        "_embedded": {
          "elements": [
            {
              "_type": "WorkPackage",
              "_meta": {
                "exists": true,
                "timestamp": "PT0S"
              },
              "_embedded": {
                "attributesByTimestamp": [
                  {
                    "_meta": {
                      "exists": false,
                      "timestamp": "2022-01-01T00:00:00Z"
                    }
                  },
                  {
                    "_meta": {
                      "exists": true,
                      "timestamp": "PT0S"
                    }
                  }
                ],
              }
            }
          ]
        }
      }
      ```

      В приведенном выше примере рабочий пакет существует с временной меткой `"PT0S"`, но не существовал с временной меткой `"2022-01-01T00:00:00Z"`.

      В другом примере может быть наоборот: рабочий пакет мог существовать (`"exists": true`) в исходное время, но мог быть удален по истечении этого времени таким образом, что он не существует (`"exists": false`) в текущее время. Однако, пожалуйста, обратите внимание, что METEOR пока не поддерживает [мягкое удаление](https://example.u-meteor.ru/projects/openproject/work_packages/40015). В настоящее время при удалении рабочего пакета также удаляется его история, так что ее больше нельзя получить через базовый API.

      Рабочий пакет включается в возвращаемую коллекцию, если он существовал хотя бы на одной из запрошенных временных меток.

      ## Пример использования

      В этом примере ruby-скрипта рабочие пакеты извлекаются на базовую дату и в их текущем состоянии. Затем объект первого рабочего пакета сравнивается с базовой датой и текущим состоянием.

      ```ruby
      # Define timestamps
      baseline_timestamp = "2022-01-01T00:00:00Z"
      current_timestamp = "PT0S"
      timestamps = [baseline_timestamp, current_timestamp]

      # Retrieve work packages
      url = URI("https://example.u-meteor.ru/op/api/v3/work_packages?timestamps=#{timestamps.join(',')}")
      response = JSON.parse(Net::HTTP.get(url), object_class: OpenStruct)
      work_packages = response.dig("_embedded", "elements")

      # Extract differing baseline attributes
      work_package = work_packages.first
      baseline_attributes = work_package.dig("_embedded", "attributesByTimestamp").first

      # Compare baseline state to current state of the work package
      if baseline_attributes.subject.present? and baseline_attributes.subject != work_package.subject
        puts "The subject of the work package has changed."
        puts "Subject at the baseline time: #{baseline_attributes.subject}"
        puts "Current subject:              #{work_package.subject}"
      end

      # Check existence
      puts "The work package did exist at the baseline time." if baseline_attributes.dig("_meta", "exists")
      puts "The work package exists at the current time." if work_package.dig("_meta", "exists")

      # Check filter matching
      puts "The work package matches the query filters at the baseline time." if baseline_attributes.dig("_meta", "matchesFilters")
      puts "The work package matches the query filters at the current time." if work_package.dig("_meta", "matchesFilters")
      ```
    name: Базовые сравнения
  - description: |-
      Этот API предоставляет формы как концепцию, облегчающую редактирование или создание ресурсов. Цель форм -:

      * сделать доступными для записи свойства ресурса для обнаружения

      * показать, какие значения могут быть установлены для свойства

      * подтвердить изменения в ресурсе и указать на ошибки проверки

      Помимо этих преимуществ, клиент может свободно выбрать немедленное редактирование ресурса без предварительной проверки с помощью формы.
      В случае неверного запроса редактирование завершится ошибкой и, тем не менее, вернет соответствующие ошибки.

      Форма связана с одним ресурсом и помогает выполнять изменения на этом ресурсе.
      При отправке в конечную точку формы с пустым текстом запроса или пустым объектом JSON
      вы получите начальную форму для связанного ресурса.
      Последующие обращения к форме должны содержать один объект JSON, как описано в форме.

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| --------------------------------------------------------------------- | -------------------------------- |
      | validate | Проверка изменений, отображение ошибок и допустимых значений для измененного ресурса | |
      | фиксация | Фактическое внесение изменений в ресурс | корректность содержимого формы |
      | Предварительный просмотр | Добавление разметки (например, markdown) для получения ответа в формате HTML | |

      ## Связанные свойства

      | Ссылка | Описание | Тип | С возможностью обнуления | Поддерживаемые операции |
      |:-------------------:| ------------------------------------------------ | ------------- | -------- | -------------------- |
      | self | Эта форма | Form | | ПРОЧИТАНА |

      ## Встроенные свойства:

      Помимо связанных свойств, формы всегда содержат три других встроенных свойства:

      * `payload`

      * `schema`

      * `validationErrors`

      Их назначение объясняется ниже.

      ### Полезная нагрузка

      Полезная нагрузка содержит отредактированную версию ресурса, которая будет изменена при фиксации формы.
      Это представление содержит все доступные для записи свойства ресурса и отражает все изменения, которые были внесены последним вызовом **validate**,
      тем самым выступая в качестве предварительного просмотра изменений.

      В случае, если клиент попытается установить недопустимое значение, недопустимое изменение также будет отражено здесь. Однако ошибка проверки (см. ниже)
      указывает на то, что фиксация этой полезной нагрузки завершится неудачей.

      Может случиться так, что установка одного свойства повлияет на допустимые значения для другого свойства. Таким образом, при изменении свойства A
      текущее значение другого свойства B может стать недействительным. Если клиент еще не касался значения B, полезная нагрузка будет
      содержать значение по умолчанию для этого свойства. Тем не менее, клиент также получит соответствующую ошибку проверки для значения B.

      Содержимое этого элемента *может* использоваться в качестве шаблона для тела запроса вызова **validate** или **commit**.

      Вызов **validate** и **commit** не обязательно должен включать все свойства, которые были определены в разделе `payload`.
      Необходимо включить только те свойства, которые вы хотите изменить, а также `lockVersion`, если он присутствует.
      Однако вы *можете* включить все свойства, отправленные в разделе `payload`.

      ### Схема

      Схема, встроенная в форму, является обычной [схемой, описывающей базовый ресурс](https://meteor-docs.gitbook.io/docs/api/endpoints/schemas/).
      Однако встроенная схема может изменяться при каждой повторной проверке формы.
      Например, возможно, что изменение типа рабочего пакета влияет на его доступные свойства,
      а также на возможные значения для определенных свойств.
      Поскольку это делает встроенную схему очень динамичной, она не включена в качестве статической ссылки.

      ### Ошибки проверки

      Подобно схеме, ошибки проверки создают словарь, где ключом является имя свойства.
      Каждое значение является объектом error, который указывает на ошибку, возникшую при проверке соответствующего свойства.
      Существуют только пары ключ-значение для свойств, которые не прошли проверку, элемент пуст, если все проверки завершились успешно.

      Однако обратите внимание, что даже в случае ошибок проверки, ответом, который вы получите от конечной точки формы, будет HTTP 200.
      Это связано с тем, что основная цель формы - помочь клиенту разобраться с ошибками проверки.

      ### Мета-объект

      Ресурсы формы могут содержать дополнительный объект `_meta`, который содержит параметры, отправляемые вместе с ресурсом,
      но которые не относятся к самому ресурсу. Например, могут быть отправлены параметры, касающиеся отправки уведомлений о действии
      , выполняемом с помощью запроса API, и о том, как отправлять уведомления.

      Каждая отдельная конечная точка будет описывать свои мета-свойства, если таковые имеются.
    name: Формы
  - description: |-
      Некоторые конечные точки, особенно те, которые возвращают ресурсы `Collection`, поддерживают сигнализацию о желаемых свойствах. С помощью сигнализации клиент
      может передать серверу свойства для включения в ответ.

      В настоящее время поддерживается только `select`, который позволяет указать подмножество свойств, интересующих клиента. Преимущество использования `select`
      заключается в сокращении времени отклика. Рассматривается возможность реализации других сигналов, в частности, расширения встроенных ресурсов за счет включения нескольких уровней встраивания
      (возможно, с названием `embed`), но на данный момент они не поддерживаются. Пожалуйста, смотрите также
      [спецификация для OData, которая вдохновила на создание этой функции](https://www.odata.org/documentation/odata-version-2-0/uri-conventions/).

      Например, ресурс `/api/v3/bogus`, который без сигнализации возвращает:

      ```json
        {
          "_type": "Collection"
          "count": 20,
          "total": 554,
          "_embedded": {
            "elements": [
              {
                "id": 1,
                "name": "Some name"
              },
              {
                "id": 9,
                "name": "Another name"
              }
            ]
          },
          "_links": {
            "self": {
              "href": "/api/v3/bogus",
              "title": "A bogus collection"
            },
            "bar": {
              "href": "/api/v3/bar",
              "title": "Foobar"
            }
          }
        }
      ```

      можно ли через сигнализацию `/api/v3/bogus?select=total,elements/name,bar` будет предложено вернуть:

      ```json
        {
          "total": 554,
          "_embedded": {
            "elements": [
              {
                "name": "Some name"
              },
              {
                "name": "Another name"
              }
            ]
          },
          "_links": {
            "bar": {
              "href": "/api/v3/bar",
              "title": "Foobar"
            }
          }
        }
      ```

      Свойство запроса `select` представляет собой разделенный запятыми список свойств, которые необходимо включить, например `select=total,elements/name,bar`.
      API также поддерживает альтернативные стили написания, такие как `select=["total","elements/name","bar"]`. Каждый отдельный элемент в списке
      - это путь внутри ресурса. Таким образом, в то время как `total` относится к свойству на верхнем уровне, `elements/name` относится к свойству `name` в
      коллекции `elements`. Для каждого свойства должен быть указан полный путь, например, `select=elements/name,elements/id`.
      Порядок в списке не влияет на выбор. Существует также подстановочный знак `*`, который приведет к выбору каждого свойства на этом уровне.
      Чтобы выбрать каждое свойство в приведенном выше примере, клиент должен будет указать `select=*,elements/*`.

      Пожалуйста, обратите внимание, что вложенность в `_embedded` и `_links` не включена в запрос prop `select`, поскольку
      ссылки в контексте HAL могут рассматриваться как свойства ресурса точно так же, как и неиспользуемые свойства, и принуждение
      клиентов к полной вложенности не повысит ясность.

      Свойства ссылки рассматриваются как единое значение, которое не может быть далее разделено. Каждое свойство в ссылке будет возвращено,
      если будет подан сигнал о выборе ссылки.

      Сигнальный флаг `select` был введен по соображениям производительности. Не все конечные точки поддерживают это, а те, которые поддерживают, часто
      позволяют выбирать только подмножество свойств своего ресурса. Конечные точки, поддерживающие запрос `select`, документированы соответствующим образом.
    name: Сигнализация
  - description: |-
      Действие - это изменение, которое можно инициировать в экземпляре METEOR.
      Это может быть создание рабочего пакета, экспорт рабочих пакетов или обновление пользователя.
      Действие также может быть чем-то таким, в чем пользователь может быть вовлечен, то есть где пользователь играет пассивную роль
      , например, когда ему назначается пакет работ.

      Возможность объединяет действие с контекстом и принципалом. Таким образом, он сообщает, какой участник может выполнять
      (или быть пассивно вовлеченным) то или иное действие в определенном контексте. Например, пользователь может иметь возможность создавать рабочие пакеты
      в рамках проекта.

      Другими словами, действие не зависит от принципала и контекста, в то время как способность - это
      связь между действием, контекстом и принципалом.

      Действия в большинстве случаев основаны на разрешениях, которые можно настроить с помощью административного пользовательского интерфейса, где администратор
      выбирает из набора разрешений, предоставляемых для каждой роли. Но есть и другие случаи, например, для того, чтобы стать правопреемником или ответственным за рабочий пакет, пользователь должен
      иметь роль, которая позволяет назначать рабочие пакеты, что не является разрешением.

      Даже если у пользователя есть такая возможность, выполнить это действие все равно может оказаться невозможным из-
      за невыполнения каких-либо других требований.
      Например, у пользователя может быть возможность обновлять рабочие пакеты, но если определенный рабочий пакет находится
      в состоянии только для чтения, этот рабочий пакет не может быть обновлен.

      * В настоящее время через api доступен только небольшой набор действий, которые на самом деле уже существуют в системе
      . Со временем они будут добавлены.*

      ## Действие

      Действие описывает, что может быть выполнено в приложении. Пока действие не будет назначено,
      что превращает его в возможность, оно остается в состоянии "может быть".

      ### Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------------:|----------------------------------------- | -------------    | -------------------------------------------------------------- | -------------------- |
      | self | Действие | Action | not null | READ |

      ### Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :---------: | ---------------------------------------------                                           | ----------- | -----------    | -------------------- |
      | id | Идентификатор действия | String | Not null | READ |
      | имя | Удобочитаемое название действия *Еще не реализовано* | String | Not null | READ |
      | описание | Описывает, что могут сделать участники, выполняющие это действие *Еще не реализовано* | String | Not null | READ |
      | модули | Объединяют действия в группы, к которым они логически принадлежат *Еще не реализовано* | []String | Not null | READ |

      ## Возможности

      Действия могут быть назначены участнику путем назначения ролей этому участнику. Например, пользователь может получить действие 'work_packages/show'
      , назначив в проекте роль под названием reader.

      Всякий раз, когда участнику назначается действие в рамках контекста, у него появляются дополнительные возможности.

      Какие именно действия могут быть выполнены с назначением роли, зависит от конфигурации этой роли.
      Конфигурация может быть изменена администраторами в рамках администрирования экземпляра METEOR.

      ### Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |-------------------- |-----------------------------------------                                                              | -------------    | --------------- | -------------------- |
      | self | Возможность | | | |
      | action | Действие, которое предоставляется участнику | Action | not null | READ |
      | контекст | Контекст, в котором участник выполняет это действие. Обычно это проект или глобальный контекст.  | Project или null | | READ |
      | участник | Участник, которому разрешено действие.                                                               | Action | not null | READ |

      ### Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------: | --------------------------------------------- | ----------- | -----------        | -------------------- |
      | id | Идентификатор действия | String | Not null | READ |
      | имя / Удобочитаемое имя для действия | String | Not null | READ |
    name: Действия и возможности
  - description: |-
      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------: | -------------    | ----                 | ----------- | -------------------- |
      | id | Идентификатор действия | Целое число | x > 0 | ПРОЧИТАНО |
      | версия | Activity version | Целое число | x > 0 | ПРОЧИТАНО |
      | комментарий | | Форматируемый | | ЧТЕНИЕ / ЗАПИСЬ |
      | подробности | | Массив форматируемых | | ПРОЧИТАННЫХ |
      | createdAt | Время создания | Дата-время | | ЧТЕНИЕ |
      | updatedAt | Время обновления | Дата-время | | ЧТЕНИЕ |

      Активность может быть либо _type `Activity`, либо _type `Activity::Comment`.
    name: Деятельность
  - description: |-
      Вложения - это файлы, которые были загружены в METEOR. Каждое вложение относится к отдельному
      контейнеру (например, к рабочему пакету или сообщению на доске объявлений).

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:|----------------------------------------------------------------------| --------------------------------------------                                                       |
      | удалить | Удаляет это вложение | **Разрешение **: редактировать в контейнере вложений или быть автором вложений без контейнера |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:----------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |
      | self | Это вложение | Attachment | not null | ПРОЧИТАНО |
      | контейнер | Объект (например, WorkPackage), содержащий вложение| Что угодно | not null | ПРОЧИТАНО |
      | автор | Пользователь, загрузивший вложение | User | not null | ПРОЧИТАНО |
      | downloadLocation | Прямая ссылка для скачивания во вложении | - | not null | ЧИТАТЬ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      |:------------:| ----------------------------------------------- | ----------- | ----------- | -------------------- |
      | id | Идентификатор вложения | Целое число | x > 0 | ЧИТАТЬ |
      | заголовок | Имя файла | Строка | не null | ЧИТАТЬ |
      | Имя файла | Имя загруженного файла | Строка | не null | ЧИТАТЬ |
      | Размер файла | Размер загружаемого файла в байтах | Целое число | x >= 0 | ЧИТАТЬ |
      | описание | Предоставленное пользователем описание файла | Можно форматировать | не равно нулю | ЧИТАТЬ |
      | ContentType | MIME-тип файлов, определенный сервером | String | not null | ДЛЯ ЧТЕНИЯ |
      | дайджест | Контрольная сумма для содержимого файлов | Дайджест | not null | ДЛЯ ЧТЕНИЯ |
      | createdAt | Время создания | Дата-время | not null | для чтения |
    name: Вложения
  - description: |-
      *Примечание: Бюджеты в настоящее время реализованы только в виде заглушки. В будущем могут быть добавлены дополнительные свойства бюджетов, однако для их отображения потребуется разрешение на просмотр бюджета.*

      ## Связанные свойства:

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |
      | self | Этот бюджет | Budget | не равен нулю | ДЛЯ ЧТЕНИЯ |

      ## Свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :---------: | ------------------------------------------- | ----------- | ----------- | -------------------- | --------------------------- |
      | id | Идентификатор бюджета | Целое число | x > 0 | ЧИТАТЬ | |
      | тема | Название бюджета | Строка | не пустая | ЧИТАТЬ | |
    name: Бюджеты
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:---------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |
      | self | Эта категория | Category | not null | ЧТЕНИЕ |
      | project | Проект этой категории | Project | not null | ЧТЕНИЕ |
      | defaultAssignee | Назначаемый по умолчанию для рабочих пакетов этой категории | Пользователь | | ЧТЕНИЕ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------: | ------------- | ------- | ----------- | -------------------- |
      | id | Идентификатор категории | Целое число | x > 0 | ЧИТАТЬ |
      | название | Название категории | Строка | | ЧИТАТЬ |
    name: Категории
  - description: |-
      Конечная точка конфигурации позволяет считывать определенные параметры конфигурации экземпляра METEOR.
      Обратите внимание, что между этой конечной точкой и настройками, которые есть в распоряжении администратора для изменения поведения приложения с помощью конфигурации, нет связи 1:1
      .переменные yml или ENV.

      На данный момент эта конечная точка разрешает доступ только к настройкам, которые считаются полезными для клиента в целом.

      Поскольку клиенты могут полагаться на сочетание как системных настроек, так и предпочтений текущего пользователя, ресурс
      использует настройки текущего пользователя, чтобы клиент мог получить оба параметра одним запросом.

      | Ссылка | Описание | Тип | С возможностью обнуления | Поддерживаемые операции |
      |:-------------------:| ------------------------------------------------ | -------------   | -------- | -------------------- |
      | self | Конфигурация | Configuration | | ЧТЕНИЕ |
      | UserPreferences | Предпочтения текущего пользователя | UserPreferences | | ЧТЕНИЕ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Условие | Поддерживаемые операции /
      | :-----------------------: | -------------------------------------------------- | ---------- | ----------------- | -------------------- |
      | maximumAttachmentFileSize | Максимально допустимый размер вложения в байтах | Целое число | | ЧТЕНИЕ |
      | perPageOptions | Шаги по увеличению размера страницы, которые будут предложены в пользовательском интерфейсе с разбивкой на страницы | Integer[] | | ЧТЕНИЕ |
      | Имя хоста | Имя хоста, настроенное для системы | Строка | | ЧТЕНИЕ |
      | activeFeatureFlags | Список всех флагов функций, которые активны | Строка[] | | ЧТЕНИЕ |
    name: Конфигурация
  - description: |-
      Пользовательские действия - это предварительно настроенный набор изменений, которые применяются к рабочему пакету.

      В настоящее время этот ресурс является заглушкой. Условия и изменения, определенные для пользовательского действия, еще не представлены в ресурсе.

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
      | Выполнить немедленно | Применить действие к рабочему пакету |

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------    | -----------           | -------------------------------- | -------------------- |
      | self | Это пользовательское действие | CustomAction | not null | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------   | -----------           | ------------ | -------------------- |
      | id | Идентификатор пользовательского действия | Целое число | x > 0 | ПРОЧИТАНО |
      | имя | Выбранное пользователем название пользовательского действия | Строка | | ПРОЧИТАНО |
      | описание | Текст, описывающий пользовательское действие | Строка | | ПРОЧИТАНО |
    name: Пользовательские действия
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
      | self | Этот пользовательский параметр | CustomOption | не равен нулю | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      |:----------------:| ---------------------------------------------- | -------- | ----------- | -------------------- |
      | id | Идентификатор | Целое число | | ЧТЕНИЕ |
      | значение | Значение, определенное для этого пользовательского параметра | Строка | | ЧТЕНИЕ |

      пользовательские параметры - это параметры списка пользовательских полей.
    name: Значения доп. полей
  - description: |-
      Документ - это файл, содержащий список вложений.

      *Пожалуйста, обратите внимание, что на данный момент конечная точка - это всего лишь заглушка.*

      ## Действия

      Пока нет

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | -------------------------------------     | -------------  | --------------------- | -------------------- | ----------------------------------------- |
      | self | Этот документ | Document | не имеет значения null | ДЛЯ ЧТЕНИЯ | |
      | project | Проект, в котором находится документ | Project | не имеет значения null | ДЛЯ ЧТЕНИЯ / ЗАПИСИ | |
      | Вложения | Вложения, принадлежащие документу | []Вложение | не имеет значения null | ДЛЯ ЧТЕНИЯ / ЗАПИСИ | |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
      | id | Идентификатор документа | Целое число | x > 0 | ЧИТАТЬ | |
      | заголовок | Название, выбранное для коллекции документов | Строка | не более 60 символов | ЧИТАТЬ | |
      | описание | Текст, описывающий документы | Строка | | ЧИТАТЬ | |
      | createdAt | Время создания документа в | DateTime | | READ | |
    name: Документы
  - description: Подлежит определению
    name: Ссылки на файлы
  - description: |-
      Сетка - это макет страницы или ее части в приложении METEOR. Она определяет структуру (количество строк и количество столбцов), а также содержимое страницы.

      Содержимое определяется с помощью `GridWidget`. Хотя `GridWidget` - это отдельный тип, он не является самостоятельным ресурсом, поскольку является неотъемлемой частью `Grid`.

      В зависимости от того, для какой страницы определена сетка, различные виджеты могут быть размещены в сетке. На странице также могут быть указаны разрешения, необходимые для доступа, создания или изменения таблицы.

      В настоящее время на следующих страницах используются таблицы:

      + /my/page: "Моя страница", доступная каждому пользователю. Только пользователь может получить доступ к своей "моей странице" или изменить ее.

      * Действие удаления пока не поддерживается*

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| -------------------------------------------------------------------- | ----------------------------------------------------------------                                    |
      | Немедленно обновлять | Непосредственно вносить изменения в эту сетку | **Разрешение**: зависит от страницы, для которой определена сетка |
      | обновлять | Проверять изменения в сетке с помощью ресурса формы перед фиксацией | **Разрешение **: зависит от страницы, для которой определена сетка |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | --------------------------------------------------------------    | -------------       | --------------------- | -------------------- | -----------------------------------------     |
      | self | Эта сетка | Grid | not null | ДЛЯ ЧТЕНИЯ | |
      | страница | URL страницы, для которой определена сетка | url | not null | ДЛЯ ЧТЕНИЯ / ЗАПИСИ | Страница не может быть изменена после создания |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | --------      | ---------------------------------------------------- | -------------------- | --------------              |
      | id | Идентификатор сетки | Целое число | x > 0 | ЧТЕНИЕ | |
      | Количество строк | Количество строк в сетке | Целое число | x > 0 | ЧТЕНИЕ/ЗАПИСЬ | |
      | columnCount | Количество столбцов в сетке | Целое число | x > 0 | ДЛЯ ЧТЕНИЯ/ЗАПИСИ | |
      | Виджеты | Набор GridWidget, выбранный для сетки | []GridWidget | | ДЛЯ ЧТЕНИЯ/ЗАПИСИ | Виджеты не могут перекрываться |
      | Создано на момент создания сетки | Дата-время | | ЧТЕНИЕ | |
      | Обновлено на момент последнего обновления сетки | Дата-время | | ЧТЕНИЕ | |

      ## Свойства GridWidget

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | ---------------------------------------------------------                          | -------- | ---------------------------------------------------- | -------------------- | -------------- |
      | идентификатор | Тип виджета | Строка | не null | ЧТЕНИЕ/ЗАПИСЬ | |
      | startRow | Строка, с которой начинается виджет (с 1) | Целое число | x > 0, x < Количество строк в таблице, x < endRow | ЧТЕНИЕ/ЗАПИСЬ | |
      | endRow | Строка, в которой заканчивается виджет. Область виджета не включает саму строку.        | Целое число | x > 0, x <= Количество строк в таблице, x > startRow | ЧТЕНИЕ/ЗАПИСЬ | |
      | Начальный столбец | Столбец, с которого начинается виджет (на основе 1) | Целое число | x > 0, x < Количество столбцов в таблице, x < Конечный столбец | ЧТЕНИЕ/ЗАПИСЬ | |
      | Конечный столбец | Столбец, которым заканчивается виджет. Область виджета не включает сам столбец.  | Целое число | x > 0, x <= Количество столбцов в таблице, x > Начальный столбец | ЧТЕНИЕ/ЗАПИСЬ | |
      | параметры | Хэш значений параметров, настраиваемый с помощью виджета | JSON | | ЧТЕНИЕ/ЗАПИСЬ | |
    name: Сетки
  - description: |-
      Группы - это наборы пользователей. Они поддерживают назначение/отмену назначения нескольких пользователей для проекта за одну операцию.

      У этого ресурса пока нет конечных точек формы и схемы. Но поскольку все свойства статичны, клиенты все равно должны иметь возможность
      работать с этим ресурсом.

      ## Действия

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |
      | удалить | Удаляет группу.                                                   | **Разрешение**: Администратор |
      | Немедленно обновить | Обновляет атрибуты группы.                                      | **Разрешение**: Администратор |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      |:-----------:       |--------------------------------------------------------------                                                                                                         | -------------     | --------------------- | -------------------- | -----------------------------------------                                |
      | self | Эта группа | Group | not null | READ | |
      | членства | Ссылка на список всех членов группы. Список будет включать только те членства в проектах, в которых запрашивающий пользователь имеет необходимые разрешения. | MemberCollection | | ЧТЕНИЕ | ** Разрешение **: просмотр участников или управление участниками в любом проекте |
      | участники | Список всех пользователей, которые являются членами группы | UserCollection | | ЧТЕНИЕ/ЗАПИСЬ | **Разрешение**: управлять участниками любого проекта для чтения и администратором для записи |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | ---------------------------------------------------------  | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------    |
      | id | Идентификатор группы | Целое число | x > 0 | ЧИТАТЬ | |
      | имя | Полное имя группы, форматирование зависит от настроек экземпляра | Строка | | ЧТЕНИЕ/ЗАПИСЬ | Администратор для записи |
      | createdAt | Время создания | Дата-время | | ДОСТУПНО только для чтения администраторами |
      | updatedAt | Время последнего изменения пользователя | Дата-время | | Доступно только для чтения администраторами |
    name: Группы пользователей
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
      | self | Этот текст справки | HelpText | not null | ЧИТАТЬ |
      | Редактировать текст | Редактировать ввод текста справки | текст/htm | Admin | ЧИТАТЬ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :---------:        | --------------------------- | -------------------- | ----------- | -------------------- |
      | id | Идентификатор текста справки | Целое число | x > 0 | ЧИТАТЬ |
      | атрибут | Имя атрибута | Строка | | ЧИТАТЬ |
      | Заголовок атрибута | Строка | | ЧИТАТЬ |
      | HelpText | Содержимое текста справки | Форматируемое | | ЧИТАТЬ |
    name: Справка по полям
  - description: |-
      Пользователи и группы могут стать участниками проекта. Такому членству также будет присвоена одна или несколько ролей. Таким образом, членство определяет права, которыми пользователь обладает в рамках проекта.

      Существуют также членства, которые не регулируют разрешения в рамках определенного проекта, а скорее регулируют глобальные разрешения. Среди разрешений, которые могут быть предоставлены подобным образом, есть разрешения на "Создание проекта" и "Управление пользователями". Эти членства не связаны с проектом.

      При создании и обновлении учетных записей пользователям с новыми и обновленными учетными записями может быть отправлено пользовательское сообщение. Это сообщение может быть предоставлено в группе `_meta`.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------------:|-----------------------------------------                      | -------------    | -------------------------------------------------------------- | -------------------- |
      | self | Это членство | Membership | not null | ЧИТАТЬ |
      | project | Проект, для которого предоставлено членство | Project | | ЧИТАТЬ |
      | роли | Список ролей, предоставленных пользователю или группе в проекте | RoleCollection | not null | ЧИТАТЬ |
      | участник | Пользователь или группа, которым было предоставлено членство | Пользователь или группа | не имеет значения null | ДЛЯ ЧТЕНИЯ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |
      | id | Идентификатор участника | Целое число | x > 0 | ПРОЧИТАНО |
      | createdAt | Время создания | Дата-время | не равно нулю | ПРОЧИТАНО |
      | updatedAt | Время последнего обновления | Дата-время | не равно нулю | ПРОЧИТАНО |

      ## Мета-параметры

      | Мета-свойство | Описание | Тип | Ограничения | Поддерживаемые операции |Условие |
      | :------------------------: | ---------------------------------------------------                                  | ----         | ----------- | -------------------- |----------|
      | Уведомительное сообщение | Сообщение, включенное в электронное письмо, отправляемое пользователям с новыми или обновленными подписками | Форматируемое | | ДЛЯ ЧТЕНИЯ/ЗАПИСИ | |
    name: Участники проекта
  - description: |-
      Новости - это статьи, написанные пользователями с целью информирования других пользователей о важной информации.

      ## Действия

      Пока нет

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | -------------------------------------| -------------  | --------------------- | -------------------- | ----------------------------------------- |
      | self | Эта новость | News | not null | ДЛЯ ЧТЕНИЯ | |
      | project | Проект, в котором находится новость | Project | not null | ДЛЯ ЧТЕНИЯ / ЗАПИСИ | |
      | автор | Пользователь, создавший новость | User | not null | ДЛЯ ЧТЕНИЯ | |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
      | id | Идентификатор новости | Целое число | x > 0 | ЧИТАТЬ | |
      | заголовок | Строка | максимум 60 символов | ЧИТАТЬ | |
      | краткое содержание | Строка | максимум 255 символов | ЧИТАТЬ | |
      | описание | Основная часть новости со всеми подробностями | Строка | | ПРОЧИТАНО | |
      | Создано в | Момент создания новости | Дата и время | | ПРОЧИТАНО | |
    name: Новости
  - description: |-
      Уведомления создаются с помощью уведомляемых действий в METEOR.
      Уведомления запускаются в результате действий, выполняемых пользователями в системе, например, при редактировании пакета работ, но также могут быть отправлены по
      истечении времени, например, когда пользователь получает уведомление о просроченном пакете работ.

      Эта конечная точка возвращает только уведомления из приложения.

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| -------------------------------------------------------------------- | --------------------------- |
      | read_ian | Помечает уведомление как прочитанное | уведомление непрочитано |
      | unread_ian | Помечает уведомление как непрочитанное | уведомление прочитано |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | ----------------------------------------          | --------------  | --------------------- | -------------------- | ----------------------------------------- |
      | self | Это уведомление | Notification | not null | ПРОЧИТАНО | |
      | project | Проект, содержащий ресурс | Project | not null | ПРОЧИТАН | |
      | actor | Пользователь, который вызвал уведомление | User | | ПРОЧИТАЛ | необязательно |
      | ресурс | Ресурс, к которому относится уведомление | Полиморфный | не нулевой | ПРОЧИТАННЫЙ | |
      | действие / Журнал, к которому относится уведомление | Полиморфный | | ПРОЧИТАННЫЙ | необязательный |
      | подробности | Список объектов, включающий подробную информацию | Полиморфный | | ПРОЧИТАННЫЙ | необязательный |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | --------      | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
      | id | Первичный ключ | Целое число | | ПРОЧИТАНО | |
      | subject | Тема уведомления | Строка | | ПРОЧИТАНА | |
      | причина | Причина, вызывающая уведомление | Строка | | ПРОЧИТАНА | |
      | readIAN | Прочитано ли уведомление | Логическое значение | | ПРОЧИТАНО | |
    name: Уведомления
  - description: Подлежит определению
    name: Oauth 2
  - description: |-
      Представляет собой сообщение на доске объявлений. Сообщения также называются сообщениями в приложении.

      *В настоящее время этот ресурс является закрытым*

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:|--------------------------------| ---------------------------------------                                                                                          |
      | Добавить приложение | Прикрепить файл к сообщению | **Разрешение**: редактировать сообщения |

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |
      | self | Это сообщение | Post | not null | ЧИТАТЬ |
      | вложения / Файлы, прикрепленные к этому сообщению | Коллекция | | ЧИТАТЬ |
      | project | Проект, к которому принадлежит сообщение | Project | not null | ЧИТАТЬ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |
      | id | Идентификатор этой записи | Целое число | x > 0 | ПРОЧИТАНО |
      | тема | Тема сообщения | Строка | не null | ПРОЧИТАНО |
    name: Публикации
  - description: |-
      Участники - это суперкласс пользователей, групп и пользователей-заполнителей. Эта конечная точка возвращает всех участников
      в объединенной коллекции, но может быть отфильтрована, например, для возврата только групп или пользователей.
    name: Принципалы
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |
      | self | Этот приоритет | Priority | не равен нулю | ДЛЯ ЧТЕНИЯ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :---------: | ------------------------------------------- | ---------- | ----------- | -------------------- |
      | id | Идентификатор приоритета | Целое число | x > 0 | ПРОЧИТАНО |
      | имя | Имя приоритета | Строка | не пустая | ПРОЧИТАНО |
      | позиция | Индекс сортировки приоритета | Целое число | x > 0 | ПРОЧИТАНО |
      | IsDefault | Указывает, является ли это значение значением по умолчанию | Boolean | | READ |
      | isActive | Указывает, доступен ли приоритет | Boolean | | READ |
    name: Приоритеты
  - description: |-
      Проекты - это контейнеры, структурирующие информацию (например, рабочие пакеты, вики-страницы) в более мелкие группы. Их можно использовать в классическом подходе к управлению проектами, а также при структурировании работы по отделам.

      Как контейнеры, они также управляют поведением элементов внутри них. Одним из наиболее важных аспектов этого является то, что проекты ограничивают права доступа, назначая участникам определенный набор разрешений (ролей).

      ## Действия

      | Ссылка | Описание | Условие |
      |:--------------------------:  |----------------------------------------------------------------------| --------------------------------- |
      | обновить | Сформировать конечную точку, которая помогает в обновлении этого проекта | **Разрешение **: редактировать проект |
      | Немедленно обновить | Напрямую обновить этот проект | **Разрешение**: редактировать проект |
      | удалить | Удалить этот проект / **Разрешение**: администратор |
      | createWorkPackage | Конечная точка формы, помогающая в подготовке и создании рабочего пакета | **Разрешение**: добавлять рабочие пакеты |
      | createWorkPackageImmediately | Непосредственно создает рабочий пакет в проекте | **Разрешение**: добавлять рабочие пакеты |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |Условие |
      | :----------: | -------------                                                                                                       | ----          | ----------- | -------------------- |-----------------------------------------                                                  |
      | self | Этот проект | Project | not null | READ | |
      | предки | Массив всех предков проекта, начиная с корневого узла (первый элемент) и заканчивая родительским (последний элемент).        | Collection | not null | ЧТЕНИЕ / **Разрешение** просмотр проекта в проекте-предшественнике. Невидимые проекты будут опущены |
      | категории | Категории, доступные в этом проекте | Collection | not null | ЧТЕНИЕ | |
      | типы | Types, доступные в этом проекте | Коллекции | not null | ДЛЯ ЧТЕНИЯ | **Разрешение**: просмотр рабочих пакетов или управление типами |
      | версии | Versions, доступные в этом проекте | Коллекции | not null | для ЧТЕНИЯ | **Разрешение**: просмотр рабочих пакетов или управление версиями |
      | членство | Членство в проекте | Коллекции | не является нулевым | ДЛЯ ЧТЕНИЯ | **Разрешение**: просмотр участников |
      | Рабочие пакеты | Workpackages этого проекта | Коллекции | не являются нулевыми | для ЧТЕНИЯ | |
      | родительский | Родительский проект проекта | Project | | Разрешение на ЧТЕНИЕ/ЗАПИСЬ | *** редактирование проекта |
      | status | Обозначает статус проекта, то есть, находится ли проект на верном пути, в опасности или испытывает проблемы.                | ProjectStatus | | ЧТЕНИЕ/ЗАПИСЬ | **Разрешение** редактировать проект |

      В зависимости от пользовательских полей, определенных для проектов, могут существовать дополнительные ссылки.

      Обратите внимание, что ссылки parent и ancestor могут содержать "нераскрытый uri" `urn:meteor-org:api:v3:undisclosed` в случае
      , если проект-предок определен, но у клиента нет разрешения на его просмотр. Смотрите
      [общее введение в свойства ссылок](https://meteor-docs.gitbook.io/docs/api/basic-objects/#local-properties) для получения дополнительной информации.

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------------------:| -------------                                                                                         | ----              | -----------                          | -------------------- |
      | id | Идентификатор проекта | Целое число | x > 0 | ЧТЕНИЕ/ЗАПИСЬ |
      | идентификатор | | Строка | | ЧТЕНИЕ/ЗАПИСЬ |
      | имя | | Строка | | ЧТЕНИЕ/ЗАПИСЬ |
      | активный | Указывает, активен ли проект в данный момент или уже заархивирован | Логическое значение | | ЧТЕНИЕ/ЗАПИСЬ |
      | statusExplanation | Текст, детализирующий и объясняющий, почему проект имеет указанный статус | Форматируемый | | ЧТЕНИЕ/ЗАПИСЬ |
      | общедоступный | Указывает, доступен ли проект для всех | Логическое значение | | ЧТЕНИЕ/ЗАПИСЬ |
      | описание | | Форматируемое | | ЧТЕНИЕ/ЗАПИСЬ |
      | createdAt | Время создания | Дата-время | | ЧТЕНИЕ |
      | UPDATEDATAT | Время последнего изменения в проекте | DateTime | | READ |

      В зависимости от пользовательских полей, определенных для проектов, могут существовать дополнительные свойства.
    name: Проекты
  - description: |
      Запрос определяет, как можно фильтровать и отображать рабочие пакеты.
      Клиенты могут задать запрос один раз, сохранить его и использовать в дальнейшем для загрузки того же набора фильтров и параметров отображения.

      ## Действия

      | Ссылка | Описание | Состояние |
      |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
      | star | Повышает статус запроса до "помеченного" | **Разрешение**: сохранять запросы для собственных запросов, управлять общедоступными запросами для общедоступных запросов; Присутствует только в том случае, если запрос еще не помечен |
      | снять пометку | Удаляет статус "помечено" | **Разрешение**: сохранять запросы для собственных запросов, управлять общедоступными запросами для общедоступных запросов; Присутствует только в том случае, если запрос помечен звездочкой |
      | обновление | Используйте процесс на основе формы для проверки запроса перед сохранением | **Разрешение**: просмотр рабочих пакетов |
      | Немедленно обновлять | Сохранять запрос без использования процесса, основанного на форме, для руководства | **Разрешение **: сохранять запросы для собственных запросов, управлять общедоступными запросами для общедоступных запросов; |

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------------: | ------------------------------------------------------                                                                                         | --------------------- | ------------------------------------------- | -------------------- |
      | self | Этот запрос | Query | not null | READ |
      | пользователь | Пользователь, которому принадлежит этот запрос | User | not null | READ |
      | проект | Проект, в котором выполняется этот запрос | Project | | READ |
      | столбцы | Упорядоченный список столбцов запроса. Столбцы, сопоставленные свойствам WorkPackage, определяют, какие свойства WorkPackage отображать | []QueryColumn | | ЧИТАТЬ |
      | Выделенные атрибуты | **Доступны только при наличии действительного корпоративного токена:** Список столбцов запросов, которые должны быть выделены, если для параметра `highlightingMode` установлено значение `inline`.   | []Столбец запросов | | ЧИТАТЬ /
      | sortBy | Упорядоченный список запросов для сортировки. Указывает свойство WorkPackage, по которому будут упорядочены результаты, а также направление | []QuerySortBy | | ЧТЕНИЯ |
      | groupBy | С помощью свойства WorkPackage результаты этого запроса группируются по | String | | READ |
      | результаты | Список рабочих пакетов, возвращаемый путем применения фильтров, сортировки и группировки, определенных в запросе | WorkPackageCollection | | READ |
      | schema | Схема этого запроса | Schema | | READ |

      Пожалуйста, обратите внимание, что все перечисленные выше свойства также будут внедрены при возврате отдельных запросов, но не будут внедрены при возврате списка запросов. Независимо от того, будут ли эти свойства внедрены или нет, они могут быть изменены в будущем.

      Свойства `columns` и `highlightedAttributes` будут перемещены в `Views::WorkPackagesTable`, поэтому не рекомендуется указывать их непосредственно в запросе.

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | -------------------------------------------------------------------------------------------------------- | --------------------- | ----------------------------------------------------------------------------------- | -------------------- |
      | id | Идентификатор запроса | Целое число | x > 0 | ЧТЕНИЕ |
      | имя | Имя запроса | Строка | | ЧТЕНИЕ/ЗАПИСЬ |
      | filters | Набор фильтров запросов, которые будут применяться к рабочим пакетам для определения результирующих рабочих пакетов| []QueryFilterInstance | | ЧТЕНИЕ/ЗАПИСЬ |
      | суммы | Должны ли отображаться суммы (поддерживаемых свойств)?                                                          | Логическое значение | | ЧТЕНИЕ/ЗАПИСЬ |
      | timelineVisible | Должен ли отображаться режим временной шкалы?                                                                       | Логическое значение | / ЧТЕНИЕ|ЗАПИСЬ /
      | timelineLabels | Какие метки отображаются на временной шкале, пустые по умолчанию | QueryTimelineLabels | | ЧТЕНИЕ/ЗАПИСЬ |
      | timelineZoomLevel| На каком уровне масштабирования должна отображаться временная шкала?                                                     | Строка | дни, недели, месяцы, кварталы, годы | ЧТЕНИЕ/ЗАПИСЬ |
      | Временные метки / Временные метки для фильтрации при отображении измененных атрибутов в рабочих пакетах.| []Временная метка | | **Значения старше 1 дня принимаются только при наличии действительного корпоративного токена.**| ЧТЕНИЕ/ЗАПИСЬ |
      | Режим выделения | Какой режим выделения должен быть в таблице?                                                           | Строка | нет, встроенный, статус, приоритет, тип | ЧТЕНИЕ/ЗАПИСЬ |
      | Показывать иерархии | Должен ли быть включен режим иерархии?                                                                    | Логическое значение | | ЧТЕНИЕ/ЗАПИСЬ |
      | скрытый | Должен ли запрос быть скрыт из списка запросов?                                                          | Boolean | | ЧТЕНИЕ/ЗАПИСЬ |
      | public | Могут ли пользователи, кроме владельца, видеть запрос?                                                               | Boolean | | ЧТЕНИЕ/ЗАПИСЬ |
      | отмечен звездочкой | Должен ли запрос быть выделен для пользователя?                                                             | Boolean | | ЧТЕНИЕ |
      | createdAt | Время создания | DateTime | not null | ЧТЕНИЕ |
      | updatedAt | Время последнего изменения запроса | DateTime | not null | ЧТЕНИЕ |

      Запрос, который не назначен проекту (`"project": null`), называется глобальным запросом. Глобальные запросы фильтруют рабочие пакеты независимо от проекта, которому они назначены. Таким образом, для этих запросов существует другой набор фильтров.

      Свойство `hidden` устарело, поскольку оно заменено понятием `Views`. Запрос, который не скрыт, будет иметь `View`, в то время как скрытый запрос - нет.

      Свойства `timelineVisible`, `timelineLabels`, `timelineZoomLevel`, `highlightingMode` и `showHierarchies` будут перенесены в более подходящие представления (вероятно, `Views::WorkPackagesTable`), поэтому не рекомендуется использовать их непосредственно в запросе.

      ## Экземпляр фильтра запроса

      Параметр QueryFilterInstance определяет фильтрацию, применяемую к списку рабочих пакетов. Как таковой, он содержит:

      * используемый тип фильтра (`QueryFilter`)

      * используемый оператор (`QueryOperator`)

      * список значений

      Список значений может состоять либо из списка ссылок, либо из списка строк. Если значения являются примитивными (например, целое число, логическое значение, дата), они будут отображаться как строки, а QueryFilterInstance будет иметь свойство `values`.

      ```json
        {
          "_type": "DueDateQueryFilter",
          "name": "Finish date",
          "values": [
            "1"
          ],
          "_links": {
            "filter": {
              "href": "/api/v3/queries/filters/dueDate",
              "title": "Finish date"
            },
            "operator": {
              "href": "/api/v3/queries/operators/<t+",
              "title": "in less than"
            }
            "schema": {
              "href": "/api/v3/queries/filter_instance_schemas/dueDate"
            }
          }
        }
      ```

      Если значения не являются первичными (например, пользователь, проект), они будут указаны как объекты, а в QueryFilterInstance будет ссылка `values`.

      ```json
        {
          "_type": "AssigneeQueryFilter",
          "name": "Assignee",
          "_links": {
            "filter": {
              "href": "/api/v3/queries/filters/assignee",
              "title": "Assignee"
            },
            "operator": {
              "href": "/api/v3/queries/operators/=",
              "title": "is"
            },
            "schema": {
              "href": "/api/v3/queries/filter_instance_schemas/assignee"
            },
            "values": [
              {
                "href": "/api/v3/users/1",
                "title": "METEOR Admin"
              }
            ]
          }
        }

      ```
    name: Запросы
  - description: |-
      Запрос может указывать на столбец QueryColumn для обозначения свойств рабочего пакета, которые клиент должен отображать для рабочих пакетов, возвращаемых в качестве результатов запроса. Столбцы сопоставляются с рабочим пакетом с помощью свойства id. Столбцы запросов существуют трех типов: `QueryColumn::Property`, `QueryColumn::RelationType` и `QueryColumn::RelationOfType`.

      ## Действия

      На данный момент действия не определены.

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------ | -----------                                                                       | --------------------------------               | -------------------- |
      | self | Этот столбец запроса | QueryColumn::Property, QueryColumn::RelationType или QueryColumn::RelationOfType | не является нулевым | ДЛЯ ЧТЕНИЯ |
      | type | Отношения типа указывают на | Type | not null, существует только в столбце запроса::Relation | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
      | id | Идентификатор столбца запроса | Строка | не null | ЧТЕНИЕ |
      | имя / Имя столбца запроса | Строка | не null | ЧТЕНИЕ |
    name: Столбцы запросов
  - description: |-
      На QueryFilter может ссылаться экземпляр фильтра, определенный для запроса, для обозначения фильтрации, применяемой к результатам рабочего пакета запроса. Этот ресурс не является экземпляром применимого фильтра, а скорее типом, который может иметь применимый фильтр.

      ## Действия

      На данный момент действия не определены.

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
      | self | Этот фильтр запроса | QueryFilter | not null | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
      | id | Идентификатор запроса | Строка | не null / ЧТЕНИЕ |
    name: Фильтры запросов
  - description: |-
      QueryOperator может ссылаться на QueryFilter для обозначения оператора, который должен быть применен к отношению фильтра.

      ## Действия

      На данный момент действия не определены.

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------ | -----------   | -------------------------------- | -------------------- |
      | self | Этот оператор запроса | QueryOperator | не имеет значения null | ДЛЯ ЧТЕНИЯ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
      | id | Идентификатор оператора запроса | Строка | не null | ЧТЕНИЕ |
      | имя / Имя оператора запроса | Строка | не null | ЧТЕНИЕ |
    name: Операторы запросов
  - description: |-
      Запрос может ссылаться на QuerySortBy для обозначения сортировки, применяемой к результатам рабочего пакета запроса. Он содержит столбцы для сортировки, а также направление (по возрастанию/по убыванию)

      ## Действия

      На данный момент действия не определены.

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------                                                                                                                                                                    | ----------- | -------------------------------- | -------------------- |
      | self | Этот запрос сортируется по | QuerySortBy | not null | READ |
      | столбцу | Столбцу запроса для сортировки.                                                                                                                                                                                               | QueryColumn | not null | READ |
      | направление | Направление, в котором должен быть отсортирован столбец запроса. Это свойство идентифицируется по URI (`urn:meteor-org:api:v3:queries:directions:asc` или `urn:meteor-org:api:v3:queries:directions:desc`), а не по URL-адресу. | | not null | ЧТЕНИЕ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
      | id | QuerySortBy id | Строка | не null | ЧТЕНИЕ |
      | имя / QuerySortBy имя | строка | не null | ЧТЕНИЕ |
    name: Сортировка запроса
  - description: |-
      QueryFilterInstanceSchema - это схема, предназначенная специально для описания QueryFilterInstances. Поскольку поведение FilterInstances в отношении свойства `values` отличается друг от друга в зависимости от выбранного фильтра, схема QueryFilterInstanceSchema явно перечисляет зависимости в своем свойстве `_dependencies`. Поскольку свойство, вызывающее разницу, является выбранным фильтром, это свойство связано. Кроме того, QueryFilterInstanceSchema имеет ту же структуру, что и схема.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :-------------------: | ----------------------------------------            | -------------             | --------    | -------------------- |
      | self | Этот параметр QueryFilterInstanceSchema (такой же, как для schema) | Параметр QueryFilterInstanceSchema | not null | ДЛЯ ЧТЕНИЯ |
      | фильтр | Фильтр, для которого предназначена эта схема | Filter | not null | ДЛЯ ЧТЕНИЯ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------------------ | ------------ | -------------------------------- | -------------------- |
      | name | Описывает атрибут name | Схема поля | not null | ДЛЯ ЧТЕНИЯ |
      | фильтр | Запрос по имени | Схема поля | not null | ДЛЯ ЧТЕНИЯ |
    name: Схема фильтров
  - description: |-
      Рабочие пакеты могут быть связаны друг с другом по-разному.

      ```
      +--------------+                            +--------------+
      |              | 1                        1 |              |
      | Work package +-------------+--------------+ Work package |
      |              | from        |           to |              |
      +--------------+             |              +--------------+
                            +------+-------+
                            |   Relation   |
                            +--------------+
                            | type         |
                            | reverseType  |
                            | description  |
                            | lag        |
                            +--------------+
      ```

      ## Действия

      | Ссылка | Описание | Состояние |
      |:-------------------:| -------------------------------------------------------------------- | --------------------------------------------- |
      | обновить | Обновляет связь между двумя рабочими пакетами с помощью формы | **Разрешение**: управление связями между рабочими пакетами |
      | Обновить немедленно | Обновляет связь между двумя рабочими пакетами | **Разрешение**: управление связями между рабочими пакетами |
      | удалить | Уничтожает связь между двумя рабочими пакетами | **Разрешение**: управление связями между рабочими пакетами |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      |:-------------:|-------------------------------------- | ------------- | ----------- | -------------------- | --------------------------------------------- |
      | self | Это отношение | Relation | not null | ЧТЕНИЕ | **Разрешение**: просмотр рабочих пакетов |
      | схема | Схема этого отношения | Schema | not null | ЧТЕНИЕ | |
      | из | исходящего рабочего пакета | WorkPackage | not null | ЧТЕНИЕ | **Разрешение**: просмотр рабочих пакетов |
      | к | Рабочему пакету отношение заканчивается на | WorkPackage | not null | ЧТЕНИЕ | **Разрешение**: просмотр рабочих пакетов |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------------:| ------------------------------------------------------------- | ------- | ------------------------------------------------------------------------------------------------------------- | -------------------- |
      | id | Идентификатор отношения | Целое число | x > 0 | ЧИТАТЬ |
      | имя | Интернационализированное имя такого рода отношения | Строка | | ЧИТАТЬ
      | введите | Какой тип связи (блокирует, предшествует и т.д.) | Строка | в: связывает, дублирует, дублируется, блокирует, заблокирован, предшествует, следует, включает, часть, требует, обязательна для ЧТЕНИЯ | ЗАПИСИ /
      | reverseType | Тип отношения с точки зрения другого WP | String | in: относится, дублирует, дублируется, блокирует, предшествует, следует, включает, часть, требует, обязательный | READ |
      | описание | Краткий текст, дополнительно описывающий отношение | Строка | | ЧТЕНИЕ / ЗАПИСЬ |
      | задержка* | Количество дней между закрытием `from` и началом `to`| Целое число | x >= 0 | ЧТЕНИЕ / ЗАПИСЬ |

      \* Применимо только для некоторых типов связей, таких как "следует". Вы можете проверить, используя конечную точку связи по схеме
      в `/api/v3/relations/schema/{type}`.
    name: Отношения
  - description: |-
      В METEOR пользовательский ввод для многих свойств может быть отформатирован с помощью *Markdown*.
      Используя соответствующую конечную точку рендеринга, можно преобразовать пользовательские форматированные входные данные в HTML и, таким образом
      , получить предварительный просмотр отображаемого текста.

      Запрос к конечной точке рендеринга всегда должен иметь MIME-тип `text/plain`.
      Тело запроса - это фактическая строка, которая должна быть отображена в виде HTML-строки.
    name: Предварительное просмотр
  - description: |-
      Ревизии - это наборы обновлений файлов в контексте репозиториев, связанных в METEOR.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:----------------:| --------------------------------------------------------------------------------------------------| ------------- | ----------- | -------------------- |
      | self | Эта редакция | Revision | not null | READ |
      | project | Проект, к которому относится редакция | Project | not null | READ |
      | автор | Пользователь, который добавил эту редакцию, если имя автора было сопоставлено с именем пользователя в METEOR | User | | READ |
      | showRevision | URL-адрес для просмотра репозитория (за пределами APIv3), показывающий эту версию | - | not null | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      |:-----------------------:| ------------------------------------------------------------------------------------------------------------------------------------------------------------| ----------- | ----------- | -------------------- |
      | id | Идентификатор редакции, присвоенный METEOR | Целое число | x > 0 | ПРОЧИТАНО |
      | идентификатор | Исходный SCM-идентификатор редакции (например, полный SHA-хэш) | Строка | не null | ПРОЧИТАНО |
      | formattedIdentifier | Форматированный SCM-идентификатор ревизии (например, сокращенный однозначный SHA-хэш). Во многих случаях может совпадать с идентификатором | String | not null | READ |
      | Имя автора | Имя автора, который внес эту ревизию. Обратите внимание, что это имя извлекается из репозитория и не идентифицирует пользователя в METEOR.      | String | not null | READ |
      | сообщение | Сообщение о фиксации версии | Formattable | not null | READ /
      | createdAt | Время, когда эта редакция была передана в репозиторий | DateTime | not null | READ |
    name: Ревизии
  - description: |-
      Когда участники (группы или пользователи) назначаются проекту, они получают роли в этом проекте. Роли регулируют доступ к определенным ресурсам с помощью настроенных для них разрешений.

      В настоящее время это всего лишь заглушка.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :-------------------: | ----------------------------------------- | ------------- | -------------------------------| -------------------- |
      | self | Эта роль | Role | not null | ПРОЧИТАНА |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :---------: | --------------------------------------------- | ----------- | ----------- | -------------------- |
      | id | Идентификатор роли | Целое число | x > 0 | ПРОЧИТАНО |
      | имя | Название роли | Строка | не null | ПРОЧИТАНО |
    name: Роли
  - description: |-
      Корневой ресурс содержит ссылки на доступные ресурсы в API. Перейдя по этим ссылкам
      , клиент сможет найти дополнительные ресурсы в API.

      * Примечание: В настоящее время нет доступных действий со списком проектов.*
      *Таким образом, клиент должен знать ссылки на проекты, но не может (пока) их обнаружить.*

      | Ссылка | Описание | Тип | С возможностью обнуления | Поддерживаемые операции | Условие |
      | :-------------------: | ------------------------------------------------ | --------------- | -------- | -------------------- | ---------                                        |
      | конфигурация | Конфигурация этого экземпляра METEOR | Конфигурация | | ЧТЕНИЕ | |
      | пользователь | Пользователь, который в данный момент вошел в систему | Пользователь | | ПРОЧИТАЛ | вошел в систему |
      | UserPreferences | Предпочтения пользователя, вошедшего в систему | UserPreference | | ЧИТАТЬ | вошедшего в систему |
      | приоритеты | Список доступных приоритетов | Коллекция | | ЧИТАТЬ | **Разрешение ** Просматривать рабочие пакеты в любом проекте |
      | статусы | Список доступных статусов рабочих пакетов | Коллекция | | ЧТЕНИЕ | **Разрешение** Просмотр рабочих пакетов в любом проекте |
      | типы | Список доступных типов рабочих пакетов | Коллекция | | ЧТЕНИЕ | **Разрешение** Просмотр рабочих пакетов в любом проекте |
      | Рабочие пакеты | Список всех рабочих пакетов | Коллекция | | ЧТЕНИЕ | **Разрешение** Просмотр рабочих пакетов в любом проекте |
      | пользователи | Список всех пользователей | Коллекция | | ЧТЕНИЕ | **Разрешение** Администратор |

      ## Локальные свойства

      | Свойство | Описание | Тип | Состояние | Поддерживаемые операции |
      | :-----------------------: | ---------------------------------------------------- | ---------- | ---------------------------------        | -------------------- |
      | InstanceName | Имя экземпляра METEOR | Строка | | ЧТЕНИЕ |
      | coreVersion | Номер версии ядра METEOR для экземпляра | Строка | **Разрешение** требуются права администратора | ЧТЕНИЕ |
    name: Корень
  - description: |-
      Схема предоставляет подробную информацию о свойствах ресурса.

      Схема представлена словарем, ключами которого являются названия свойств ресурса, а значениями -
      объекты, описывающие соответствующее свойство.

      Эти объекты называются **схемой полей** и образуют ядро представления схемы.
      Каждый из них может содержать свой собственный раздел `_links` и `_embedded`.

      ## Связанные свойства

      | Ссылка | Описание | Тип | С возможностью обнуления | Поддерживаемые операции |
      |:-------------------:| ---------------------------------------- | ------------- | -------- | -------------------- |
      | self | Эта схема | Schema | | ПРОЧИТАНА |

      ## Локальные свойства

      | Свойство | Описание | Тип /
      | :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |
      | _dependencies | Список зависимостей между значением одного свойства и другим свойством | SchemaDependency |

      Свойство `_dependencies` содержит список зависимостей, которые существуют между значением, выбранным для одного из свойств описываемого ресурса, и структурой ресурса. В зависимости от значения могут существовать дополнительные свойства, или свойствам могут быть разрешены другие значения. Дополнительную информацию смотрите в разделе [SchemaDependency](https://meteor-docs.gitbook.io/docs/api/endpoints/schemas/#schema-dependencies).

      # Схема поля

      ## Связанные свойства

      | Свойство | Описание | Условия |
      | :--------------:     | -------------------------------------------------------------- | ---------------------------------------------        |
      | allowedValues | Список ресурсов, которые могут быть назначены текущим пользователем.     | Не будет существовать, если присутствует параметр `allowedValuesSchemas`. |
      | allowedValuesSchemas | Ссылка на схемы, более подробно описывающие свойство.               | Не будет существовать, если присутствует параметр `allowedValues`.        |

      `allowedValues` могут содержать либо список канонических ссылок, либо только одну ссылку на ресурс коллекции.
      Это оптимизация, позволяющая эффективно обрабатывать как небольшие списки ресурсов (которые могут быть перечислены встроенно), так и большие
      списки ресурсов (требующие одного или нескольких отдельных запросов).

      `allowedValuesSchemas` в редких случаях (например, для [запроса](https://meteor-docs.gitbook.io/docs/api/endpoints/queries/)) заменяет `allowedValues`. Это делается, когда нет фиксированного набора разрешенных значений. Вместо этого допустимые значения должны соответствовать схеме или одному из списка схем, которые должны быть указаны сами по себе.

      Для любого данного свойства будет существовать только одна из ссылок (`allowedValues`, `allowedValuesSchemas`).

      ## Локальные свойства

      | Свойство | Описание | Тип | По умолчанию |
      |:-----------------:| ---------------------------------------------------------------------------------- | ------------ | ------- |
      | type | Тип данных свойства | Метатип | |
      | name | Удобочитаемое название свойства, которое может отображаться в пользовательском интерфейсе | String | |
      | обязательно | Если значение true, это свойство не имеет значения null | Логическое значение | true |
      | hasDefault | Если значение true, то это свойство будет иметь значение по умолчанию, если оно не указано | Boolean | false |
      | доступно для записи | Если значение false не разрешено ** изменять** значение свойства | Boolean | true |
      | minLength | Значение свойства должно содержать не менее указанного количества символов | Целое число | 0 |
      | maxLength | Значение свойства должно содержать не более указанного количества символов | Целое число | ∞ |
      | RegularExpression | Значение свойства должно соответствовать заданному регулярному выражению (если оно не равно null) | String | null |
      | location |, если присутствует, содержит ссылку на местоположение свойства в формате JSON | String | null |
      | description | Если присутствует, содержит форматируемое, понятное пользователю описание | Formattable | null |
      | устаревшее | Если присутствует, клиент должен учитывать наличие свойства deprecated | Boolean | false |

      Все вышеперечисленные свойства, которые не имеют значения по умолчанию, должны присутствовать в схеме.
      Для свойств, которые имеют значение по умолчанию, клиент может принять значение по умолчанию, если свойство отсутствует.

      Обратите внимание, что регулярные выражения, используемые в API, соответствуют правилам [регулярных выражений Ruby](https://ruby-doc.org/core-2.2.6/Regexp.html).

      ### Свойство Location

      Свойство location дает подсказку о том, где найти свойство resource:

        * если параметр не задан, он находится в атрибутах верхнего уровня ресурса;
        * если задано значение `_links`, он находится под путем `_links.propertyName`;
        * если задано значение `_meta`, оно находится по пути `_meta.propertyName`.

      Например, для схемы рабочего пакета в поле schema свойства `user`
      для свойства `location` задано значение `_links`. Это означает, что свойство `user` будет найдено по пути
      `_links.user` полезной нагрузки json ресурса рабочего пакета.

      # Зависимости схемы

      `SchemaDependency` описывает зависимости между значением, выбранным для свойства ресурса
      , и структурой ресурса. Таким образом, описываются дополнительные свойства или изменения в свойстве
      .

      `SchemaDependency` никогда не будет описывать исчезновение свойства, только его появление. Как таковой, он
      всегда предоставляет дополнительную информацию. Для свойства, которое зависит от
      значения другого свойства, это может привести к тому, что оно вообще не будет указано в самой схеме ресурса. Это будет иметь
      место, если существование свойства в целом будет зависеть. Если только один из аспектов
      свойства (например, *доступный для записи*) изменится на выбранное значение, само свойство
      уже будет указано в схеме, но в нем не будет зависимого аспекта.

      Учитывая, что SchemaDependencies будут добавлять только информацию и тип содержимого JSON, клиент должен иметь возможность легко объединить два объекта, схему и зависимость, в один объект.

      SchemaDependencies всегда встроены в атрибут схемы `_dependencies`. Как таковые, они не являются независимо существующими ресурсами. Следовательно, у них нет ссылки на `self`.

      ## Связанные свойства

      У SchemaDependency нет ссылок.

      ## Локальные свойства

      | Свойство | Описание | Тип |
      | :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |
      | on | Имя свойства, от которого существует зависимость | строка |
      | зависимости | Дополнения к схеме, сгруппированные по значению зависимого свойства | объекта |

      В следующем фрагменте приведены примеры объектов, которые могут быть найдены в качестве значения свойства `dependencies`.:

      ```json
      {
        "_type": "SchemaDependency",
        "on": "someProperty",
        "dependencies": {
          "1": {
            "loremIpsum": {
              "type": "User",
              "name": "Lorem ipsum",
              "required": true,
              "hasDefault": false,
              "writable": true,
              "location": "_links",
              "description": {
                  "format": "markdown",
                  "raw": "A description for field Lorem ipsum. This may contain [links](https://example.com).",
                  "html": "<p>A description for field Lorem ipsum. This may contain <a href=\"https://example.com\">links</a>.</p>"
              };
              "_links": {
                "allowedValues": {
                  "href": "/api/v3/some/path/to/users"
                }
              }
            }
          },
          "2": {
            "loremIpsum": {
              "type": "User",
              "name": "Lorem ipsum",
              "required": true,
              "hasDefault": false,
              "writable": true,
              "location": "_links",
              "_links": {
                "allowedValues": {
                  "href": "/api/v3/a/totally/different/path/to/other/users"
                }
              }
            }
          },
          "3": {
            "loremIpsum": {
              "type": "User",
              "name": "Lorem ipsum",
              "required": true,
              "hasDefault": false,
              "writable": false,
              "location": "_links",
            }
          },
          "4": {}
        }
      }
      ```

      В приведенном выше примере:
        * Если зависимое свойство равно `1`, `2` или `3`:
          * Клиент должен установить свойство `loremIpsum`, поскольку значение `"required": true` для всех трех схем полей
          * Если зависимое свойство равно `1` или `2`, значения, разрешенные для свойства `loremIpsum`, различаются
          * Если зависимое свойство равно `3`, свойство "loremIpsum" будет недоступно для записи
        * Если зависимое свойство равно `4`, свойство "loremIpsum" не существует

      Из-за ограниченности объектов JSON все ключи будут строковыми, даже если зависимое значение на самом деле является чем-то другим (например, целым числом, датой).
      Это также верно для ресурсов, где URL-адрес ресурса используется в качестве ключа.
    name: Схемы
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
      | self | Этот статус | Status | not null | ПРОЧИТАН |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------:       | -------------                                                 | ------- | -----------   | -------------------- |
      | id | Идентификатор состояния | Целое число | x > 0 | ПРОЧИТАНО |
      | имя | Название статуса | Строка | ПРОЧИТАНО |
      | позиция | Индекс сортировки состояния | Целое число | ПРОЧИТАНО |
      | IsDefault | | Логическое значение | | ПРОЧИТАНО |
      | isClosed | считаются ли заявки с таким статусом закрытыми?                 | Boolean | | READ |
      | IsReadOnly | заявки с таким статусом доступны только для чтения?                         | Boolean | | READ |
      | defaultDoneRatio | Процентное значение , применяемое при переходе в этот статус | Целое число | 0 <= x <= 100 | ПРОЧИТАНО |
    name: Статусы
  - description: |-
      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| -------------------------------------------------------------------------- | ----------------------------------------------------------------                                    |
      | Немедленно обновить | Непосредственно внести изменения в эту запись времени | **Разрешение **: "редактировать записи времени" или "редактировать записи собственного времени", если запись времени принадлежит пользователю, или "регистрировать собственное время", если запись времени продолжается |
      | обновление | Конечная точка формы, помогающая в подготовке и внесении изменений в TimeEntry | **Разрешение **: "редактировать записи о времени" или "редактировать записи о собственном времени", если запись о времени принадлежит пользователю, или "регистрировать собственное время", если запись о времени продолжается |
      | удалить | Удалите эту запись о времени | **Разрешение **: "редактировать записи о времени" или "редактировать записи о собственном времени", если запись о времени принадлежит пользователю, или "регистрировать собственное время", если запись о времени продолжается |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | --------------------------------------------------------------                                                                          | -------------       | --------------------- | -------------------- | --------------------------------------------------------- |
      | self | Это временная запись | TimeEntry | not null | READ | |
      | проект | Проект, в который включена временная запись. Проект может отличаться от проекта рабочего пакета после перемещения рабочего пакета. | Project | not null | ЧТЕНИЕ / ЗАПИСЬ | |
      | Рабочий пакет | Рабочий пакет, в котором создается запись о времени | WorkPackage | | ЧТЕНИЕ / ЗАПИСЬ | |
      | пользователь | Запись времени пользователя отслеживает расходы для | User | not null | READ / WRITE | **Разрешение **: Регистрировать время для разрешения других пользователей |
      | активность | Действие по вводу времени запись времени классифицируется как | TimeEntriesActivity | | ЧТЕНИЕ / ЗАПИСЬ | |

      В зависимости от пользовательских полей, определенных для записей о времени, могут существовать дополнительные ссылки.

      Записи о времени связаны либо с рабочим пакетом, либо с проектом. Если они связаны с проектом, ссылка на рабочий пакет будет пустой. Если они связаны с рабочим пакетом, ссылка на проект заполняется автоматически, указывая на проект рабочего пакета.

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
      | id | Идентификатор записи времени | Целое число | x > 0 | ПРОЧИТАНО | |
      | комментарий | Текст, предоставленный пользователем с подробным описанием записи времени | Строка | | ПРОЧИТАНО / ЗАПИСАНО | |
      | Потрачено | Дата, на которую забронированы расходы | Дата | | ПРОЧИТАНО / ЗАПИСАНО | |
      | часы | Время, определяющее количество затрат | Время | | ЧТЕНИЯ / ЗАПИСИ | |
      | продолжается | Отслеживается ли запись времени | Логическое значение | | ЧТЕНИЕ / ЗАПИСЬ | |
      | createdAt | Время создания записи времени | Дата-время | | ЧТЕНИЕ | |
      | Обновлено в | момент последнего обновления записи времени | DateTime | | READ | |

      В зависимости от пользовательских полей, определенных для записей времени, могут существовать дополнительные свойства.
    name: Запись времени
  - description: |-
      Записи о времени классифицируются по действию, которое является одним из элементов набора действий, определенных пользователем (например, проектирование, спецификация, разработка).

      ## Действия

      Никто

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :-----------: | -------------------------------------------------------------- | -------------       | --------------------- | -------------------- | ----------------------------------------- |
      | self | Это действие по вводу времени | TimeEntriesActivity | не является нулевым | ДЛЯ ЧТЕНИЯ | |
      | проекты | Список проектов, в которых активен ввод времени | []Project | не является нулевым | ДЛЯ ЧТЕНИЯ / ЗАПИСИ | |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | ---------------------------------------------------------    | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
      | id | Идентификатор записи времени | Целое число | x > 0 | ПРОЧИТАНО | |
      | имя | Удобочитаемое название, выбранное для этого действия | Строка | не более 30 символов | ПРОЧИТАНО | |
      | позиция | Ранг, который данное действие занимает в списке действий | Дата | | ПРОЧИТАНО | |
      | default | Флаг, указывающий, является ли данное действие действием по умолчанию | Логическим | | READ | |
    name: Деятельность в записи времени
  - description: |-
      Типы рабочих пакетов, представленные в системе.

      Типы существуют глобально и затем активируются для проектов.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
      | self | Этот тип | Type | not null | READ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      |:----------------:| ---------------------------------------------------- | -------- | ----------- | -------------------- |
      | id | Идентификатор типа | Целое число | x > 0 | ЧИТАТЬ |
      | имя | Название типа | Строка | | ЧИТАТЬ |
      | цвет | Цвет , используемый для представления этого типа | Color | | ЧИТАТЬ |
      | позиция | Индекс сортировки типа | Целое число | | ЧИТАТЬ |
      | IsDefault | Активен ли этот тип по умолчанию в новых проектах?      | Boolean | | READ |
      | isMilestone | Являются ли рабочие пакеты этого типа важной вехой? | Boolean | | READ |
      | createdAt | Время создания | DateTime | | ЧТЕНИЕ |
      | updatedAt | Время последнего изменения пользователя | DateTime | | ЧТЕНИЕ |
    name: Типы
  - description: |-
      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:---------:|----------------------------------------------------------| -------------- | --------------------- | -------------------- |
      | self | Это пользовательские предпочтения | UserPreferences | not null | ДЛЯ ЧТЕНИЯ |
      | пользователь | Пользователь, которому принадлежит это предпочтение | User | not null | ДЛЯ ЧТЕНИЯ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      |:----------------------:| -----------------------------------------------------------                     | ----------          | ----------- | -------------------- |
      | Автоскрытие всплывающих окон | Скрывать ли всплывающие окна (например, сообщения об успешном завершении) через 5 секунд | Логическое значение | | ЧТЕНИЕ / ЗАПИСЬ |
      | hideMail | Скрывать почтовый адрес от других пользователей | Логическое значение | | ЧТЕНИЕ | ЗАПИСЬ /
      | уведомления | Настройки уведомлений, которые должен получать пользователь | NotificationSetting | | ЧТЕНИЕ / ЗАПИСЬ |
      | Часовой пояс | Текущий выбранный часовой пояс | Строка | | ЧТЕНИЕ / ЗАПИСЬ |
      | Сортировка комментариев по убыванию | Сортировка комментариев в порядке убывания | Логическое значение | | ЧТЕНИЕ / ЗАПИСЬ |
      | warnOnLeavingUnsaved | Выдает предупреждение при выходе со страницы с несохраненным текстом | Логическое значение | | ЧТЕНИЕ / ЗАПИСЬ |
    name: Пользовательские настройки
  - description: |-
      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |
      | заблокировать | Запретить пользователю входить в систему и выполнять какие-либо действия | не заблокировано; **Разрешение**: Администратор |
      | показать | Ссылку на страницу пользователя METEOR (HTML) | |
      | разблокировать | Разрешить заблокированному пользователю войти в систему и действовать снова | заблокировано; **Разрешение**: Администратор |
      | Немедленно обновить | Обновляет атрибуты пользователя.                                       | **Разрешение**: Администратор, глобальное разрешение manage_user |
      | удалить | Навсегда удалить пользователя из экземпляра | **Разрешение**: Администратор, самоудаление |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      |:-----------:|--------------------------------------------------------------                                                                                                        | -------------     | --------------------- | -------------------- | -----------------------------------------                     |
      | self | Этот пользователь | User | not null | ЧТЕНИЕ | |
      | auth_source | Ссылка на источник аутентификации пользователя (конечная точка еще не реализована) | LdapAuthSource | | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор |
      | участники | Ссылка на список всех участников пользователя. В список будут включены только те участники проектов, для участия в которых запрашивающий пользователь имеет необходимые разрешения. | MemberCollection | | READ | **Разрешение **: просмотр участников или управление участниками в любом проекте |

      В зависимости от пользовательских полей, определенных для пользователей, могут существовать дополнительные ссылки.

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------                           |
      | id | Идентификатор пользователя | Целое число | x > 0 | ЧТЕНИЕ | |
      | логин | Логин пользователя | Строка | уникальный, максимальная длина 256 | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор, глобальное разрешение manage_user |
      | Имя | Фамилия пользователя | Строка | Максимальная длина 30 | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор, глобальное разрешение manage_user |
      | Фамилия | Имя пользователя | Строка | максимальная длина 30 | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор, глобальное разрешение manage_user |
      | имя / Полное имя пользователя, форматирование зависит от настроек экземпляра | Строка | | ЧТЕНИЕ | |
      | электронная почта | Адрес электронной почты пользователя | Строка | уникальный, максимальная длина 60 | ЧТЕНИЕ / ЗАПИСЬ | Адрес электронной почты не скрыт, **Разрешение**: Администратор, глобальное разрешение manage_user |
      | admin | Флаг, указывающий, является ли пользователь администратором | Логическое значение | in: [true, false] | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор |
      | аватар | URL к аватару пользователя | Url | | ЧТЕНИЕ | |
      | статус | Текущий статус активации пользователя (см. ниже)     | Строка | в: ["активен", "зарегистрирован", "заблокирован", "приглашен"]    | ЧИТАТЬ | |
      | язык | Язык пользователя | Строка | ISO 639-1 | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор, глобальное разрешение manage_user |
      | пароль | Пароль пользователя для аутентификации по паролю по умолчанию | Строка | | ЗАПИСЬ | **Разрешение**: Администратор |
      | identity_url | идентификатор_url пользователя для аутентификации OmniAuth | Строка | | ЧТЕНИЕ / ЗАПИСЬ | **Разрешение**: Администратор |
      | createdAt | Время создания | Дата-время | | ЧТЕНИЕ | |
      | UPDATEDATAT | Время последнего изменения пользователя | DateTime | | READ | |

      В зависимости от пользовательских полей, определенных для пользователей, могут существовать дополнительные свойства.

      `status` пользователя может быть одним из:

      * `active` - пользователь может сразу же войти в систему под своей учетной записью

      * `invited` - пользователь приглашен и ожидает регистрации

      Если для `status` пользователя при создании было установлено значение `active`
      , необходимо предоставить одно из следующих средств аутентификации:

      * `password` - пароль, с помощью которого пользователь входит в систему.

      * `auth_source` - ссылка на источник аутентификации LDAP.

      * `identity_url` - Идентификационный URL-адрес поставщика аутентификации OmniAuth.

      Если все они отсутствуют, создание завершится ошибкой "отсутствует пароль".

      `language` доступен только для тех, которые активированы в системе.

      Из-за конфиденциальности данных свойства пользователя ограничены, чтобы как можно меньше раскрывать информацию о пользователе.
      Таким образом, `login`, `firstName`, `lastName`, `language`, `createdAt` и `updatedAt` скрыты для всех
      пользователей, за исключением администраторов или самого пользователя.

      Пожалуйста, обратите внимание, что пользовательские поля еще не поддерживаются api, хотя серверная часть поддерживает их.
    name: Пользователи
  - description: |-
      `Values::Property` представляет собой одну пару ключ - значение. Эта пара обычно представляет собой
      фрагмент свойств ресурса. `Values::Property` сам по себе не является независимым ресурсом. Он всегда будет вложенным и как таковой
      будет существовать только как часть другого ресурса.

      В настоящее время он используется, например, в ресурсе уведомлений.

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :--------------: | ----------------------------| -----------         | --------------------- | -------------------- | ------------------------- |
      | self | Это значение | Values::Property | not null | READ | |
      | схема | Этого значения | Schema | not null | READ | |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции | Условие |
      | :--------------: | ------------------------------------------------------ | -----------  | -------------- | -------------------- | ---------------------------- |
      | свойство | Имя ключа пары | Строка | не null | ДЛЯ ЧТЕНИЯ | |
      | значение | Значение пары | Полиморфное | | ДЛЯ ЧТЕНИЯ | |
    name: Values::Property
  - description: |-
      Рабочие пакеты могут быть привязаны к версии. Таким образом, версии служат для группировки рабочих пакетов в логические блоки, где каждая группа включает все рабочие пакеты, которые необходимо завершить, чтобы версия была завершена.

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|
      | обновление | Формирует конечную точку, которая помогает в подготовке и внесении изменений в версию | **Разрешение**: управление версиями |
      | Немедленно обновлять | Непосредственно вносить изменения в версию | **Разрешение**: управление версиями |

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      |:-------------------:|----------------------------------------- | ------------- | -------------------------------------------------------------- | -------------------- |
      | self | Эта версия | Version | not null | READ |
      | Определение проекта | Проекта, к которому относится версия | Project | присутствует только в том случае, если проект виден текущему пользователю | READ |
      | Доступно в проектах | Проекты, в которых можно использовать эту версию | Projects | not null | READ |

      В зависимости от пользовательских полей, определенных для версий, могут существовать дополнительные связанные свойства.

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |
      | id | Идентификатор версии | Целое число | x > 0 | ЧТЕНИЕ |
      | имя | Название версии | Строка | не null, не должно превышать 60 символов | ЧТЕНИЕ / ЗАПИСЬ |
      | описание | | Форматируемое | | ЧТЕНИЕ / ЗАПИСЬ |
      | Начальная дата | | Дата | | ЧТЕНИЯ / ЗАПИСИ |
      | Конечная дата | | Дата | | ЧТЕНИЯ / ЗАПИСИ |
      | статус | Текущее состояние версии | Строка | не null, только "открыто", "завершено", "закрыто" | ЧТЕНИЕ / ЗАПИСЬ |
      | общий доступ | Текущий статус версии | Строка | не null, ограниченный фиксированным значением, определенным в форме | ЧТЕНИЕ / ЗАПИСЬ |
      | createdAt | Время создания | Дата-время | не null | ЧТЕНИЕ |
      | UPDATEDATAT | Время последнего изменения версии | DateTime | not null | READ |

      В зависимости от пользовательских полей, определенных для версий, могут существовать дополнительные свойства.
    name: Версии/Спринты
  - description: |-
      Представление - это представление некоторой информации. Эта информация может быть запросом (в настоящее время это всегда так).
      В представлении будет храниться конфигурация отображения информации, но не сама информация.

      В этом случае представление может быть графиком, таблицей, диаграммой Ганта или чем-то совершенно другим.
      Клиенту нужно будет выбрать способ представления в представлении. 

      Экземпляр представления всегда будет иметь подтип `Views`, например `Views::WorkPackageslist`. Свойства каждого типа `Views` могут сильно отличаться.

      ** Представление - это новая концепция, поэтому она подвержена изменениям.**

      В настоящее время все еще действует множество ограничений:
        * С представлением всегда будет связан запрос, хотя в концепции complete это ограничение не обязательно.
        * С запросом может быть связано только одно представление.
        * Нет ни конечной точки обновления, ни конечной точки удаления, а также отсутствуют конечные точки схемы и формы. 
          Чтобы удалить представление, просто удалите запрос.
        * Большинство свойств выводятся из связанного запроса и, таким образом, могут быть обновлены только путем обновления запроса.
        * Свойства не отличаются между подтипами `Views`.

      ## Связанные свойства

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :-------------------: | ----------------------------------------                                                                                  | -------------             | --------               | -------------------- |
      | self | Это представление | View (его подтип) | not null | ЧТЕНИЕ |
      | запрос | Это запрос, из которого извлекаются данные | Запрос | not null | ЧТЕНИЕ/ЗАПИСЬ |
      | проект | Это проект, в котором определено представление (выводится из запроса). Если проект не указан, представление считается глобальным.  | Проект | Выводится из запроса | ЧТЕНИЕ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции|
      | :--------------: | ------------------------------------------------------| -----------           | ------------------------------------      | --------------------|
      | _type | Выбранный подтип | String | | ПРОЧИТАНО |
      | id | Идентификатор представления | Целое число | x > 0 | ПРОЧИТАНО |
      | имя | Название представления | Строка | Получено из запроса | ПРОЧИТАНО |
      | общедоступно | Могут ли пользователи, кроме владельца, видеть представление?             | Логическое значение | Выводится из запроса | READ |
      | выделено звездочкой | Должно ли представление быть выделено для пользователя?           | Логическое значение | Выводится из запроса | READ |
      | createdAt | Время создания | Дата-время | не равно нулю | READ |
      | UPDATEDATAT | Время последнего изменения представления | DateTime | not null | READ |
    name: Представления
  - description: |-
      Представляет собой отдельную страницу в вики-проекте.

      *В настоящее время этот ресурс является заглушкой*

      ## Действия

      | Ссылка | Описание | Условие |
      |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
      | Добавить приложение | Прикрепить файл к вики-странице | **Разрешение**: редактировать вики-страницу |

      ## Связанные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |
      | self | Эта вики-страница | WikiPage | not null | ЧИТАТЬ |
      | вложения | Файлы, прикрепленные к этой вики-странице | Коллекция | | ЧИТАТЬ |
      | проект | Проект, к которому принадлежит вики-страница | Project | not null | ЧИТАТЬ |

      ## Локальные свойства

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |
      | id | Идентификатор этой вики-страницы | Целое число | x > 0 | ПРОЧИТАНО |
      | заголовок | Название вики-страницы | Строка | не null | ПРОЧИТАНО |
    name: Вики
  - description: |-
      ## Actions

      | Link                | Description                                                              | Condition                              |
      |:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|
      | addAttachment       | Attach a file to the WP                                                  | **Permission**: edit work package      |
      | addComment          | Post comment to WP                                                       | **Permission**: add work package notes |
      | addRelation         | Adds a relation to this work package.                                    | **Permission**: manage wp relations    |
      | addWatcher          | Add any user to WP watchers                                              | **Permission**: add watcher            |
      | customActions       | Collection of predefined changes that can be applied to the work package |                                        |
      | logTime             | Log time on the work package                                             | **Permission**: Log time, Log own time |
      | previewMarkup       | Post markup (in markdown) here to receive an HTML-rendered response      |                                        |
      | removeWatcher       | Remove any user from WP watchers                                         | **Permission**: delete watcher         |
      | unwatch             | Remove current user from WP watchers                                     | logged in; watching                    |
      | update              | Form endpoint that aids in preparing and performing edits on a WP        | **Permission**: edit work package      |
      | updateImmediately   | Directly perform edits on a work package                                 | **Permission**: edit work package      |
      | watch               | Add current user to WP watchers                                          | logged in; not watching                |

      ## Linked Properties

      | Link               | Description                                                                                                                                           | Type         | Constraints                               | Supported operations  | Condition                                 |
      | :----------------: | ----------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ------------                              | --------------------- | ----------------------------------------- |
      | self               | This work package                                                                                                                                     | WorkPackage  | not null                                  | READ                  |                                           |
      | schema             | The schema of this work package                                                                                                                       | Schema       | not null                                  | READ                  |                                           |
      | ancestors          | Array of all visible ancestors of the work package, with the root node being the first element                                                        | Collection   | not null                                  | READ                  | **Permission** view work packages         |
      | attachments        | The files attached to this work package                                                                                                               | Collection   | not null                                  | READ / WRITE          |                                           |
      | author             | The person that created the work package                                                                                                              | User         | not null                                  | READ                  |                                           |
      | assignee           | The person that is intended to work on the work package                                                                                               | User         |                                           | READ / WRITE          |                                           |
      | availableWatchers  | All users that can be added to the work package as watchers.                                                                                          | User         |                                           | READ                  | **Permission** add work package watchers  |
      | budget             | The budget this work package is associated to                                                                                                         | Budget       |                                           | READ / WRITE          | **Permission** view cost objects          |
      | category           | The category of the work package                                                                                                                      | Category     |                                           | READ / WRITE          |                                           |
      | children           | Array of all visible children of the work package                                                                                                     | Collection   | not null                                  | READ                  | **Permission** view work packages         |
      | parent             | Parent work package                                                                                                                                   | WorkPackage  | Needs to be visible (to the current user) | READ / WRITE          |                                           |
      | priority           | The priority of the work package                                                                                                                      | Priority     | not null                                  | READ / WRITE          |                                           |
      | project            | The project to which the work package belongs                                                                                                         | Project      | not null                                  | READ / WRITE          |                                           |
      | responsible        | The person that is responsible for the overall outcome                                                                                                | User         |                                           | READ / WRITE          |                                           |
      | relations          | Relations this work package is involved in                                                                                                            | Relation     |                                           | READ                  | **Permission** view work packages         |
      | revisions          | Revisions that are referencing the work package                                                                                                       | Revision     |                                           | READ                  | **Permission** view changesets            |
      | status             | The current status of the work package                                                                                                                | Status       | not null                                  | READ / WRITE          |                                           |
      | timeEntries        | All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.  | N/A          |                                           | READ                  | **Permission** view time entries          |
      | type               | The type of the work package                                                                                                                          | Type         | not null                                  | READ / WRITE          |                                           |
      | version            | The version associated to the work package                                                                                                            | Version      |                                           | READ / WRITE          |                                           |
      | watchers           | All users that are currently watching this work package                                                                                               | Collection   |                                           | READ                  | **Permission** view work package watchers |

      ## Local Properties

      | Property                | Description                                                                                                                                                                   | Type        | Constraints                                                                                                                                                                                  | Supported operations | Condition                        |
      | :--------------:        | ------------------------------------------------------                                                                                                                        | ----------- | ------------------------------------------------------------------------------------------------------                                                                                       | -------------------- | -------------------------------- |
      | id                      | Work package id                                                                                                                                                               | Integer     | x > 0                                                                                                                                                                                        | READ                 |                                  |
      | lockVersion             | The version of the item as used for optimistic locking                                                                                                                        | Integer     |                                                                                                                                                                                              | READ                 |                                  |
      | subject                 | Work package subject                                                                                                                                                          | String      | not null; 1 <= length <= 255                                                                                                                                                                 | READ / WRITE         |                                  |
      | type                    | Name of the work package's type                                                                                                                                               | String      | not null                                                                                                                                                                                     | READ                 |                                  |
      | description             | The work package description                                                                                                                                                  | Formattable |                                                                                                                                                                                              | READ / WRITE         |                                  |
      | scheduleManually        | If false (default) schedule automatically.                                                                                                                                    | Boolean     |                                                                                                                                                                                              | READ / WRITE         |                                  |
      | startDate               | Scheduled beginning of a work package                                                                                                                                         | Date        | Cannot be set for parent work packages unless it is scheduled manually; must be equal or greater than the earliest possible start date; Exists only on work packages of a non milestone type | READ / WRITE         |                                  |
      | dueDate                 | Scheduled end of a work package                                                                                                                                               | Date        | Cannot be set for parent work packages unless it is scheduled manually; must be greater than or equal to the start date; Exists only on work packages of a non milestone type                | READ / WRITE         |                                  |
      | date                    | Date on which a milestone is achieved                                                                                                                                         | Date        | Exists only on work packages of a milestone type                                                                                                                                             | READ / WRITE         |                                  |
      | derivedStartDate        | Similar to start date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.       | Date        |                                                                                                                                                                                              | READ                 |                                  |
      | derivedDueDate          | Similar to due date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.         | Date        |                                                                                                                                                                                              | READ                 |                                  |
      | duration                | The amount of time in hours the work package needs to be completed.                                                                                                           | Duration    | Not available for milestone type of work packages.                                                                                                                                           | READ / WRITE         |                                  |
      | estimatedTime           | Time a work package likely needs to be completed excluding its descendants                                                                                                    | Duration    |                                                                                                                                                                                              | READ / WRITE         |                                  |
      | derivedEstimatedTime    | Time a work package likely needs to be completed including its descendants                                                                                                    | Duration    |                                                                                                                                                                                              | READ                 |                                  |
      | ignoreNonWorkingDays    | When scheduling, whether or not to ignore the non working days being defined. A work package with the flag set to true will be allowed to be scheduled to a non working day.  | Boolean     | Cannot be set for parent work packages unless it is scheduled manually                                                                                                                       | READ                 |                                  |
      | spentTime               | The time booked for this work package by users working on it                                                                                                                  | Duration    |                                                                                                                                                                                              | READ                 | **Permission** view time entries |
      | percentageDone          | Amount of total completion for a work package                                                                                                                                 | Integer     | 0 <= x <= 100; Cannot be set for parent work packages                                                                                                                                        | READ / WRITE         |                                  |
      | readonly                | If true, the work package is in a readonly status so with the exception of the status, no other property can be altered.                                                      | Boolean     |                                                                                                                                                                                              | READ                 | Enterprise edition only          |
      | createdAt               | Time of creation                                                                                                                                                              | DateTime    |                                                                                                                                                                                              | READ                 |                                  |
      | updatedAt               | Time of the most recent change to the work package                                                                                                                            | DateTime    |                                                                                                                                                                                              | READ                 |                                  |

      Note that the properties listed here only cover the built-in properties of the METEOR Core.
      Using plug-ins and custom fields a work package might contain various additional properties.
      A client can consult the schema information to which the work package links. The schema will contain information about
      all properties of the linking work package, including properties added by plug-ins and custom fields.

      Custom fields are identified by a key in the form of `customFieldN`, where `N` is an integer. Depending on their type,
      they can occur as properties or as linked properties. A client has to consult the schema to resolve
      the human readable name of custom fields.

      Properties that cannot be set directly on parent work packages are inferred from their children instead:

      * `startDate` is the earliest start date from its children if manual scheduling is activated.

      * `dueDate` is the latest finish date from its children if manual scheduling is activated.

      * `estimatedTime` is the sum of estimated times from its children

      * `percentageDone` is the weighted average of the sum of its children percentages done. The weight is given by the average of its children estimatedHours. However, if the percentage done is given by a work package's status, then only the status matters and no value is inferred.

      `startDate` can also not be earlier than a finish date of any predecessor.

      While attachments are returned as a link which's content is to be fetched separately, clients can choose to
      replace the work package's attachments by providing an array of already uploaded [Attachment resources](https://meteor-docs.gitbook.io/docs/api/endpoints/attachments/) 
      on [create](https://meteor-docs.gitbook.io/docs/api/endpoints/work-packages/#create-work-package)
      and [update](https://meteor-docs.gitbook.io/docs/api/endpoints/work-packages/#update-a-work-package). The attachments the work package has had prior to the request will be removed.
    name: Рабочие пакеты/Задачи
  - name: График работы
    description: |-
      Рабочий график определяет, являются ли дни рабочими или нерабочими.

      День может быть нерабочим, если выполняется любое из этих двух условий:

        - день является повторяющимся нерабочим днем недели: выходным днем. Например
          В большинстве стран воскресенье нерабочее;
        - этот день был определен как нерабочий: национальные банковские праздники или
      другие дни, которые считаются особенными. Например, 1 января - это Новый год.
          в большинстве стран он является выходным днем для банков.

      Конечные точки могут определять, какие дни недели являются рабочими/нерабочими, а какие
      даты - нерабочими.

      Для представления рабочего графика используются модели `Day`, `WeekDay`, и `NonWorkingDay`.

      ## Действия в течение дня

      Никто

      ## Свойства, связанные с днем

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :---------------: | ---------------------------------------------------------------- | ------------------------- | ----------- | -------------------- |
      | self | Этот день | Day | not null | ЧИТАТЬ |
      | Нерабочие причины | Список ресурсов, описывающих, почему этот день является нерабочим | (будний/нерабочий день)[] | | ЧИТАТЬ |
      | День недели | День недели для этого дня | День недели | не равен нулю | ПРОЧИТАНО /

      ## Локальные свойства дня

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :--------: | ------------------------------------------- | ------- | -------------- | -------------------- |
      | дата | Дата в формате ISO8601 (ГГГГ-ММ-ДД) | Дата | не нулевая | СЧИТЫВАЕТСЯ |
      | название | Название дня | Строка | не нулевая | СЧИТЫВАЕТСЯ |
      | рабочий | `true` для рабочего дня, `false` в противном случае | Логическое значение | не null | ДЛЯ ЧТЕНИЯ |


      ## Действия в будний день

      | Ссылка | Описание | Условие |
      | :----: | -------------------- | ---------------------------------- |
      | обновить | Обновить на этой неделе | **Разрешение **: редактировать расписание работы |

      ## Свойства, связанные с днем недели

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--: | ------------- | ------- | ----------- | -------------------- |
      | self | День на этой неделе | День недели | не равен нулю | ПРОЧИТАНО |

      ## Локальные свойства дня недели

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции /
      | :------: | --------------------------------------------------- | ------- | -------------- | -------------------- |
      | день | День недели с 1 по 7. 1 - понедельник. 7 - воскресенье. | Целое число | x >= 1, x <= 7 | ЧИТАТЬ |
      | имя | Название дня недели | Строка | не null | ЧИТАТЬ |
      | рабочий | `true` для дня рабочей недели, `false` в противном случае | Логическое значение | не null | ДЛЯ ЧТЕНИЯ/ЗАПИСИ |


      ## Действия в нерабочий день

      | Ссылка | Описание | Условие |
      | :----: | --------------------------- | ---------------------------------- |
      | обновить | Обновить в этот нерабочий день | **Разрешение **: редактировать расписание работы |

      ## Свойства, связанные с нерабочим днем

      | Ссылка | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :--: | -------------------- | ------------- | ----------- | -------------------- |
      | self | Этот нерабочий день | NonWorkingDay | not null | READ |

      ## Локальные свойства в нерабочий день

      | Свойство | Описание | Тип | Ограничения | Поддерживаемые операции |
      | :------: | --------------------------------------- | ------ | ----------- | -------------------- |
      | дата | Дата в формате ISO8601 (ГГГГ-ММ-ДД) | Дата | не нулевая | ДЛЯ ЧТЕНИЯ |
      | название | Название нерабочего дня | Строка | не нулевая | ДЛЯ ЧТЕНИЯ/ЗАПИСИ |
security:
  - BasicAuth: []
